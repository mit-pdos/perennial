(* autogenerated from crypto/rand *)
From New.golang Require Import defn.

Definition rand : go_string := "crypto/rand".

Module rand.
Section code.
Context `{ffi_syntax}.


Definition Reader : go_string := "crypto/rand.Reader"%go.

Definition init : go_string := "crypto/rand.init"%go.

Definition fatal : go_string := "crypto/rand.fatal"%go.

Definition Read : go_string := "crypto/rand.Read"%go.

Definition Text : go_string := "crypto/rand.Text"%go.

Definition Prime : go_string := "crypto/rand.Prime"%go.

Definition Int : go_string := "crypto/rand.Int"%go.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo rand.rand :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #rand.rand (λ: <>,
      exception_do (do:  (package.alloc rand.rand #()))
      ).

End code.
End rand.
