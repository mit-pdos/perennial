(* autogenerated from go.etcd.io/etcd/server/v3/storage/schema *)

From New.golang Require Import defn.
Definition schema : go_string := "go.etcd.io/etcd/server/v3/storage/schema".

Module schema.

Module action. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.action"%go. End action.
Module setKeyAction. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.setKeyAction"%go. End setKeyAction.
Module deleteKeyAction. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.deleteKeyAction"%go. End deleteKeyAction.
Module ActionList. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ActionList"%go. End ActionList.
Module alarmBackend. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.alarmBackend"%go. End alarmBackend.
Module authBackend. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authBackend"%go. End authBackend.
Module authReadTx. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authReadTx"%go. End authReadTx.
Module authBatchTx. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authBatchTx"%go. End authBatchTx.
Module bucket. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.bucket"%go. End bucket.
Module schemaChange. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.schemaChange"%go. End schemaChange.
Module simpleSchemaChange. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.simpleSchemaChange"%go. End simpleSchemaChange.
Module membershipBackend. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.membershipBackend"%go. End membershipBackend.
Module migrationPlan. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.migrationPlan"%go. End migrationPlan.
Module migrationStep. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.migrationStep"%go. End migrationStep.
Module WALVersion. Definition id : go_string := "go.etcd.io/etcd/server/v3/storage/schema.WALVersion"%go. End WALVersion.

Section code.
Context `{ffi_syntax}.


Axiom action : go_type.

Axiom setKeyAction : go_type.

Axiom deleteKeyAction : go_type.

Definition restoreFieldValueAction : go_string := "go.etcd.io/etcd/server/v3/storage/schema.restoreFieldValueAction"%go.

Axiom ActionList : go_type.

Axiom alarmBackend : go_type.

Definition NewAlarmBackend : go_string := "go.etcd.io/etcd/server/v3/storage/schema.NewAlarmBackend"%go.

Axiom revBytesLen : Z.

Definition authEnabled : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authEnabled"%go.

Axiom authEnabled'init : val.

Definition authDisabled : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authDisabled"%go.

Axiom authDisabled'init : val.

Axiom authBackend : go_type.

Definition NewAuthBackend : go_string := "go.etcd.io/etcd/server/v3/storage/schema.NewAuthBackend"%go.

Axiom authReadTx : go_type.

Axiom authBatchTx : go_type.

Definition unsafeReadAuthEnabled : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeReadAuthEnabled"%go.

Definition unsafeReadAuthRevision : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeReadAuthRevision"%go.

Definition UnsafeCreateAuthRolesBucket : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeCreateAuthRolesBucket"%go.

Definition unsafeGetRole : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeGetRole"%go.

Definition unsafeGetAllRoles : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeGetAllRoles"%go.

Definition unsafeGetUser : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeGetUser"%go.

Definition unsafeGetAllUsers : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeGetAllUsers"%go.

Definition keyBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.keyBucketName"%go.

Axiom keyBucketName'init : val.

Definition metaBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.metaBucketName"%go.

Axiom metaBucketName'init : val.

Definition leaseBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.leaseBucketName"%go.

Axiom leaseBucketName'init : val.

Definition alarmBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.alarmBucketName"%go.

Axiom alarmBucketName'init : val.

Definition clusterBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.clusterBucketName"%go.

Axiom clusterBucketName'init : val.

Definition membersBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.membersBucketName"%go.

Axiom membersBucketName'init : val.

Definition membersRemovedBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.membersRemovedBucketName"%go.

Axiom membersRemovedBucketName'init : val.

Definition authBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authBucketName"%go.

Axiom authBucketName'init : val.

Definition authUsersBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authUsersBucketName"%go.

Axiom authUsersBucketName'init : val.

Definition authRolesBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.authRolesBucketName"%go.

Axiom authRolesBucketName'init : val.

Definition testBucketName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.testBucketName"%go.

Axiom testBucketName'init : val.

Definition Key : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Key"%go.

Axiom Key'init : val.

Definition Meta : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Meta"%go.

Axiom Meta'init : val.

Definition Lease : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Lease"%go.

Axiom Lease'init : val.

Definition Alarm : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Alarm"%go.

Axiom Alarm'init : val.

Definition Cluster : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Cluster"%go.

Axiom Cluster'init : val.

Definition Members : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Members"%go.

Axiom Members'init : val.

Definition MembersRemoved : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MembersRemoved"%go.

Axiom MembersRemoved'init : val.

Definition Auth : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Auth"%go.

Axiom Auth'init : val.

Definition AuthUsers : go_string := "go.etcd.io/etcd/server/v3/storage/schema.AuthUsers"%go.

Axiom AuthUsers'init : val.

Definition AuthRoles : go_string := "go.etcd.io/etcd/server/v3/storage/schema.AuthRoles"%go.

Axiom AuthRoles'init : val.

Definition Test : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Test"%go.

Axiom Test'init : val.

Definition AllBuckets : go_string := "go.etcd.io/etcd/server/v3/storage/schema.AllBuckets"%go.

Axiom AllBuckets'init : val.

Axiom bucket : go_type.

Definition ScheduledCompactKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ScheduledCompactKeyName"%go.

Axiom ScheduledCompactKeyName'init : val.

Definition FinishedCompactKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.FinishedCompactKeyName"%go.

Axiom FinishedCompactKeyName'init : val.

Definition MetaConsistentIndexKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MetaConsistentIndexKeyName"%go.

Axiom MetaConsistentIndexKeyName'init : val.

Definition AuthEnabledKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.AuthEnabledKeyName"%go.

Axiom AuthEnabledKeyName'init : val.

Definition AuthRevisionKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.AuthRevisionKeyName"%go.

Axiom AuthRevisionKeyName'init : val.

Definition MetaTermKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MetaTermKeyName"%go.

Axiom MetaTermKeyName'init : val.

Definition MetaConfStateName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MetaConfStateName"%go.

Axiom MetaConfStateName'init : val.

Definition ClusterClusterVersionKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ClusterClusterVersionKeyName"%go.

Axiom ClusterClusterVersionKeyName'init : val.

Definition ClusterDowngradeKeyName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ClusterDowngradeKeyName"%go.

Axiom ClusterDowngradeKeyName'init : val.

Definition MetaStorageVersionName : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MetaStorageVersionName"%go.

Axiom MetaStorageVersionName'init : val.

Definition DefaultIgnores : go_string := "go.etcd.io/etcd/server/v3/storage/schema.DefaultIgnores"%go.

Definition BackendMemberKey : go_string := "go.etcd.io/etcd/server/v3/storage/schema.BackendMemberKey"%go.

Axiom schemaChange : go_type.

Definition addNewField : go_string := "go.etcd.io/etcd/server/v3/storage/schema.addNewField"%go.

Axiom simpleSchemaChange : go_type.

Definition UnsafeCreateMetaBucket : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeCreateMetaBucket"%go.

Definition CreateMetaBucket : go_string := "go.etcd.io/etcd/server/v3/storage/schema.CreateMetaBucket"%go.

Definition UnsafeReadConsistentIndex : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeReadConsistentIndex"%go.

Definition ReadConsistentIndex : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ReadConsistentIndex"%go.

Definition UnsafeUpdateConsistentIndexForce : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeUpdateConsistentIndexForce"%go.

Definition UnsafeUpdateConsistentIndex : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeUpdateConsistentIndex"%go.

Definition unsafeUpdateConsistentIndex : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeUpdateConsistentIndex"%go.

Definition MustUnsafeSaveConfStateToBackend : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MustUnsafeSaveConfStateToBackend"%go.

Definition UnsafeConfStateFromBackend : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeConfStateFromBackend"%go.

Definition UnsafeCreateLeaseBucket : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeCreateLeaseBucket"%go.

Definition MustUnsafeGetAllLeases : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MustUnsafeGetAllLeases"%go.

Definition MustUnsafePutLease : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MustUnsafePutLease"%go.

Definition UnsafeDeleteLease : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeDeleteLease"%go.

Definition MustUnsafeGetLease : go_string := "go.etcd.io/etcd/server/v3/storage/schema.MustUnsafeGetLease"%go.

Definition leaseIDToBytes : go_string := "go.etcd.io/etcd/server/v3/storage/schema.leaseIDToBytes"%go.

Definition bytesToLeaseID : go_string := "go.etcd.io/etcd/server/v3/storage/schema.bytesToLeaseID"%go.

Axiom MemberAttributesSuffix : go_string.

Axiom MemberRaftAttributesSuffix : go_string.

Axiom membershipBackend : go_type.

Definition NewMembershipBackend : go_string := "go.etcd.io/etcd/server/v3/storage/schema.NewMembershipBackend"%go.

Definition mustParseMemberIDFromBytes : go_string := "go.etcd.io/etcd/server/v3/storage/schema.mustParseMemberIDFromBytes"%go.

Axiom migrationPlan : go_type.

Definition newPlan : go_string := "go.etcd.io/etcd/server/v3/storage/schema.newPlan"%go.

Axiom migrationStep : go_type.

Definition newMigrationStep : go_string := "go.etcd.io/etcd/server/v3/storage/schema.newMigrationStep"%go.

Definition trimToMinor : go_string := "go.etcd.io/etcd/server/v3/storage/schema.trimToMinor"%go.

Definition Validate : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Validate"%go.

Definition unsafeValidate : go_string := "go.etcd.io/etcd/server/v3/storage/schema.unsafeValidate"%go.

Definition localBinaryVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.localBinaryVersion"%go.

Axiom WALVersion : go_type.

Definition Migrate : go_string := "go.etcd.io/etcd/server/v3/storage/schema.Migrate"%go.

Definition UnsafeMigrate : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeMigrate"%go.

Definition DetectSchemaVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.DetectSchemaVersion"%go.

Definition UnsafeDetectSchemaVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeDetectSchemaVersion"%go.

Definition schemaChangesForVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.schemaChangesForVersion"%go.

Definition schemaChanges : go_string := "go.etcd.io/etcd/server/v3/storage/schema.schemaChanges"%go.

Axiom schemaChanges'init : val.

Definition emptyStorageVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.emptyStorageVersion"%go.

Axiom emptyStorageVersion'init : val.

Definition ReadStorageVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ReadStorageVersion"%go.

Definition UnsafeReadStorageVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeReadStorageVersion"%go.

Definition ReadStorageVersionFromSnapshot : go_string := "go.etcd.io/etcd/server/v3/storage/schema.ReadStorageVersionFromSnapshot"%go.

Definition UnsafeSetStorageVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeSetStorageVersion"%go.

Definition UnsafeClearStorageVersion : go_string := "go.etcd.io/etcd/server/v3/storage/schema.UnsafeClearStorageVersion"%go.

Definition vars' : list (go_string * go_type) := [].

Axiom restoreFieldValueActionⁱᵐᵖˡ : val.

Axiom NewAlarmBackendⁱᵐᵖˡ : val.

Axiom NewAuthBackendⁱᵐᵖˡ : val.

Axiom unsafeReadAuthEnabledⁱᵐᵖˡ : val.

Axiom unsafeReadAuthRevisionⁱᵐᵖˡ : val.

Axiom UnsafeCreateAuthRolesBucketⁱᵐᵖˡ : val.

Axiom unsafeGetRoleⁱᵐᵖˡ : val.

Axiom unsafeGetAllRolesⁱᵐᵖˡ : val.

Axiom unsafeGetUserⁱᵐᵖˡ : val.

Axiom unsafeGetAllUsersⁱᵐᵖˡ : val.

Axiom DefaultIgnoresⁱᵐᵖˡ : val.

Axiom BackendMemberKeyⁱᵐᵖˡ : val.

Axiom addNewFieldⁱᵐᵖˡ : val.

Axiom UnsafeCreateMetaBucketⁱᵐᵖˡ : val.

Axiom CreateMetaBucketⁱᵐᵖˡ : val.

Axiom UnsafeReadConsistentIndexⁱᵐᵖˡ : val.

Axiom ReadConsistentIndexⁱᵐᵖˡ : val.

Axiom UnsafeUpdateConsistentIndexForceⁱᵐᵖˡ : val.

Axiom UnsafeUpdateConsistentIndexⁱᵐᵖˡ : val.

Axiom unsafeUpdateConsistentIndexⁱᵐᵖˡ : val.

Axiom MustUnsafeSaveConfStateToBackendⁱᵐᵖˡ : val.

Axiom UnsafeConfStateFromBackendⁱᵐᵖˡ : val.

Axiom UnsafeCreateLeaseBucketⁱᵐᵖˡ : val.

Axiom MustUnsafeGetAllLeasesⁱᵐᵖˡ : val.

Axiom MustUnsafePutLeaseⁱᵐᵖˡ : val.

Axiom UnsafeDeleteLeaseⁱᵐᵖˡ : val.

Axiom MustUnsafeGetLeaseⁱᵐᵖˡ : val.

Axiom leaseIDToBytesⁱᵐᵖˡ : val.

Axiom bytesToLeaseIDⁱᵐᵖˡ : val.

Axiom NewMembershipBackendⁱᵐᵖˡ : val.

Axiom mustParseMemberIDFromBytesⁱᵐᵖˡ : val.

Axiom newPlanⁱᵐᵖˡ : val.

Axiom newMigrationStepⁱᵐᵖˡ : val.

Axiom trimToMinorⁱᵐᵖˡ : val.

Axiom Validateⁱᵐᵖˡ : val.

Axiom unsafeValidateⁱᵐᵖˡ : val.

Axiom localBinaryVersionⁱᵐᵖˡ : val.

Axiom Migrateⁱᵐᵖˡ : val.

Axiom UnsafeMigrateⁱᵐᵖˡ : val.

Axiom DetectSchemaVersionⁱᵐᵖˡ : val.

Axiom UnsafeDetectSchemaVersionⁱᵐᵖˡ : val.

Axiom schemaChangesForVersionⁱᵐᵖˡ : val.

Axiom ReadStorageVersionⁱᵐᵖˡ : val.

Axiom UnsafeReadStorageVersionⁱᵐᵖˡ : val.

Axiom ReadStorageVersionFromSnapshotⁱᵐᵖˡ : val.

Axiom UnsafeSetStorageVersionⁱᵐᵖˡ : val.

Axiom UnsafeClearStorageVersionⁱᵐᵖˡ : val.

Definition functions' : list (go_string * val) := [(restoreFieldValueAction, restoreFieldValueActionⁱᵐᵖˡ); (NewAlarmBackend, NewAlarmBackendⁱᵐᵖˡ); (NewAuthBackend, NewAuthBackendⁱᵐᵖˡ); (unsafeReadAuthEnabled, unsafeReadAuthEnabledⁱᵐᵖˡ); (unsafeReadAuthRevision, unsafeReadAuthRevisionⁱᵐᵖˡ); (UnsafeCreateAuthRolesBucket, UnsafeCreateAuthRolesBucketⁱᵐᵖˡ); (unsafeGetRole, unsafeGetRoleⁱᵐᵖˡ); (unsafeGetAllRoles, unsafeGetAllRolesⁱᵐᵖˡ); (unsafeGetUser, unsafeGetUserⁱᵐᵖˡ); (unsafeGetAllUsers, unsafeGetAllUsersⁱᵐᵖˡ); (DefaultIgnores, DefaultIgnoresⁱᵐᵖˡ); (BackendMemberKey, BackendMemberKeyⁱᵐᵖˡ); (addNewField, addNewFieldⁱᵐᵖˡ); (UnsafeCreateMetaBucket, UnsafeCreateMetaBucketⁱᵐᵖˡ); (CreateMetaBucket, CreateMetaBucketⁱᵐᵖˡ); (UnsafeReadConsistentIndex, UnsafeReadConsistentIndexⁱᵐᵖˡ); (ReadConsistentIndex, ReadConsistentIndexⁱᵐᵖˡ); (UnsafeUpdateConsistentIndexForce, UnsafeUpdateConsistentIndexForceⁱᵐᵖˡ); (UnsafeUpdateConsistentIndex, UnsafeUpdateConsistentIndexⁱᵐᵖˡ); (unsafeUpdateConsistentIndex, unsafeUpdateConsistentIndexⁱᵐᵖˡ); (MustUnsafeSaveConfStateToBackend, MustUnsafeSaveConfStateToBackendⁱᵐᵖˡ); (UnsafeConfStateFromBackend, UnsafeConfStateFromBackendⁱᵐᵖˡ); (UnsafeCreateLeaseBucket, UnsafeCreateLeaseBucketⁱᵐᵖˡ); (MustUnsafeGetAllLeases, MustUnsafeGetAllLeasesⁱᵐᵖˡ); (MustUnsafePutLease, MustUnsafePutLeaseⁱᵐᵖˡ); (UnsafeDeleteLease, UnsafeDeleteLeaseⁱᵐᵖˡ); (MustUnsafeGetLease, MustUnsafeGetLeaseⁱᵐᵖˡ); (leaseIDToBytes, leaseIDToBytesⁱᵐᵖˡ); (bytesToLeaseID, bytesToLeaseIDⁱᵐᵖˡ); (NewMembershipBackend, NewMembershipBackendⁱᵐᵖˡ); (mustParseMemberIDFromBytes, mustParseMemberIDFromBytesⁱᵐᵖˡ); (newPlan, newPlanⁱᵐᵖˡ); (newMigrationStep, newMigrationStepⁱᵐᵖˡ); (trimToMinor, trimToMinorⁱᵐᵖˡ); (Validate, Validateⁱᵐᵖˡ); (unsafeValidate, unsafeValidateⁱᵐᵖˡ); (localBinaryVersion, localBinaryVersionⁱᵐᵖˡ); (Migrate, Migrateⁱᵐᵖˡ); (UnsafeMigrate, UnsafeMigrateⁱᵐᵖˡ); (DetectSchemaVersion, DetectSchemaVersionⁱᵐᵖˡ); (UnsafeDetectSchemaVersion, UnsafeDetectSchemaVersionⁱᵐᵖˡ); (schemaChangesForVersion, schemaChangesForVersionⁱᵐᵖˡ); (ReadStorageVersion, ReadStorageVersionⁱᵐᵖˡ); (UnsafeReadStorageVersion, UnsafeReadStorageVersionⁱᵐᵖˡ); (ReadStorageVersionFromSnapshot, ReadStorageVersionFromSnapshotⁱᵐᵖˡ); (UnsafeSetStorageVersion, UnsafeSetStorageVersionⁱᵐᵖˡ); (UnsafeClearStorageVersion, UnsafeClearStorageVersionⁱᵐᵖˡ)].

Axiom setKeyAction__unsafeDoⁱᵐᵖˡ : val.

Axiom deleteKeyAction__unsafeDoⁱᵐᵖˡ : val.

Axiom ActionList__unsafeExecuteⁱᵐᵖˡ : val.

Axiom ActionList__unsafeExecuteInReversedOrderⁱᵐᵖˡ : val.

Axiom alarmBackend__CreateAlarmBucketⁱᵐᵖˡ : val.

Axiom alarmBackend__ForceCommitⁱᵐᵖˡ : val.

Axiom alarmBackend__GetAllAlarmsⁱᵐᵖˡ : val.

Axiom alarmBackend__MustDeleteAlarmⁱᵐᵖˡ : val.

Axiom alarmBackend__MustPutAlarmⁱᵐᵖˡ : val.

Axiom alarmBackend__mustUnsafeDeleteAlarmⁱᵐᵖˡ : val.

Axiom alarmBackend__mustUnsafePutAlarmⁱᵐᵖˡ : val.

Axiom alarmBackend__unsafeGetAllAlarmsⁱᵐᵖˡ : val.

Axiom authBackend__BatchTxⁱᵐᵖˡ : val.

Axiom authBackend__CreateAuthBucketsⁱᵐᵖˡ : val.

Axiom authBackend__ForceCommitⁱᵐᵖˡ : val.

Axiom authBackend__GetAllRolesⁱᵐᵖˡ : val.

Axiom authBackend__GetAllUsersⁱᵐᵖˡ : val.

Axiom authBackend__GetRoleⁱᵐᵖˡ : val.

Axiom authBackend__GetUserⁱᵐᵖˡ : val.

Axiom authBackend__ReadTxⁱᵐᵖˡ : val.

Axiom authReadTx__RLockⁱᵐᵖˡ : val.

Axiom authReadTx__RUnlockⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeGetAllRolesⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeGetAllUsersⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeGetRoleⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeGetUserⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeReadAuthEnabledⁱᵐᵖˡ : val.

Axiom authReadTx__UnsafeReadAuthRevisionⁱᵐᵖˡ : val.

Axiom authBatchTx__Lockⁱᵐᵖˡ : val.

Axiom authBatchTx__Unlockⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeDeleteRoleⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeDeleteUserⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeGetAllRolesⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeGetAllUsersⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeGetRoleⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeGetUserⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafePutRoleⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafePutUserⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeReadAuthEnabledⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeReadAuthRevisionⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeSaveAuthEnabledⁱᵐᵖˡ : val.

Axiom authBatchTx__UnsafeSaveAuthRevisionⁱᵐᵖˡ : val.

Axiom bucket__IDⁱᵐᵖˡ : val.

Axiom bucket__IsSafeRangeBucketⁱᵐᵖˡ : val.

Axiom bucket__Nameⁱᵐᵖˡ : val.

Axiom bucket__Stringⁱᵐᵖˡ : val.

Axiom simpleSchemaChange__downgradeActionⁱᵐᵖˡ : val.

Axiom simpleSchemaChange__upgradeActionⁱᵐᵖˡ : val.

Axiom membershipBackend__ClusterVersionFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__DowngradeInfoFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__MustCreateBackendBucketsⁱᵐᵖˡ : val.

Axiom membershipBackend__MustDeleteMemberFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__MustReadMembersFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__MustSaveClusterVersionToBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__MustSaveDowngradeToBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__MustSaveMemberToBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__TrimClusterFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__TrimMembershipFromBackendⁱᵐᵖˡ : val.

Axiom membershipBackend__readMembersFromBackendⁱᵐᵖˡ : val.

Axiom migrationPlan__Executeⁱᵐᵖˡ : val.

Axiom migrationPlan__unsafeExecuteⁱᵐᵖˡ : val.

Axiom migrationStep__unsafeExecuteⁱᵐᵖˡ : val.

Definition msets' : list (go_string * (list (go_string * val))) := [(setKeyAction.id, [("unsafeDo"%go, setKeyAction__unsafeDoⁱᵐᵖˡ)]); (ptrT.id setKeyAction.id, [("unsafeDo"%go, setKeyAction__unsafeDoⁱᵐᵖˡ)]); (deleteKeyAction.id, [("unsafeDo"%go, deleteKeyAction__unsafeDoⁱᵐᵖˡ)]); (ptrT.id deleteKeyAction.id, [("unsafeDo"%go, deleteKeyAction__unsafeDoⁱᵐᵖˡ)]); (ActionList.id, [("unsafeExecute"%go, ActionList__unsafeExecuteⁱᵐᵖˡ); ("unsafeExecuteInReversedOrder"%go, ActionList__unsafeExecuteInReversedOrderⁱᵐᵖˡ)]); (ptrT.id ActionList.id, [("unsafeExecute"%go, ActionList__unsafeExecuteⁱᵐᵖˡ); ("unsafeExecuteInReversedOrder"%go, ActionList__unsafeExecuteInReversedOrderⁱᵐᵖˡ)]); (alarmBackend.id, [("ForceCommit"%go, alarmBackend__ForceCommitⁱᵐᵖˡ)]); (ptrT.id alarmBackend.id, [("CreateAlarmBucket"%go, alarmBackend__CreateAlarmBucketⁱᵐᵖˡ); ("ForceCommit"%go, alarmBackend__ForceCommitⁱᵐᵖˡ); ("GetAllAlarms"%go, alarmBackend__GetAllAlarmsⁱᵐᵖˡ); ("MustDeleteAlarm"%go, alarmBackend__MustDeleteAlarmⁱᵐᵖˡ); ("MustPutAlarm"%go, alarmBackend__MustPutAlarmⁱᵐᵖˡ); ("mustUnsafeDeleteAlarm"%go, alarmBackend__mustUnsafeDeleteAlarmⁱᵐᵖˡ); ("mustUnsafePutAlarm"%go, alarmBackend__mustUnsafePutAlarmⁱᵐᵖˡ); ("unsafeGetAllAlarms"%go, alarmBackend__unsafeGetAllAlarmsⁱᵐᵖˡ)]); (authBackend.id, []); (ptrT.id authBackend.id, [("BatchTx"%go, authBackend__BatchTxⁱᵐᵖˡ); ("CreateAuthBuckets"%go, authBackend__CreateAuthBucketsⁱᵐᵖˡ); ("ForceCommit"%go, authBackend__ForceCommitⁱᵐᵖˡ); ("GetAllRoles"%go, authBackend__GetAllRolesⁱᵐᵖˡ); ("GetAllUsers"%go, authBackend__GetAllUsersⁱᵐᵖˡ); ("GetRole"%go, authBackend__GetRoleⁱᵐᵖˡ); ("GetUser"%go, authBackend__GetUserⁱᵐᵖˡ); ("ReadTx"%go, authBackend__ReadTxⁱᵐᵖˡ)]); (authReadTx.id, []); (ptrT.id authReadTx.id, [("RLock"%go, authReadTx__RLockⁱᵐᵖˡ); ("RUnlock"%go, authReadTx__RUnlockⁱᵐᵖˡ); ("UnsafeGetAllRoles"%go, authReadTx__UnsafeGetAllRolesⁱᵐᵖˡ); ("UnsafeGetAllUsers"%go, authReadTx__UnsafeGetAllUsersⁱᵐᵖˡ); ("UnsafeGetRole"%go, authReadTx__UnsafeGetRoleⁱᵐᵖˡ); ("UnsafeGetUser"%go, authReadTx__UnsafeGetUserⁱᵐᵖˡ); ("UnsafeReadAuthEnabled"%go, authReadTx__UnsafeReadAuthEnabledⁱᵐᵖˡ); ("UnsafeReadAuthRevision"%go, authReadTx__UnsafeReadAuthRevisionⁱᵐᵖˡ)]); (authBatchTx.id, []); (ptrT.id authBatchTx.id, [("Lock"%go, authBatchTx__Lockⁱᵐᵖˡ); ("Unlock"%go, authBatchTx__Unlockⁱᵐᵖˡ); ("UnsafeDeleteRole"%go, authBatchTx__UnsafeDeleteRoleⁱᵐᵖˡ); ("UnsafeDeleteUser"%go, authBatchTx__UnsafeDeleteUserⁱᵐᵖˡ); ("UnsafeGetAllRoles"%go, authBatchTx__UnsafeGetAllRolesⁱᵐᵖˡ); ("UnsafeGetAllUsers"%go, authBatchTx__UnsafeGetAllUsersⁱᵐᵖˡ); ("UnsafeGetRole"%go, authBatchTx__UnsafeGetRoleⁱᵐᵖˡ); ("UnsafeGetUser"%go, authBatchTx__UnsafeGetUserⁱᵐᵖˡ); ("UnsafePutRole"%go, authBatchTx__UnsafePutRoleⁱᵐᵖˡ); ("UnsafePutUser"%go, authBatchTx__UnsafePutUserⁱᵐᵖˡ); ("UnsafeReadAuthEnabled"%go, authBatchTx__UnsafeReadAuthEnabledⁱᵐᵖˡ); ("UnsafeReadAuthRevision"%go, authBatchTx__UnsafeReadAuthRevisionⁱᵐᵖˡ); ("UnsafeSaveAuthEnabled"%go, authBatchTx__UnsafeSaveAuthEnabledⁱᵐᵖˡ); ("UnsafeSaveAuthRevision"%go, authBatchTx__UnsafeSaveAuthRevisionⁱᵐᵖˡ)]); (bucket.id, [("ID"%go, bucket__IDⁱᵐᵖˡ); ("IsSafeRangeBucket"%go, bucket__IsSafeRangeBucketⁱᵐᵖˡ); ("Name"%go, bucket__Nameⁱᵐᵖˡ); ("String"%go, bucket__Stringⁱᵐᵖˡ)]); (ptrT.id bucket.id, [("ID"%go, bucket__IDⁱᵐᵖˡ); ("IsSafeRangeBucket"%go, bucket__IsSafeRangeBucketⁱᵐᵖˡ); ("Name"%go, bucket__Nameⁱᵐᵖˡ); ("String"%go, bucket__Stringⁱᵐᵖˡ)]); (simpleSchemaChange.id, [("downgradeAction"%go, simpleSchemaChange__downgradeActionⁱᵐᵖˡ); ("upgradeAction"%go, simpleSchemaChange__upgradeActionⁱᵐᵖˡ)]); (ptrT.id simpleSchemaChange.id, [("downgradeAction"%go, simpleSchemaChange__downgradeActionⁱᵐᵖˡ); ("upgradeAction"%go, simpleSchemaChange__upgradeActionⁱᵐᵖˡ)]); (membershipBackend.id, []); (ptrT.id membershipBackend.id, [("ClusterVersionFromBackend"%go, membershipBackend__ClusterVersionFromBackendⁱᵐᵖˡ); ("DowngradeInfoFromBackend"%go, membershipBackend__DowngradeInfoFromBackendⁱᵐᵖˡ); ("MustCreateBackendBuckets"%go, membershipBackend__MustCreateBackendBucketsⁱᵐᵖˡ); ("MustDeleteMemberFromBackend"%go, membershipBackend__MustDeleteMemberFromBackendⁱᵐᵖˡ); ("MustReadMembersFromBackend"%go, membershipBackend__MustReadMembersFromBackendⁱᵐᵖˡ); ("MustSaveClusterVersionToBackend"%go, membershipBackend__MustSaveClusterVersionToBackendⁱᵐᵖˡ); ("MustSaveDowngradeToBackend"%go, membershipBackend__MustSaveDowngradeToBackendⁱᵐᵖˡ); ("MustSaveMemberToBackend"%go, membershipBackend__MustSaveMemberToBackendⁱᵐᵖˡ); ("TrimClusterFromBackend"%go, membershipBackend__TrimClusterFromBackendⁱᵐᵖˡ); ("TrimMembershipFromBackend"%go, membershipBackend__TrimMembershipFromBackendⁱᵐᵖˡ); ("readMembersFromBackend"%go, membershipBackend__readMembersFromBackendⁱᵐᵖˡ)]); (migrationPlan.id, [("Execute"%go, migrationPlan__Executeⁱᵐᵖˡ); ("unsafeExecute"%go, migrationPlan__unsafeExecuteⁱᵐᵖˡ)]); (ptrT.id migrationPlan.id, [("Execute"%go, migrationPlan__Executeⁱᵐᵖˡ); ("unsafeExecute"%go, migrationPlan__unsafeExecuteⁱᵐᵖˡ)]); (migrationStep.id, [("unsafeExecute"%go, migrationStep__unsafeExecuteⁱᵐᵖˡ)]); (ptrT.id migrationStep.id, [("unsafeExecute"%go, migrationStep__unsafeExecuteⁱᵐᵖˡ)])].

#[global] Instance info' : PkgInfo schema.schema :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #schema.schema (λ: <>,
      exception_do (do:  (package.alloc schema.schema #());;;
      do:  (authEnabled'init #());;;
      do:  (authDisabled'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (keyBucketName'init #());;;
      do:  (metaBucketName'init #());;;
      do:  (leaseBucketName'init #());;;
      do:  (alarmBucketName'init #());;;
      do:  (clusterBucketName'init #());;;
      do:  (membersBucketName'init #());;;
      do:  (membersRemovedBucketName'init #());;;
      do:  (authBucketName'init #());;;
      do:  (authUsersBucketName'init #());;;
      do:  (authRolesBucketName'init #());;;
      do:  (testBucketName'init #());;;
      do:  (Key'init #());;;
      do:  (Meta'init #());;;
      do:  (Lease'init #());;;
      do:  (Alarm'init #());;;
      do:  (Cluster'init #());;;
      do:  (Members'init #());;;
      do:  (MembersRemoved'init #());;;
      do:  (Auth'init #());;;
      do:  (AuthUsers'init #());;;
      do:  (AuthRoles'init #());;;
      do:  (Test'init #());;;
      do:  (AllBuckets'init #());;;
      do:  (ScheduledCompactKeyName'init #());;;
      do:  (FinishedCompactKeyName'init #());;;
      do:  (MetaConsistentIndexKeyName'init #());;;
      do:  (AuthEnabledKeyName'init #());;;
      do:  (AuthRevisionKeyName'init #());;;
      do:  (MetaTermKeyName'init #());;;
      do:  (MetaConfStateName'init #());;;
      do:  (ClusterClusterVersionKeyName'init #());;;
      do:  (ClusterDowngradeKeyName'init #());;;
      do:  (MetaStorageVersionName'init #());;;
      do:  (emptyStorageVersion'init #());;;
      do:  (schemaChanges'init #()))
      ).

End code.
End schema.
