(* autogenerated from go.etcd.io/etcd/api/v3/mvccpb *)

From New.golang Require Import defn.
Definition mvccpb : go_string := "go.etcd.io/etcd/api/v3/mvccpb".

Module mvccpb.

Module Event_EventType. Definition id : go_string := "go.etcd.io/etcd/api/v3/mvccpb.Event_EventType"%go. End Event_EventType.
Module KeyValue. Definition id : go_string := "go.etcd.io/etcd/api/v3/mvccpb.KeyValue"%go. End KeyValue.
Module Event. Definition id : go_string := "go.etcd.io/etcd/api/v3/mvccpb.Event"%go. End Event.

Section code.
Context `{ffi_syntax}.


Definition Event_EventType : go_type := int32T.

Definition PUT : expr := #(W32 0).

Definition DELETE : expr := #(W32 1).

Definition Event_EventType_name : go_string := "go.etcd.io/etcd/api/v3/mvccpb.Event_EventType_name"%go.

Axiom Event_EventType_name'init : val.

Definition Event_EventType_value : go_string := "go.etcd.io/etcd/api/v3/mvccpb.Event_EventType_value"%go.

Axiom Event_EventType_value'init : val.

Axiom Event_EventType__Stringⁱᵐᵖˡ : val.

Axiom Event_EventType__EnumDescriptorⁱᵐᵖˡ : val.

Definition KeyValue : go_type := structT [
  "Key" :: sliceT;
  "CreateRevision" :: int64T;
  "ModRevision" :: int64T;
  "Version" :: int64T;
  "Value" :: sliceT;
  "Lease" :: int64T;
  "XXX_NoUnkeyedLiteral" :: structT [
  ];
  "XXX_unrecognized" :: sliceT;
  "XXX_sizecache" :: int32T
].

Axiom KeyValue__Resetⁱᵐᵖˡ : val.

Axiom KeyValue__Stringⁱᵐᵖˡ : val.

Axiom KeyValue__ProtoMessageⁱᵐᵖˡ : val.

Axiom KeyValue__Descriptorⁱᵐᵖˡ : val.

Axiom KeyValue__XXX_Unmarshalⁱᵐᵖˡ : val.

Axiom KeyValue__XXX_Marshalⁱᵐᵖˡ : val.

Axiom KeyValue__XXX_Mergeⁱᵐᵖˡ : val.

Axiom KeyValue__XXX_Sizeⁱᵐᵖˡ : val.

Axiom KeyValue__XXX_DiscardUnknownⁱᵐᵖˡ : val.

Definition xxx_messageInfo_KeyValue : go_string := "go.etcd.io/etcd/api/v3/mvccpb.xxx_messageInfo_KeyValue"%go.

Definition Event : go_type := structT [
  "Type" :: Event_EventType;
  "Kv" :: ptrT;
  "PrevKv" :: ptrT;
  "XXX_NoUnkeyedLiteral" :: structT [
  ];
  "XXX_unrecognized" :: sliceT;
  "XXX_sizecache" :: int32T
].

Axiom Event__Resetⁱᵐᵖˡ : val.

Axiom Event__Stringⁱᵐᵖˡ : val.

Axiom Event__ProtoMessageⁱᵐᵖˡ : val.

Axiom Event__Descriptorⁱᵐᵖˡ : val.

Axiom Event__XXX_Unmarshalⁱᵐᵖˡ : val.

Axiom Event__XXX_Marshalⁱᵐᵖˡ : val.

Axiom Event__XXX_Mergeⁱᵐᵖˡ : val.

Axiom Event__XXX_Sizeⁱᵐᵖˡ : val.

Axiom Event__XXX_DiscardUnknownⁱᵐᵖˡ : val.

Definition xxx_messageInfo_Event : go_string := "go.etcd.io/etcd/api/v3/mvccpb.xxx_messageInfo_Event"%go.

Definition init : go_string := "go.etcd.io/etcd/api/v3/mvccpb.init"%go.

Axiom initⁱᵐᵖˡ : val.

Definition fileDescriptor_2216fe83c9c12408 : go_string := "go.etcd.io/etcd/api/v3/mvccpb.fileDescriptor_2216fe83c9c12408"%go.

Axiom fileDescriptor_2216fe83c9c12408'init : val.

Axiom KeyValue__Marshalⁱᵐᵖˡ : val.

Axiom KeyValue__MarshalToⁱᵐᵖˡ : val.

Axiom KeyValue__MarshalToSizedBufferⁱᵐᵖˡ : val.

Axiom Event__Marshalⁱᵐᵖˡ : val.

Axiom Event__MarshalToⁱᵐᵖˡ : val.

Axiom Event__MarshalToSizedBufferⁱᵐᵖˡ : val.

Definition encodeVarintKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.encodeVarintKv"%go.

Axiom encodeVarintKvⁱᵐᵖˡ : val.

Axiom KeyValue__Sizeⁱᵐᵖˡ : val.

Axiom Event__Sizeⁱᵐᵖˡ : val.

Definition sovKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.sovKv"%go.

Axiom sovKvⁱᵐᵖˡ : val.

Definition sozKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.sozKv"%go.

Axiom sozKvⁱᵐᵖˡ : val.

Axiom KeyValue__Unmarshalⁱᵐᵖˡ : val.

Axiom Event__Unmarshalⁱᵐᵖˡ : val.

Definition skipKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.skipKv"%go.

Axiom skipKvⁱᵐᵖˡ : val.

Definition ErrInvalidLengthKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.ErrInvalidLengthKv"%go.

Axiom ErrInvalidLengthKv'init : val.

Definition ErrIntOverflowKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.ErrIntOverflowKv"%go.

Axiom ErrIntOverflowKv'init : val.

Definition ErrUnexpectedEndOfGroupKv : go_string := "go.etcd.io/etcd/api/v3/mvccpb.ErrUnexpectedEndOfGroupKv"%go.

Axiom ErrUnexpectedEndOfGroupKv'init : val.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [(init, initⁱᵐᵖˡ); (init, initⁱᵐᵖˡ); (encodeVarintKv, encodeVarintKvⁱᵐᵖˡ); (sovKv, sovKvⁱᵐᵖˡ); (sozKv, sozKvⁱᵐᵖˡ); (skipKv, skipKvⁱᵐᵖˡ)].

Definition msets' : list (go_string * (list (go_string * val))) := [(Event_EventType.id, [("EnumDescriptor"%go, Event_EventType__EnumDescriptorⁱᵐᵖˡ); ("String"%go, Event_EventType__Stringⁱᵐᵖˡ)]); (ptrT.id Event_EventType.id, [("EnumDescriptor"%go, (λ: "$r",
                 method_call #Event_EventType.id #"EnumDescriptor"%go (![#Event_EventType] "$r")
                 )%V); ("String"%go, (λ: "$r",
                 method_call #Event_EventType.id #"String"%go (![#Event_EventType] "$r")
                 )%V)]); (KeyValue.id, []); (ptrT.id KeyValue.id, [("Descriptor"%go, KeyValue__Descriptorⁱᵐᵖˡ); ("Marshal"%go, KeyValue__Marshalⁱᵐᵖˡ); ("MarshalTo"%go, KeyValue__MarshalToⁱᵐᵖˡ); ("MarshalToSizedBuffer"%go, KeyValue__MarshalToSizedBufferⁱᵐᵖˡ); ("ProtoMessage"%go, KeyValue__ProtoMessageⁱᵐᵖˡ); ("Reset"%go, KeyValue__Resetⁱᵐᵖˡ); ("Size"%go, KeyValue__Sizeⁱᵐᵖˡ); ("String"%go, KeyValue__Stringⁱᵐᵖˡ); ("Unmarshal"%go, KeyValue__Unmarshalⁱᵐᵖˡ); ("XXX_DiscardUnknown"%go, KeyValue__XXX_DiscardUnknownⁱᵐᵖˡ); ("XXX_Marshal"%go, KeyValue__XXX_Marshalⁱᵐᵖˡ); ("XXX_Merge"%go, KeyValue__XXX_Mergeⁱᵐᵖˡ); ("XXX_Size"%go, KeyValue__XXX_Sizeⁱᵐᵖˡ); ("XXX_Unmarshal"%go, KeyValue__XXX_Unmarshalⁱᵐᵖˡ)]); (Event.id, []); (ptrT.id Event.id, [("Descriptor"%go, Event__Descriptorⁱᵐᵖˡ); ("Marshal"%go, Event__Marshalⁱᵐᵖˡ); ("MarshalTo"%go, Event__MarshalToⁱᵐᵖˡ); ("MarshalToSizedBuffer"%go, Event__MarshalToSizedBufferⁱᵐᵖˡ); ("ProtoMessage"%go, Event__ProtoMessageⁱᵐᵖˡ); ("Reset"%go, Event__Resetⁱᵐᵖˡ); ("Size"%go, Event__Sizeⁱᵐᵖˡ); ("String"%go, Event__Stringⁱᵐᵖˡ); ("Unmarshal"%go, Event__Unmarshalⁱᵐᵖˡ); ("XXX_DiscardUnknown"%go, Event__XXX_DiscardUnknownⁱᵐᵖˡ); ("XXX_Marshal"%go, Event__XXX_Marshalⁱᵐᵖˡ); ("XXX_Merge"%go, Event__XXX_Mergeⁱᵐᵖˡ); ("XXX_Size"%go, Event__XXX_Sizeⁱᵐᵖˡ); ("XXX_Unmarshal"%go, Event__XXX_Unmarshalⁱᵐᵖˡ)])].

#[global] Instance info' : PkgInfo mvccpb.mvccpb :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #mvccpb.mvccpb (λ: <>,
      exception_do (do:  (package.alloc mvccpb.mvccpb #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (Event_EventType_name'init #());;;
      do:  (Event_EventType_value'init #());;;
      do:  (fileDescriptor_2216fe83c9c12408'init #());;;
      do:  (ErrInvalidLengthKv'init #());;;
      do:  (ErrIntOverflowKv'init #());;;
      do:  (ErrUnexpectedEndOfGroupKv'init #()))
      ).

End code.
End mvccpb.
