(* autogenerated from go.etcd.io/raft/v3/quorum/slices *)
From New.golang Require Import defn.

Module slices.
Section code.
Context `{ffi_syntax}.


Definition Tup : go_type := structT [
  "ID" :: uint64T;
  "Idx" :: uint64T;
  "Ok" :: boolT;
  "Bar" :: intT
].

Definition pkg_name' : go_string := "go.etcd.io/raft/v3/quorum/slices".

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [("Tup"%go, []); ("Tup'ptr"%go, [])].

#[global] Instance info' : PkgInfo pkg_name' :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' (Î»: <>,
      exception_do (do:  #())
      ).

End code.
End slices.
