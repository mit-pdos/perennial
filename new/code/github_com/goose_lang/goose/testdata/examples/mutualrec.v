(* autogenerated from github.com/goose-lang/goose/testdata/examples/mutualrec *)

From New.golang Require Import defn.
Definition mutualrec : go_string := "github.com/goose-lang/goose/testdata/examples/mutualrec".

Module mutualrec.

Section code.
Context `{ffi_syntax}.


Definition A : go_string := "github.com/goose-lang/goose/testdata/examples/mutualrec.A"%go.

Definition B : go_string := "github.com/goose-lang/goose/testdata/examples/mutualrec.B"%go.

(* go: mutualrec.go:3:6 *)
Definition Aⁱᵐᵖˡ : val :=
  λ: <>,
    exception_do (do:  ((func_call #B) #());;;
    return: #()).

(* go: mutualrec.go:7:6 *)
Definition Bⁱᵐᵖˡ : val :=
  λ: <>,
    exception_do (do:  ((func_call #A) #());;;
    return: #()).

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [(A, Aⁱᵐᵖˡ); (B, Bⁱᵐᵖˡ)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo mutualrec.mutualrec :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Definition initialize' : val :=
  λ: <>,
    package.init #mutualrec.mutualrec (λ: <>,
      exception_do (do:  (package.alloc mutualrec.mutualrec #()))
      ).

End code.
End mutualrec.
