(* autogenerated from github.com/goose-lang/primitive/disk *)
From New.golang Require Import defn.

Require Export New.trusted_code.github_com.goose_lang.primitive.disk.
Import disk.
Definition disk : go_string := "github.com/goose-lang/primitive/disk".

From New Require Import disk_prelude.
Module disk.
Section code.


Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [("Get"%go, Get); ("Read"%go, Read); ("Write"%go, Write); ("Size"%go, Size); ("Barrier"%go, Barrier)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo disk.disk :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init disk.disk (Î»: <>,
      exception_do (do:  (_'init #());;;
      do:  (_'init #()))
      ).

End code.
End disk.
