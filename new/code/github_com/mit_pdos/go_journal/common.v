(* autogenerated from github.com/mit-pdos/go-journal/common *)
Require Export New.code.github_com.goose_lang.primitive.disk.

From New.golang Require Import defn.
Definition common : go_string := "github.com/mit-pdos/go-journal/common".

From New Require Import disk_prelude.
Module common.

Module Inum. Definition id : go_string := uint64T.id. End Inum.
Module Bnum. Definition id : go_string := uint64T.id. End Bnum.

Section code.


(* on-disk size *)
Definition INODESZ : expr := #(W64 128).

Definition NBITBLOCK : expr := #(W64 32768).

Definition INODEBLK : expr := #(W64 32).

Definition NINODEBITMAP : expr := #(W64 1).

(* space for the end position *)
Definition HDRMETA : expr := #(W64 8).

Definition HDRADDRS : expr := #(W64 511).

(* 2 for log header *)
Definition LOGSIZE : expr := #(W64 513).

Definition Inum : go_type := uint64T.

Definition Bnum : go_type := uint64T.

Definition NULLINUM : expr := #(W64 0).

Definition ROOTINUM : expr := #(W64 1).

Definition NULLBNUM : expr := #(W64 0).

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo common.common :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [code.github_com.goose_lang.primitive.disk.disk];
  |}.

Definition initialize' : val :=
  λ: <>,
    package.init #common.common (λ: <>,
      exception_do (do:  (disk.initialize' #());;;
      do:  (package.alloc common.common #()))
      ).

End code.
End common.
