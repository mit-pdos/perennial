(* autogenerated from command-line-arguments *)
From New.golang Require Import defn.
From New.code Require github_com.goose_lang.primitive.

Section code.

Context `{ffi_syntax}.

Definition genericStruct (T : go_type) : go_type :=
  structT [
    "x" :: T
  ].


Definition genericStruct__mset : list (string * val) := [
].

Definition genericStruct__mset_ptr : list (string * val) := [
].

(* go: generics_example.go:9:6 *)
Definition identity (T : go_type) : val :=
  rec: "identity" "data" :=
    exception_do (let: "data" := (ref_ty (genericStruct T) "data") in
    return: (![T] (struct.field_ref (genericStruct T) "x" "data"))).

(* go: generics_example.go:13:6 *)
Definition identity_Test : val :=
  rec: "identity_Test" <> :=
    exception_do (let: "z" := (ref_ty (genericStruct uint64T) (zero_val (genericStruct uint64T))) in
    let: "$r0" := (struct.make (genericStruct uint64T) [{
      "x" ::= #(W64 7)
    }]) in
    do:  ("z" <-[(genericStruct uint64T)] "$r0");;;
    let: "y" := (ref_ty uint64T (zero_val uint64T)) in
    let: "$r0" := (let: "$a0" := (![(genericStruct uint64T)] "z") in
    (identity uint64T) "$a0") in
    do:  ("y" <-[uint64T] "$r0");;;
    do:  (let: "$a0" := ((![uint64T] "y") = (![uint64T] (struct.field_ref (genericStruct uint64T) "x" "z"))) in
    primitive.Assert "$a0")).

End code.

(* From New.proof Require Import grove_prelude.
From New.proof Require Import proof_prelude. *)
From New.proof Require Import grove_prelude.
From Perennial.algebra Require Import map.
From New.proof Require Import std.

Section proof.

(* Context `{ffi_syntax} `{!heapGS Σ}. *)
Context `{!heapGS Σ}.


Lemma proof_identity:
  {{{ True }}}
    identity_Test #()
  {{{ RET #(); True }}}.
Proof.
  iIntros (Φ) "H HΦ".
iFrame.
wp_rec.
wp_alloc z as "Hz".
unfold genericStruct.
rewrite struct.make_unseal struct.fields_val_unseal.
unfold struct.make_def.
wp_apply wp_struct_make.
wp_pures.
unfold genericStruct.
rewrite struct.val.
wp_store.
unfold identity.
struct.make.
intros ????Ht.
wp_apply wp_struct_make.
wp_store.
wp_alloc y as "Hy".
wp_apply wp_struct_make.
rewrite struct.make_unseal struct.val_unseal.
intros ????Ht.
wp_apply wp_struct_make.
wp_apply (struct.field_ref (genericStruct uint64T) "x" z).
wp_apply (wp_struct_make with "genericStruct").
wp_rec.
wp_pures.
iModIntro.
(*wp_apply (identity_Test with "").*)
  (* Your proof here *)
Qed.

End proof.

