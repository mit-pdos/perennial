(* autogenerated from github.com/mit-pdos/gokv/trusted_proph *)
From New.golang Require Import defn.

Require Export New.trusted_code.github_com.mit_pdos.gokv.trusted_proph.
Import trusted_proph.
Definition trusted_proph : go_string := "github.com/mit-pdos/gokv/trusted_proph".

Module trusted_proph.
Section code.
Context `{ffi_syntax}.


Definition ProphId : go_type := ptrT.

Definition NewProph : go_string := "github.com/mit-pdos/gokv/trusted_proph.NewProph"%go.

Definition ResolveBytes : go_string := "github.com/mit-pdos/gokv/trusted_proph.ResolveBytes"%go.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [(NewProph, NewProphⁱᵐᵖˡ); (ResolveBytes, ResolveBytesⁱᵐᵖˡ)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo trusted_proph.trusted_proph :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #trusted_proph.trusted_proph (λ: <>,
      exception_do (do:  (package.alloc trusted_proph.trusted_proph #()))
      ).

End code.
End trusted_proph.
