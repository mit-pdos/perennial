(* autogenerated from github.com/mit-pdos/tulip/params *)
From New.golang Require Import defn.

Definition params : go_string := "github.com/mit-pdos/tulip/params".

Module params.
Section code.
Context `{ffi_syntax}.


Definition N_SHARDS : expr := #(W64 2).

Definition NS_RECONNECT : expr := #(W64 100000000).

Definition NS_RESEND_PREPARE : expr := #(W64 500000000).

Definition NS_RESEND_READ : expr := #(W64 400000000).

Definition NS_RESEND_COMMIT : expr := #(W64 400000000).

Definition NS_RESEND_ABORT : expr := #(W64 400000000).

Definition NS_SPAWN_BACKUP_BASE : expr := #(W64 5000000000).

Definition NS_SPAWN_BACKUP_DELTA : expr := #(W64 1000000000).

Definition NS_SEND_REFRESH : expr := #(W64 4000000000).

Definition NS_BACKUP_INTERVAL : expr := #(W64 5000000000).

Definition NS_BATCH_INTERVAL : expr := #(W64 300000000).

Definition NS_HEARTBEAT_INTERVAL : expr := #(W64 1000000000).

Definition NS_ELECTION_TIMEOUT_BASE : expr := #(W64 2000000000).

Definition NS_ELECTION_TIMEOUT_DELTA : expr := #(W64 1000000000).

Definition N_RETRY_REPLICATED : expr := #(W64 500).

Definition NS_REPLICATED_INTERVAL : expr := #(W64 10000).

Definition N_TXN_SITES : expr := #(W64 1024).

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo params.params :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init params.params (Î»: <>,
      exception_do (do:  #())
      ).

End code.
End params.
