(* autogenerated from fmt *)
From New.golang Require Import defn.

Require Export New.trusted_code.fmt.
Import fmt.
Definition fmt : go_string := "fmt".

Module fmt.
Section code.
Context `{ffi_syntax}.


Axiom ppFree'init : val.

Axiom space'init : val.

Axiom ssFree'init : val.

Axiom errComplex'init : val.

Axiom errBool'init : val.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [("Printf"%go, Printf); ("Print"%go, Print)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo fmt.fmt :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init fmt.fmt (Î»: <>,
      exception_do (do:  (ppFree'init #());;;
      do:  (space'init #());;;
      do:  (ssFree'init #());;;
      do:  (errComplex'init #());;;
      do:  (errBool'init #()))
      ).

End code.
End fmt.
