(* autogenerated from google.golang.org/grpc/status *)
Require Export New.code.google_golang_org.genproto.googleapis.rpc.status.

From New.golang Require Import defn.
Definition status : go_string := "google.golang.org/grpc/status".

Module status.

Module Status. Definition id : go_string := status.Status.id. End Status.

Section code.
Context `{ffi_syntax}.


Definition Status : go_type := status.Status.
#[global] Typeclasses Opaque Status.
#[global] Opaque Status.

Definition New : go_string := "google.golang.org/grpc/status.New"%go.

Definition Newf : go_string := "google.golang.org/grpc/status.Newf"%go.

Definition Error : go_string := "google.golang.org/grpc/status.Error"%go.

Definition Errorf : go_string := "google.golang.org/grpc/status.Errorf"%go.

Definition ErrorProto : go_string := "google.golang.org/grpc/status.ErrorProto"%go.

Definition FromProto : go_string := "google.golang.org/grpc/status.FromProto"%go.

Definition FromError : go_string := "google.golang.org/grpc/status.FromError"%go.

Definition Convert : go_string := "google.golang.org/grpc/status.Convert"%go.

Definition Code : go_string := "google.golang.org/grpc/status.Code"%go.

Definition FromContextError : go_string := "google.golang.org/grpc/status.FromContextError"%go.

Definition vars' : list (go_string * go_type) := [].

Axiom Newⁱᵐᵖˡ : val.

Axiom Newfⁱᵐᵖˡ : val.

Axiom Errorⁱᵐᵖˡ : val.

Axiom Errorfⁱᵐᵖˡ : val.

Axiom ErrorProtoⁱᵐᵖˡ : val.

Axiom FromProtoⁱᵐᵖˡ : val.

Axiom FromErrorⁱᵐᵖˡ : val.

Axiom Convertⁱᵐᵖˡ : val.

Axiom Codeⁱᵐᵖˡ : val.

Axiom FromContextErrorⁱᵐᵖˡ : val.

Definition functions' : list (go_string * val) := [(New, Newⁱᵐᵖˡ); (Newf, Newfⁱᵐᵖˡ); (Error, Errorⁱᵐᵖˡ); (Errorf, Errorfⁱᵐᵖˡ); (ErrorProto, ErrorProtoⁱᵐᵖˡ); (FromProto, FromProtoⁱᵐᵖˡ); (FromError, FromErrorⁱᵐᵖˡ); (Convert, Convertⁱᵐᵖˡ); (Code, Codeⁱᵐᵖˡ); (FromContextError, FromContextErrorⁱᵐᵖˡ)].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo status.status :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [code.google_golang_org.genproto.googleapis.rpc.status.status];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #status.status (λ: <>,
      exception_do (do:  (status.initialize' #());;;
      do:  (package.alloc status.status #()))
      ).

End code.
End status.
