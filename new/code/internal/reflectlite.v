(* autogenerated from internal/reflectlite *)

From New.golang Require Import defn.
Definition reflectlite : go_string := "internal/reflectlite".

Module reflectlite.

Section code.
Context `{ffi_syntax}.


Definition Swapper : go_string := "internal/reflectlite.Swapper"%go.

Definition pkgPath : go_string := "internal/reflectlite.pkgPath"%go.

Definition resolveNameOff : go_string := "internal/reflectlite.resolveNameOff"%go.

Definition resolveTypeOff : go_string := "internal/reflectlite.resolveTypeOff"%go.

Definition toRType : go_string := "internal/reflectlite.toRType"%go.

Definition elem : go_string := "internal/reflectlite.elem"%go.

Definition add : go_string := "internal/reflectlite.add"%go.

Definition TypeOf : go_string := "internal/reflectlite.TypeOf"%go.

Definition implements : go_string := "internal/reflectlite.implements"%go.

Definition directlyAssignable : go_string := "internal/reflectlite.directlyAssignable"%go.

Definition haveIdenticalType : go_string := "internal/reflectlite.haveIdenticalType"%go.

Definition haveIdenticalUnderlyingType : go_string := "internal/reflectlite.haveIdenticalUnderlyingType"%go.

Definition toType : go_string := "internal/reflectlite.toType"%go.

Definition packEface : go_string := "internal/reflectlite.packEface"%go.

Definition unpackEface : go_string := "internal/reflectlite.unpackEface"%go.

Definition methodName : go_string := "internal/reflectlite.methodName"%go.

Definition valueInterface : go_string := "internal/reflectlite.valueInterface"%go.

Definition chanlen : go_string := "internal/reflectlite.chanlen"%go.

Definition maplen : go_string := "internal/reflectlite.maplen"%go.

Definition unsafe_New : go_string := "internal/reflectlite.unsafe_New"%go.

Definition ValueOf : go_string := "internal/reflectlite.ValueOf"%go.

Definition arrayAt : go_string := "internal/reflectlite.arrayAt"%go.

Definition ifaceE2I : go_string := "internal/reflectlite.ifaceE2I"%go.

Definition typedmemmove : go_string := "internal/reflectlite.typedmemmove"%go.

Definition escapes : go_string := "internal/reflectlite.escapes"%go.

Definition dummy : go_string := "internal/reflectlite.dummy"%go.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo reflectlite.reflectlite :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #reflectlite.reflectlite (λ: <>,
      exception_do (do:  (package.alloc reflectlite.reflectlite #()))
      ).

End code.
End reflectlite.
