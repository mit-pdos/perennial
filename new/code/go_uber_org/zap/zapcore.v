(* autogenerated from go.uber.org/zap/zapcore *)

From New.golang Require Import defn.
Definition zapcore : go_string := "go.uber.org/zap/zapcore".

Module zapcore.

Module BufferedWriteSyncer. Definition id : go_string := "go.uber.org/zap/zapcore.BufferedWriteSyncer"%go. End BufferedWriteSyncer.
Module Clock. Definition id : go_string := "go.uber.org/zap/zapcore.Clock"%go. End Clock.
Module systemClock. Definition id : go_string := "go.uber.org/zap/zapcore.systemClock"%go. End systemClock.
Module consoleEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.consoleEncoder"%go. End consoleEncoder.
Module Core. Definition id : go_string := "go.uber.org/zap/zapcore.Core"%go. End Core.
Module nopCore. Definition id : go_string := "go.uber.org/zap/zapcore.nopCore"%go. End nopCore.
Module ioCore. Definition id : go_string := "go.uber.org/zap/zapcore.ioCore"%go. End ioCore.
Module LevelEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.LevelEncoder"%go. End LevelEncoder.
Module TimeEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.TimeEncoder"%go. End TimeEncoder.
Module DurationEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.DurationEncoder"%go. End DurationEncoder.
Module CallerEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.CallerEncoder"%go. End CallerEncoder.
Module NameEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.NameEncoder"%go. End NameEncoder.
Module EncoderConfig. Definition id : go_string := "go.uber.org/zap/zapcore.EncoderConfig"%go. End EncoderConfig.
Module ObjectEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.ObjectEncoder"%go. End ObjectEncoder.
Module ArrayEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.ArrayEncoder"%go. End ArrayEncoder.
Module PrimitiveArrayEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.PrimitiveArrayEncoder"%go. End PrimitiveArrayEncoder.
Module Encoder. Definition id : go_string := "go.uber.org/zap/zapcore.Encoder"%go. End Encoder.
Module EntryCaller. Definition id : go_string := "go.uber.org/zap/zapcore.EntryCaller"%go. End EntryCaller.
Module Entry. Definition id : go_string := "go.uber.org/zap/zapcore.Entry"%go. End Entry.
Module CheckWriteHook. Definition id : go_string := "go.uber.org/zap/zapcore.CheckWriteHook"%go. End CheckWriteHook.
Module CheckWriteAction. Definition id : go_string := "go.uber.org/zap/zapcore.CheckWriteAction"%go. End CheckWriteAction.
Module CheckedEntry. Definition id : go_string := "go.uber.org/zap/zapcore.CheckedEntry"%go. End CheckedEntry.
Module errorGroup. Definition id : go_string := "go.uber.org/zap/zapcore.errorGroup"%go. End errorGroup.
Module errArray. Definition id : go_string := "go.uber.org/zap/zapcore.errArray"%go. End errArray.
Module errArrayElem. Definition id : go_string := "go.uber.org/zap/zapcore.errArrayElem"%go. End errArrayElem.
Module FieldType. Definition id : go_string := "go.uber.org/zap/zapcore.FieldType"%go. End FieldType.
Module Field. Definition id : go_string := "go.uber.org/zap/zapcore.Field"%go. End Field.
Module hooked. Definition id : go_string := "go.uber.org/zap/zapcore.hooked"%go. End hooked.
Module levelFilterCore. Definition id : go_string := "go.uber.org/zap/zapcore.levelFilterCore"%go. End levelFilterCore.
Module jsonEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.jsonEncoder"%go. End jsonEncoder.
Module lazyWithCore. Definition id : go_string := "go.uber.org/zap/zapcore.lazyWithCore"%go. End lazyWithCore.
Module Level. Definition id : go_string := "go.uber.org/zap/zapcore.Level"%go. End Level.
Module leveledEnabler. Definition id : go_string := "go.uber.org/zap/zapcore.leveledEnabler"%go. End leveledEnabler.
Module LevelEnabler. Definition id : go_string := "go.uber.org/zap/zapcore.LevelEnabler"%go. End LevelEnabler.
Module ObjectMarshaler. Definition id : go_string := "go.uber.org/zap/zapcore.ObjectMarshaler"%go. End ObjectMarshaler.
Module ObjectMarshalerFunc. Definition id : go_string := "go.uber.org/zap/zapcore.ObjectMarshalerFunc"%go. End ObjectMarshalerFunc.
Module ArrayMarshaler. Definition id : go_string := "go.uber.org/zap/zapcore.ArrayMarshaler"%go. End ArrayMarshaler.
Module ArrayMarshalerFunc. Definition id : go_string := "go.uber.org/zap/zapcore.ArrayMarshalerFunc"%go. End ArrayMarshalerFunc.
Module MapObjectEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.MapObjectEncoder"%go. End MapObjectEncoder.
Module sliceArrayEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.sliceArrayEncoder"%go. End sliceArrayEncoder.
Module ReflectedEncoder. Definition id : go_string := "go.uber.org/zap/zapcore.ReflectedEncoder"%go. End ReflectedEncoder.
Module counter. Definition id : go_string := "go.uber.org/zap/zapcore.counter"%go. End counter.
Module counters. Definition id : go_string := "go.uber.org/zap/zapcore.counters"%go. End counters.
Module SamplingDecision. Definition id : go_string := "go.uber.org/zap/zapcore.SamplingDecision"%go. End SamplingDecision.
Module optionFunc. Definition id : go_string := "go.uber.org/zap/zapcore.optionFunc"%go. End optionFunc.
Module SamplerOption. Definition id : go_string := "go.uber.org/zap/zapcore.SamplerOption"%go. End SamplerOption.
Module sampler. Definition id : go_string := "go.uber.org/zap/zapcore.sampler"%go. End sampler.
Module multiCore. Definition id : go_string := "go.uber.org/zap/zapcore.multiCore"%go. End multiCore.
Module WriteSyncer. Definition id : go_string := "go.uber.org/zap/zapcore.WriteSyncer"%go. End WriteSyncer.
Module lockedWriteSyncer. Definition id : go_string := "go.uber.org/zap/zapcore.lockedWriteSyncer"%go. End lockedWriteSyncer.
Module writerWrapper. Definition id : go_string := "go.uber.org/zap/zapcore.writerWrapper"%go. End writerWrapper.
Module multiWriteSyncer. Definition id : go_string := "go.uber.org/zap/zapcore.multiWriteSyncer"%go. End multiWriteSyncer.

Section code.
Context `{ffi_syntax}.


Axiom _defaultBufferSize : Z.

Axiom _defaultFlushInterval : val.

Axiom BufferedWriteSyncer : go_type.

Definition DefaultClock : go_string := "go.uber.org/zap/zapcore.DefaultClock"%go.

Axiom DefaultClock'init : val.

Axiom Clock : go_type.

Axiom systemClock : go_type.

Definition _sliceEncoderPool : go_string := "go.uber.org/zap/zapcore._sliceEncoderPool"%go.

Axiom _sliceEncoderPool'init : val.

Definition getSliceEncoder : go_string := "go.uber.org/zap/zapcore.getSliceEncoder"%go.

Definition putSliceEncoder : go_string := "go.uber.org/zap/zapcore.putSliceEncoder"%go.

Axiom consoleEncoder : go_type.

Definition NewConsoleEncoder : go_string := "go.uber.org/zap/zapcore.NewConsoleEncoder"%go.

Axiom Core : go_type.

Axiom nopCore : go_type.

Definition NewNopCore : go_string := "go.uber.org/zap/zapcore.NewNopCore"%go.

Definition NewCore : go_string := "go.uber.org/zap/zapcore.NewCore"%go.

Axiom ioCore : go_type.

Axiom DefaultLineEnding : go_string.

Axiom OmitKey : go_string.

Axiom LevelEncoder : go_type.

Definition LowercaseLevelEncoder : go_string := "go.uber.org/zap/zapcore.LowercaseLevelEncoder"%go.

Definition LowercaseColorLevelEncoder : go_string := "go.uber.org/zap/zapcore.LowercaseColorLevelEncoder"%go.

Definition CapitalLevelEncoder : go_string := "go.uber.org/zap/zapcore.CapitalLevelEncoder"%go.

Definition CapitalColorLevelEncoder : go_string := "go.uber.org/zap/zapcore.CapitalColorLevelEncoder"%go.

Axiom TimeEncoder : go_type.

Definition EpochTimeEncoder : go_string := "go.uber.org/zap/zapcore.EpochTimeEncoder"%go.

Definition EpochMillisTimeEncoder : go_string := "go.uber.org/zap/zapcore.EpochMillisTimeEncoder"%go.

Definition EpochNanosTimeEncoder : go_string := "go.uber.org/zap/zapcore.EpochNanosTimeEncoder"%go.

Definition encodeTimeLayout : go_string := "go.uber.org/zap/zapcore.encodeTimeLayout"%go.

Definition ISO8601TimeEncoder : go_string := "go.uber.org/zap/zapcore.ISO8601TimeEncoder"%go.

Definition RFC3339TimeEncoder : go_string := "go.uber.org/zap/zapcore.RFC3339TimeEncoder"%go.

Definition RFC3339NanoTimeEncoder : go_string := "go.uber.org/zap/zapcore.RFC3339NanoTimeEncoder"%go.

Definition TimeEncoderOfLayout : go_string := "go.uber.org/zap/zapcore.TimeEncoderOfLayout"%go.

Axiom DurationEncoder : go_type.

Definition SecondsDurationEncoder : go_string := "go.uber.org/zap/zapcore.SecondsDurationEncoder"%go.

Definition NanosDurationEncoder : go_string := "go.uber.org/zap/zapcore.NanosDurationEncoder"%go.

Definition MillisDurationEncoder : go_string := "go.uber.org/zap/zapcore.MillisDurationEncoder"%go.

Definition StringDurationEncoder : go_string := "go.uber.org/zap/zapcore.StringDurationEncoder"%go.

Axiom CallerEncoder : go_type.

Definition FullCallerEncoder : go_string := "go.uber.org/zap/zapcore.FullCallerEncoder"%go.

Definition ShortCallerEncoder : go_string := "go.uber.org/zap/zapcore.ShortCallerEncoder"%go.

Axiom NameEncoder : go_type.

Definition FullNameEncoder : go_string := "go.uber.org/zap/zapcore.FullNameEncoder"%go.

Axiom EncoderConfig : go_type.

Axiom ObjectEncoder : go_type.

Axiom ArrayEncoder : go_type.

Axiom PrimitiveArrayEncoder : go_type.

Axiom Encoder : go_type.

Definition _cePool : go_string := "go.uber.org/zap/zapcore._cePool"%go.

Axiom _cePool'init : val.

Definition getCheckedEntry : go_string := "go.uber.org/zap/zapcore.getCheckedEntry"%go.

Definition putCheckedEntry : go_string := "go.uber.org/zap/zapcore.putCheckedEntry"%go.

Definition NewEntryCaller : go_string := "go.uber.org/zap/zapcore.NewEntryCaller"%go.

Axiom EntryCaller : go_type.

Axiom Entry : go_type.

Axiom CheckWriteHook : go_type.

Axiom CheckWriteAction : go_type.

Axiom WriteThenNoop : val.

Axiom WriteThenGoexit : val.

Axiom WriteThenPanic : val.

Axiom WriteThenFatal : val.

Axiom CheckedEntry : go_type.

Definition encodeError : go_string := "go.uber.org/zap/zapcore.encodeError"%go.

Axiom errorGroup : go_type.

Axiom errArray : go_type.

Definition _errArrayElemPool : go_string := "go.uber.org/zap/zapcore._errArrayElemPool"%go.

Axiom _errArrayElemPool'init : val.

Axiom errArrayElem : go_type.

Definition newErrArrayElem : go_string := "go.uber.org/zap/zapcore.newErrArrayElem"%go.

Definition FieldType : go_type := uint8T.

Axiom UnknownType : val.

Axiom ArrayMarshalerType : val.

Axiom ObjectMarshalerType : val.

Axiom BinaryType : val.

Axiom BoolType : val.

Axiom ByteStringType : val.

Axiom Complex128Type : val.

Axiom Complex64Type : val.

Axiom DurationType : val.

Axiom Float64Type : val.

Axiom Float32Type : val.

Axiom Int64Type : val.

Axiom Int32Type : val.

Axiom Int16Type : val.

Axiom Int8Type : val.

Axiom StringType : val.

Axiom TimeType : val.

Axiom TimeFullType : val.

Axiom Uint64Type : val.

Axiom Uint32Type : val.

Axiom Uint16Type : val.

Axiom Uint8Type : val.

Axiom UintptrType : val.

Axiom ReflectType : val.

Axiom NamespaceType : val.

Axiom StringerType : val.

Axiom ErrorType : val.

Axiom SkipType : val.

Axiom InlineMarshalerType : val.

Definition Field : go_type := structT [
  "Key" :: stringT;
  "Type" :: FieldType;
  "Integer" :: int64T;
  "String" :: stringT;
  "Interface" :: interfaceT
].

Definition addFields : go_string := "go.uber.org/zap/zapcore.addFields"%go.

Definition encodeStringer : go_string := "go.uber.org/zap/zapcore.encodeStringer"%go.

Axiom hooked : go_type.

Definition RegisterHooks : go_string := "go.uber.org/zap/zapcore.RegisterHooks"%go.

Axiom levelFilterCore : go_type.

Definition NewIncreaseLevelCore : go_string := "go.uber.org/zap/zapcore.NewIncreaseLevelCore"%go.

Axiom _hex : go_string.

Definition _jsonPool : go_string := "go.uber.org/zap/zapcore._jsonPool"%go.

Axiom _jsonPool'init : val.

Definition putJSONEncoder : go_string := "go.uber.org/zap/zapcore.putJSONEncoder"%go.

Axiom jsonEncoder : go_type.

Definition NewJSONEncoder : go_string := "go.uber.org/zap/zapcore.NewJSONEncoder"%go.

Definition newJSONEncoder : go_string := "go.uber.org/zap/zapcore.newJSONEncoder"%go.

Definition nullLiteralBytes : go_string := "go.uber.org/zap/zapcore.nullLiteralBytes"%go.

Axiom nullLiteralBytes'init : val.

Definition safeAppendStringLike : go_string := "go.uber.org/zap/zapcore.safeAppendStringLike"%go.

Axiom lazyWithCore : go_type.

Definition NewLazyWith : go_string := "go.uber.org/zap/zapcore.NewLazyWith"%go.

Definition errUnmarshalNilLevel : go_string := "go.uber.org/zap/zapcore.errUnmarshalNilLevel"%go.

Axiom errUnmarshalNilLevel'init : val.

Axiom Level : go_type.

Axiom DebugLevel : val.

Axiom InfoLevel : val.

Axiom WarnLevel : val.

Axiom ErrorLevel : val.

Axiom DPanicLevel : val.

Axiom PanicLevel : val.

Axiom FatalLevel : val.

Axiom _minLevel : val.

Axiom _maxLevel : val.

Axiom InvalidLevel : val.

Definition ParseLevel : go_string := "go.uber.org/zap/zapcore.ParseLevel"%go.

Axiom leveledEnabler : go_type.

Definition LevelOf : go_string := "go.uber.org/zap/zapcore.LevelOf"%go.

Axiom LevelEnabler : go_type.

Definition _levelToColor : go_string := "go.uber.org/zap/zapcore._levelToColor"%go.

Axiom _levelToColor'init : val.

Definition _unknownLevelColor : go_string := "go.uber.org/zap/zapcore._unknownLevelColor"%go.

Axiom _unknownLevelColor'init : val.

Definition _levelToLowercaseColorString : go_string := "go.uber.org/zap/zapcore._levelToLowercaseColorString"%go.

Axiom _levelToLowercaseColorString'init : val.

Definition _levelToCapitalColorString : go_string := "go.uber.org/zap/zapcore._levelToCapitalColorString"%go.

Axiom _levelToCapitalColorString'init : val.

Definition init : go_string := "go.uber.org/zap/zapcore.init"%go.

Axiom ObjectMarshaler : go_type.

Axiom ObjectMarshalerFunc : go_type.

Axiom ArrayMarshaler : go_type.

Axiom ArrayMarshalerFunc : go_type.

Axiom MapObjectEncoder : go_type.

Definition NewMapObjectEncoder : go_string := "go.uber.org/zap/zapcore.NewMapObjectEncoder"%go.

Axiom sliceArrayEncoder : go_type.

Axiom ReflectedEncoder : go_type.

Definition defaultReflectedEncoder : go_string := "go.uber.org/zap/zapcore.defaultReflectedEncoder"%go.

Axiom _numLevels : val.

Axiom _countersPerLevel : Z.

Axiom counter : go_type.

Axiom counters : go_type.

Definition newCounters : go_string := "go.uber.org/zap/zapcore.newCounters"%go.

Definition fnv32a : go_string := "go.uber.org/zap/zapcore.fnv32a"%go.

Axiom SamplingDecision : go_type.

Axiom LogDropped : val.

Axiom LogSampled : val.

Axiom optionFunc : go_type.

Axiom SamplerOption : go_type.

Definition nopSamplingHook : go_string := "go.uber.org/zap/zapcore.nopSamplingHook"%go.

Definition SamplerHook : go_string := "go.uber.org/zap/zapcore.SamplerHook"%go.

Definition NewSamplerWithOptions : go_string := "go.uber.org/zap/zapcore.NewSamplerWithOptions"%go.

Axiom sampler : go_type.

Definition NewSampler : go_string := "go.uber.org/zap/zapcore.NewSampler"%go.

Axiom multiCore : go_type.

Definition NewTee : go_string := "go.uber.org/zap/zapcore.NewTee"%go.

Axiom WriteSyncer : go_type.

Definition AddSync : go_string := "go.uber.org/zap/zapcore.AddSync"%go.

Axiom lockedWriteSyncer : go_type.

Definition Lock : go_string := "go.uber.org/zap/zapcore.Lock"%go.

Axiom writerWrapper : go_type.

Axiom multiWriteSyncer : go_type.

Definition NewMultiWriteSyncer : go_string := "go.uber.org/zap/zapcore.NewMultiWriteSyncer"%go.

Definition vars' : list (go_string * go_type) := [].

Axiom getSliceEncoderⁱᵐᵖˡ : val.

Axiom putSliceEncoderⁱᵐᵖˡ : val.

Axiom NewConsoleEncoderⁱᵐᵖˡ : val.

Axiom NewNopCoreⁱᵐᵖˡ : val.

Axiom NewCoreⁱᵐᵖˡ : val.

Axiom LowercaseLevelEncoderⁱᵐᵖˡ : val.

Axiom LowercaseColorLevelEncoderⁱᵐᵖˡ : val.

Axiom CapitalLevelEncoderⁱᵐᵖˡ : val.

Axiom CapitalColorLevelEncoderⁱᵐᵖˡ : val.

Axiom EpochTimeEncoderⁱᵐᵖˡ : val.

Axiom EpochMillisTimeEncoderⁱᵐᵖˡ : val.

Axiom EpochNanosTimeEncoderⁱᵐᵖˡ : val.

Axiom encodeTimeLayoutⁱᵐᵖˡ : val.

Axiom ISO8601TimeEncoderⁱᵐᵖˡ : val.

Axiom RFC3339TimeEncoderⁱᵐᵖˡ : val.

Axiom RFC3339NanoTimeEncoderⁱᵐᵖˡ : val.

Axiom TimeEncoderOfLayoutⁱᵐᵖˡ : val.

Axiom SecondsDurationEncoderⁱᵐᵖˡ : val.

Axiom NanosDurationEncoderⁱᵐᵖˡ : val.

Axiom MillisDurationEncoderⁱᵐᵖˡ : val.

Axiom StringDurationEncoderⁱᵐᵖˡ : val.

Axiom FullCallerEncoderⁱᵐᵖˡ : val.

Axiom ShortCallerEncoderⁱᵐᵖˡ : val.

Axiom FullNameEncoderⁱᵐᵖˡ : val.

Axiom getCheckedEntryⁱᵐᵖˡ : val.

Axiom putCheckedEntryⁱᵐᵖˡ : val.

Axiom NewEntryCallerⁱᵐᵖˡ : val.

Axiom encodeErrorⁱᵐᵖˡ : val.

Axiom newErrArrayElemⁱᵐᵖˡ : val.

Axiom addFieldsⁱᵐᵖˡ : val.

Axiom encodeStringerⁱᵐᵖˡ : val.

Axiom RegisterHooksⁱᵐᵖˡ : val.

Axiom NewIncreaseLevelCoreⁱᵐᵖˡ : val.

Axiom putJSONEncoderⁱᵐᵖˡ : val.

Axiom NewJSONEncoderⁱᵐᵖˡ : val.

Axiom newJSONEncoderⁱᵐᵖˡ : val.

Axiom safeAppendStringLikeⁱᵐᵖˡ : val.

Axiom NewLazyWithⁱᵐᵖˡ : val.

Axiom ParseLevelⁱᵐᵖˡ : val.

Axiom LevelOfⁱᵐᵖˡ : val.

Axiom NewMapObjectEncoderⁱᵐᵖˡ : val.

Axiom defaultReflectedEncoderⁱᵐᵖˡ : val.

Axiom newCountersⁱᵐᵖˡ : val.

Axiom fnv32aⁱᵐᵖˡ : val.

Axiom nopSamplingHookⁱᵐᵖˡ : val.

Axiom SamplerHookⁱᵐᵖˡ : val.

Axiom NewSamplerWithOptionsⁱᵐᵖˡ : val.

Axiom NewSamplerⁱᵐᵖˡ : val.

Axiom NewTeeⁱᵐᵖˡ : val.

Axiom AddSyncⁱᵐᵖˡ : val.

Axiom Lockⁱᵐᵖˡ : val.

Axiom NewMultiWriteSyncerⁱᵐᵖˡ : val.

Definition functions' : list (go_string * val) := [(getSliceEncoder, getSliceEncoderⁱᵐᵖˡ); (putSliceEncoder, putSliceEncoderⁱᵐᵖˡ); (NewConsoleEncoder, NewConsoleEncoderⁱᵐᵖˡ); (NewNopCore, NewNopCoreⁱᵐᵖˡ); (NewCore, NewCoreⁱᵐᵖˡ); (LowercaseLevelEncoder, LowercaseLevelEncoderⁱᵐᵖˡ); (LowercaseColorLevelEncoder, LowercaseColorLevelEncoderⁱᵐᵖˡ); (CapitalLevelEncoder, CapitalLevelEncoderⁱᵐᵖˡ); (CapitalColorLevelEncoder, CapitalColorLevelEncoderⁱᵐᵖˡ); (EpochTimeEncoder, EpochTimeEncoderⁱᵐᵖˡ); (EpochMillisTimeEncoder, EpochMillisTimeEncoderⁱᵐᵖˡ); (EpochNanosTimeEncoder, EpochNanosTimeEncoderⁱᵐᵖˡ); (encodeTimeLayout, encodeTimeLayoutⁱᵐᵖˡ); (ISO8601TimeEncoder, ISO8601TimeEncoderⁱᵐᵖˡ); (RFC3339TimeEncoder, RFC3339TimeEncoderⁱᵐᵖˡ); (RFC3339NanoTimeEncoder, RFC3339NanoTimeEncoderⁱᵐᵖˡ); (TimeEncoderOfLayout, TimeEncoderOfLayoutⁱᵐᵖˡ); (SecondsDurationEncoder, SecondsDurationEncoderⁱᵐᵖˡ); (NanosDurationEncoder, NanosDurationEncoderⁱᵐᵖˡ); (MillisDurationEncoder, MillisDurationEncoderⁱᵐᵖˡ); (StringDurationEncoder, StringDurationEncoderⁱᵐᵖˡ); (FullCallerEncoder, FullCallerEncoderⁱᵐᵖˡ); (ShortCallerEncoder, ShortCallerEncoderⁱᵐᵖˡ); (FullNameEncoder, FullNameEncoderⁱᵐᵖˡ); (getCheckedEntry, getCheckedEntryⁱᵐᵖˡ); (putCheckedEntry, putCheckedEntryⁱᵐᵖˡ); (NewEntryCaller, NewEntryCallerⁱᵐᵖˡ); (encodeError, encodeErrorⁱᵐᵖˡ); (newErrArrayElem, newErrArrayElemⁱᵐᵖˡ); (addFields, addFieldsⁱᵐᵖˡ); (encodeStringer, encodeStringerⁱᵐᵖˡ); (RegisterHooks, RegisterHooksⁱᵐᵖˡ); (NewIncreaseLevelCore, NewIncreaseLevelCoreⁱᵐᵖˡ); (putJSONEncoder, putJSONEncoderⁱᵐᵖˡ); (NewJSONEncoder, NewJSONEncoderⁱᵐᵖˡ); (newJSONEncoder, newJSONEncoderⁱᵐᵖˡ); (safeAppendStringLike, safeAppendStringLikeⁱᵐᵖˡ); (NewLazyWith, NewLazyWithⁱᵐᵖˡ); (ParseLevel, ParseLevelⁱᵐᵖˡ); (LevelOf, LevelOfⁱᵐᵖˡ); (NewMapObjectEncoder, NewMapObjectEncoderⁱᵐᵖˡ); (defaultReflectedEncoder, defaultReflectedEncoderⁱᵐᵖˡ); (newCounters, newCountersⁱᵐᵖˡ); (fnv32a, fnv32aⁱᵐᵖˡ); (nopSamplingHook, nopSamplingHookⁱᵐᵖˡ); (SamplerHook, SamplerHookⁱᵐᵖˡ); (NewSamplerWithOptions, NewSamplerWithOptionsⁱᵐᵖˡ); (NewSampler, NewSamplerⁱᵐᵖˡ); (NewTee, NewTeeⁱᵐᵖˡ); (AddSync, AddSyncⁱᵐᵖˡ); (Lock, Lockⁱᵐᵖˡ); (NewMultiWriteSyncer, NewMultiWriteSyncerⁱᵐᵖˡ)].

Axiom BufferedWriteSyncer__Stopⁱᵐᵖˡ : val.

Axiom BufferedWriteSyncer__Syncⁱᵐᵖˡ : val.

Axiom BufferedWriteSyncer__Writeⁱᵐᵖˡ : val.

Axiom BufferedWriteSyncer__flushLoopⁱᵐᵖˡ : val.

Axiom BufferedWriteSyncer__initializeⁱᵐᵖˡ : val.

Axiom systemClock__NewTickerⁱᵐᵖˡ : val.

Axiom systemClock__Nowⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddArrayⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddBinaryⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddBoolⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddByteStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddComplex128ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddComplex64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddDurationⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddFloat32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddFloat64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddIntⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddInt16ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddInt32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddInt64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddInt8ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddObjectⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddReflectedⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddTimeⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUintⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUint16ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUint32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUint64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUint8ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AddUintptrⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendArrayⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendBoolⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendByteStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendComplex128ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendComplex64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendDurationⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendFloat32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendFloat64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendIntⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendInt16ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendInt32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendInt64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendInt8ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendObjectⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendReflectedⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendTimeⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendTimeLayoutⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUintⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUint16ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUint32ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUint64ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUint8ⁱᵐᵖˡ : val.

Axiom consoleEncoder__AppendUintptrⁱᵐᵖˡ : val.

Axiom consoleEncoder__Cloneⁱᵐᵖˡ : val.

Axiom consoleEncoder__EncodeEntryⁱᵐᵖˡ : val.

Axiom consoleEncoder__OpenNamespaceⁱᵐᵖˡ : val.

Axiom consoleEncoder__addElementSeparatorⁱᵐᵖˡ : val.

Axiom consoleEncoder__addKeyⁱᵐᵖˡ : val.

Axiom consoleEncoder__addSeparatorIfNecessaryⁱᵐᵖˡ : val.

Axiom consoleEncoder__appendComplexⁱᵐᵖˡ : val.

Axiom consoleEncoder__appendFloatⁱᵐᵖˡ : val.

Axiom consoleEncoder__cloneⁱᵐᵖˡ : val.

Axiom consoleEncoder__closeOpenNamespacesⁱᵐᵖˡ : val.

Axiom consoleEncoder__encodeReflectedⁱᵐᵖˡ : val.

Axiom consoleEncoder__resetReflectBufⁱᵐᵖˡ : val.

Axiom consoleEncoder__safeAddByteStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__safeAddStringⁱᵐᵖˡ : val.

Axiom consoleEncoder__truncateⁱᵐᵖˡ : val.

Axiom consoleEncoder__writeContextⁱᵐᵖˡ : val.

Axiom nopCore__Checkⁱᵐᵖˡ : val.

Axiom nopCore__Enabledⁱᵐᵖˡ : val.

Axiom nopCore__Syncⁱᵐᵖˡ : val.

Axiom nopCore__Withⁱᵐᵖˡ : val.

Axiom nopCore__Writeⁱᵐᵖˡ : val.

Axiom ioCore__Checkⁱᵐᵖˡ : val.

Axiom ioCore__Enabledⁱᵐᵖˡ : val.

Axiom ioCore__Levelⁱᵐᵖˡ : val.

Axiom ioCore__Syncⁱᵐᵖˡ : val.

Axiom ioCore__Withⁱᵐᵖˡ : val.

Axiom ioCore__Writeⁱᵐᵖˡ : val.

Axiom ioCore__cloneⁱᵐᵖˡ : val.

Axiom LevelEncoder__UnmarshalTextⁱᵐᵖˡ : val.

Axiom TimeEncoder__UnmarshalJSONⁱᵐᵖˡ : val.

Axiom TimeEncoder__UnmarshalTextⁱᵐᵖˡ : val.

Axiom TimeEncoder__UnmarshalYAMLⁱᵐᵖˡ : val.

Axiom DurationEncoder__UnmarshalTextⁱᵐᵖˡ : val.

Axiom CallerEncoder__UnmarshalTextⁱᵐᵖˡ : val.

Axiom NameEncoder__UnmarshalTextⁱᵐᵖˡ : val.

Axiom EntryCaller__FullPathⁱᵐᵖˡ : val.

Axiom EntryCaller__Stringⁱᵐᵖˡ : val.

Axiom EntryCaller__TrimmedPathⁱᵐᵖˡ : val.

Axiom CheckWriteAction__OnWriteⁱᵐᵖˡ : val.

Axiom CheckedEntry__AddCoreⁱᵐᵖˡ : val.

Axiom CheckedEntry__Afterⁱᵐᵖˡ : val.

Axiom CheckedEntry__Shouldⁱᵐᵖˡ : val.

Axiom CheckedEntry__Writeⁱᵐᵖˡ : val.

Axiom CheckedEntry__resetⁱᵐᵖˡ : val.

Axiom errArray__MarshalLogArrayⁱᵐᵖˡ : val.

Axiom errArrayElem__Freeⁱᵐᵖˡ : val.

Axiom errArrayElem__MarshalLogArrayⁱᵐᵖˡ : val.

Axiom errArrayElem__MarshalLogObjectⁱᵐᵖˡ : val.

Axiom Field__AddToⁱᵐᵖˡ : val.

Axiom Field__Equalsⁱᵐᵖˡ : val.

Axiom hooked__Checkⁱᵐᵖˡ : val.

Axiom hooked__Enabledⁱᵐᵖˡ : val.

Axiom hooked__Levelⁱᵐᵖˡ : val.

Axiom hooked__Syncⁱᵐᵖˡ : val.

Axiom hooked__Withⁱᵐᵖˡ : val.

Axiom hooked__Writeⁱᵐᵖˡ : val.

Axiom levelFilterCore__Checkⁱᵐᵖˡ : val.

Axiom levelFilterCore__Enabledⁱᵐᵖˡ : val.

Axiom levelFilterCore__Levelⁱᵐᵖˡ : val.

Axiom levelFilterCore__Syncⁱᵐᵖˡ : val.

Axiom levelFilterCore__Withⁱᵐᵖˡ : val.

Axiom levelFilterCore__Writeⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddArrayⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddBinaryⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddBoolⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddByteStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddComplex128ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddComplex64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddDurationⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddFloat32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddFloat64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddIntⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddInt16ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddInt32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddInt64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddInt8ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddObjectⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddReflectedⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddTimeⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUintⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUint16ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUint32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUint64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUint8ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AddUintptrⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendArrayⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendBoolⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendByteStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendComplex128ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendComplex64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendDurationⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendFloat32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendFloat64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendIntⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendInt16ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendInt32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendInt64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendInt8ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendObjectⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendReflectedⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendTimeⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendTimeLayoutⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUintⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUint16ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUint32ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUint64ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUint8ⁱᵐᵖˡ : val.

Axiom jsonEncoder__AppendUintptrⁱᵐᵖˡ : val.

Axiom jsonEncoder__Cloneⁱᵐᵖˡ : val.

Axiom jsonEncoder__EncodeEntryⁱᵐᵖˡ : val.

Axiom jsonEncoder__OpenNamespaceⁱᵐᵖˡ : val.

Axiom jsonEncoder__addElementSeparatorⁱᵐᵖˡ : val.

Axiom jsonEncoder__addKeyⁱᵐᵖˡ : val.

Axiom jsonEncoder__appendComplexⁱᵐᵖˡ : val.

Axiom jsonEncoder__appendFloatⁱᵐᵖˡ : val.

Axiom jsonEncoder__cloneⁱᵐᵖˡ : val.

Axiom jsonEncoder__closeOpenNamespacesⁱᵐᵖˡ : val.

Axiom jsonEncoder__encodeReflectedⁱᵐᵖˡ : val.

Axiom jsonEncoder__resetReflectBufⁱᵐᵖˡ : val.

Axiom jsonEncoder__safeAddByteStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__safeAddStringⁱᵐᵖˡ : val.

Axiom jsonEncoder__truncateⁱᵐᵖˡ : val.

Axiom lazyWithCore__Checkⁱᵐᵖˡ : val.

Axiom lazyWithCore__Doⁱᵐᵖˡ : val.

Axiom lazyWithCore__Enabledⁱᵐᵖˡ : val.

Axiom lazyWithCore__Syncⁱᵐᵖˡ : val.

Axiom lazyWithCore__Withⁱᵐᵖˡ : val.

Axiom lazyWithCore__Writeⁱᵐᵖˡ : val.

Axiom lazyWithCore__initOnceⁱᵐᵖˡ : val.

Axiom lazyWithCore__doSlowⁱᵐᵖˡ : val.

Axiom Level__CapitalStringⁱᵐᵖˡ : val.

Axiom Level__Enabledⁱᵐᵖˡ : val.

Axiom Level__Getⁱᵐᵖˡ : val.

Axiom Level__MarshalTextⁱᵐᵖˡ : val.

Axiom Level__Setⁱᵐᵖˡ : val.

Axiom Level__Stringⁱᵐᵖˡ : val.

Axiom Level__UnmarshalTextⁱᵐᵖˡ : val.

Axiom Level__unmarshalTextⁱᵐᵖˡ : val.

Axiom ObjectMarshalerFunc__MarshalLogObjectⁱᵐᵖˡ : val.

Axiom ArrayMarshalerFunc__MarshalLogArrayⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddArrayⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddBinaryⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddBoolⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddByteStringⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddComplex128ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddComplex64ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddDurationⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddFloat32ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddFloat64ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddIntⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddInt16ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddInt32ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddInt64ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddInt8ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddObjectⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddReflectedⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddStringⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddTimeⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUintⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUint16ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUint32ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUint64ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUint8ⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__AddUintptrⁱᵐᵖˡ : val.

Axiom MapObjectEncoder__OpenNamespaceⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendArrayⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendBoolⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendByteStringⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendComplex128ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendComplex64ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendDurationⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendFloat32ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendFloat64ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendIntⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendInt16ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendInt32ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendInt64ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendInt8ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendObjectⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendReflectedⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendStringⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendTimeⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUintⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUint16ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUint32ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUint64ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUint8ⁱᵐᵖˡ : val.

Axiom sliceArrayEncoder__AppendUintptrⁱᵐᵖˡ : val.

Axiom counter__IncCheckResetⁱᵐᵖˡ : val.

Axiom counters__getⁱᵐᵖˡ : val.

Axiom optionFunc__applyⁱᵐᵖˡ : val.

Axiom sampler__Checkⁱᵐᵖˡ : val.

Axiom sampler__Enabledⁱᵐᵖˡ : val.

Axiom sampler__Levelⁱᵐᵖˡ : val.

Axiom sampler__Syncⁱᵐᵖˡ : val.

Axiom sampler__Withⁱᵐᵖˡ : val.

Axiom sampler__Writeⁱᵐᵖˡ : val.

Axiom multiCore__Checkⁱᵐᵖˡ : val.

Axiom multiCore__Enabledⁱᵐᵖˡ : val.

Axiom multiCore__Levelⁱᵐᵖˡ : val.

Axiom multiCore__Syncⁱᵐᵖˡ : val.

Axiom multiCore__Withⁱᵐᵖˡ : val.

Axiom multiCore__Writeⁱᵐᵖˡ : val.

Axiom lockedWriteSyncer__Lockⁱᵐᵖˡ : val.

Axiom lockedWriteSyncer__Syncⁱᵐᵖˡ : val.

Axiom lockedWriteSyncer__TryLockⁱᵐᵖˡ : val.

Axiom lockedWriteSyncer__Unlockⁱᵐᵖˡ : val.

Axiom lockedWriteSyncer__Writeⁱᵐᵖˡ : val.

Axiom writerWrapper__Syncⁱᵐᵖˡ : val.

Axiom writerWrapper__Writeⁱᵐᵖˡ : val.

Axiom multiWriteSyncer__Syncⁱᵐᵖˡ : val.

Axiom multiWriteSyncer__Writeⁱᵐᵖˡ : val.

Definition msets' : list (go_string * (list (go_string * val))) := [(BufferedWriteSyncer.id, []); (ptrT.id BufferedWriteSyncer.id, [("Stop"%go, BufferedWriteSyncer__Stopⁱᵐᵖˡ); ("Sync"%go, BufferedWriteSyncer__Syncⁱᵐᵖˡ); ("Write"%go, BufferedWriteSyncer__Writeⁱᵐᵖˡ); ("flushLoop"%go, BufferedWriteSyncer__flushLoopⁱᵐᵖˡ); ("initialize"%go, BufferedWriteSyncer__initializeⁱᵐᵖˡ)]); (systemClock.id, [("NewTicker"%go, systemClock__NewTickerⁱᵐᵖˡ); ("Now"%go, systemClock__Nowⁱᵐᵖˡ)]); (ptrT.id systemClock.id, [("NewTicker"%go, systemClock__NewTickerⁱᵐᵖˡ); ("Now"%go, systemClock__Nowⁱᵐᵖˡ)]); (consoleEncoder.id, [("AddArray"%go, consoleEncoder__AddArrayⁱᵐᵖˡ); ("AddBinary"%go, consoleEncoder__AddBinaryⁱᵐᵖˡ); ("AddBool"%go, consoleEncoder__AddBoolⁱᵐᵖˡ); ("AddByteString"%go, consoleEncoder__AddByteStringⁱᵐᵖˡ); ("AddComplex128"%go, consoleEncoder__AddComplex128ⁱᵐᵖˡ); ("AddComplex64"%go, consoleEncoder__AddComplex64ⁱᵐᵖˡ); ("AddDuration"%go, consoleEncoder__AddDurationⁱᵐᵖˡ); ("AddFloat32"%go, consoleEncoder__AddFloat32ⁱᵐᵖˡ); ("AddFloat64"%go, consoleEncoder__AddFloat64ⁱᵐᵖˡ); ("AddInt"%go, consoleEncoder__AddIntⁱᵐᵖˡ); ("AddInt16"%go, consoleEncoder__AddInt16ⁱᵐᵖˡ); ("AddInt32"%go, consoleEncoder__AddInt32ⁱᵐᵖˡ); ("AddInt64"%go, consoleEncoder__AddInt64ⁱᵐᵖˡ); ("AddInt8"%go, consoleEncoder__AddInt8ⁱᵐᵖˡ); ("AddObject"%go, consoleEncoder__AddObjectⁱᵐᵖˡ); ("AddReflected"%go, consoleEncoder__AddReflectedⁱᵐᵖˡ); ("AddString"%go, consoleEncoder__AddStringⁱᵐᵖˡ); ("AddTime"%go, consoleEncoder__AddTimeⁱᵐᵖˡ); ("AddUint"%go, consoleEncoder__AddUintⁱᵐᵖˡ); ("AddUint16"%go, consoleEncoder__AddUint16ⁱᵐᵖˡ); ("AddUint32"%go, consoleEncoder__AddUint32ⁱᵐᵖˡ); ("AddUint64"%go, consoleEncoder__AddUint64ⁱᵐᵖˡ); ("AddUint8"%go, consoleEncoder__AddUint8ⁱᵐᵖˡ); ("AddUintptr"%go, consoleEncoder__AddUintptrⁱᵐᵖˡ); ("AppendArray"%go, consoleEncoder__AppendArrayⁱᵐᵖˡ); ("AppendBool"%go, consoleEncoder__AppendBoolⁱᵐᵖˡ); ("AppendByteString"%go, consoleEncoder__AppendByteStringⁱᵐᵖˡ); ("AppendComplex128"%go, consoleEncoder__AppendComplex128ⁱᵐᵖˡ); ("AppendComplex64"%go, consoleEncoder__AppendComplex64ⁱᵐᵖˡ); ("AppendDuration"%go, consoleEncoder__AppendDurationⁱᵐᵖˡ); ("AppendFloat32"%go, consoleEncoder__AppendFloat32ⁱᵐᵖˡ); ("AppendFloat64"%go, consoleEncoder__AppendFloat64ⁱᵐᵖˡ); ("AppendInt"%go, consoleEncoder__AppendIntⁱᵐᵖˡ); ("AppendInt16"%go, consoleEncoder__AppendInt16ⁱᵐᵖˡ); ("AppendInt32"%go, consoleEncoder__AppendInt32ⁱᵐᵖˡ); ("AppendInt64"%go, consoleEncoder__AppendInt64ⁱᵐᵖˡ); ("AppendInt8"%go, consoleEncoder__AppendInt8ⁱᵐᵖˡ); ("AppendObject"%go, consoleEncoder__AppendObjectⁱᵐᵖˡ); ("AppendReflected"%go, consoleEncoder__AppendReflectedⁱᵐᵖˡ); ("AppendString"%go, consoleEncoder__AppendStringⁱᵐᵖˡ); ("AppendTime"%go, consoleEncoder__AppendTimeⁱᵐᵖˡ); ("AppendTimeLayout"%go, consoleEncoder__AppendTimeLayoutⁱᵐᵖˡ); ("AppendUint"%go, consoleEncoder__AppendUintⁱᵐᵖˡ); ("AppendUint16"%go, consoleEncoder__AppendUint16ⁱᵐᵖˡ); ("AppendUint32"%go, consoleEncoder__AppendUint32ⁱᵐᵖˡ); ("AppendUint64"%go, consoleEncoder__AppendUint64ⁱᵐᵖˡ); ("AppendUint8"%go, consoleEncoder__AppendUint8ⁱᵐᵖˡ); ("AppendUintptr"%go, consoleEncoder__AppendUintptrⁱᵐᵖˡ); ("Clone"%go, consoleEncoder__Cloneⁱᵐᵖˡ); ("EncodeEntry"%go, consoleEncoder__EncodeEntryⁱᵐᵖˡ); ("OpenNamespace"%go, consoleEncoder__OpenNamespaceⁱᵐᵖˡ); ("addElementSeparator"%go, consoleEncoder__addElementSeparatorⁱᵐᵖˡ); ("addKey"%go, consoleEncoder__addKeyⁱᵐᵖˡ); ("addSeparatorIfNecessary"%go, consoleEncoder__addSeparatorIfNecessaryⁱᵐᵖˡ); ("appendComplex"%go, consoleEncoder__appendComplexⁱᵐᵖˡ); ("appendFloat"%go, consoleEncoder__appendFloatⁱᵐᵖˡ); ("clone"%go, consoleEncoder__cloneⁱᵐᵖˡ); ("closeOpenNamespaces"%go, consoleEncoder__closeOpenNamespacesⁱᵐᵖˡ); ("encodeReflected"%go, consoleEncoder__encodeReflectedⁱᵐᵖˡ); ("resetReflectBuf"%go, consoleEncoder__resetReflectBufⁱᵐᵖˡ); ("safeAddByteString"%go, consoleEncoder__safeAddByteStringⁱᵐᵖˡ); ("safeAddString"%go, consoleEncoder__safeAddStringⁱᵐᵖˡ); ("truncate"%go, consoleEncoder__truncateⁱᵐᵖˡ); ("writeContext"%go, consoleEncoder__writeContextⁱᵐᵖˡ)]); (ptrT.id consoleEncoder.id, [("AddArray"%go, consoleEncoder__AddArrayⁱᵐᵖˡ); ("AddBinary"%go, consoleEncoder__AddBinaryⁱᵐᵖˡ); ("AddBool"%go, consoleEncoder__AddBoolⁱᵐᵖˡ); ("AddByteString"%go, consoleEncoder__AddByteStringⁱᵐᵖˡ); ("AddComplex128"%go, consoleEncoder__AddComplex128ⁱᵐᵖˡ); ("AddComplex64"%go, consoleEncoder__AddComplex64ⁱᵐᵖˡ); ("AddDuration"%go, consoleEncoder__AddDurationⁱᵐᵖˡ); ("AddFloat32"%go, consoleEncoder__AddFloat32ⁱᵐᵖˡ); ("AddFloat64"%go, consoleEncoder__AddFloat64ⁱᵐᵖˡ); ("AddInt"%go, consoleEncoder__AddIntⁱᵐᵖˡ); ("AddInt16"%go, consoleEncoder__AddInt16ⁱᵐᵖˡ); ("AddInt32"%go, consoleEncoder__AddInt32ⁱᵐᵖˡ); ("AddInt64"%go, consoleEncoder__AddInt64ⁱᵐᵖˡ); ("AddInt8"%go, consoleEncoder__AddInt8ⁱᵐᵖˡ); ("AddObject"%go, consoleEncoder__AddObjectⁱᵐᵖˡ); ("AddReflected"%go, consoleEncoder__AddReflectedⁱᵐᵖˡ); ("AddString"%go, consoleEncoder__AddStringⁱᵐᵖˡ); ("AddTime"%go, consoleEncoder__AddTimeⁱᵐᵖˡ); ("AddUint"%go, consoleEncoder__AddUintⁱᵐᵖˡ); ("AddUint16"%go, consoleEncoder__AddUint16ⁱᵐᵖˡ); ("AddUint32"%go, consoleEncoder__AddUint32ⁱᵐᵖˡ); ("AddUint64"%go, consoleEncoder__AddUint64ⁱᵐᵖˡ); ("AddUint8"%go, consoleEncoder__AddUint8ⁱᵐᵖˡ); ("AddUintptr"%go, consoleEncoder__AddUintptrⁱᵐᵖˡ); ("AppendArray"%go, consoleEncoder__AppendArrayⁱᵐᵖˡ); ("AppendBool"%go, consoleEncoder__AppendBoolⁱᵐᵖˡ); ("AppendByteString"%go, consoleEncoder__AppendByteStringⁱᵐᵖˡ); ("AppendComplex128"%go, consoleEncoder__AppendComplex128ⁱᵐᵖˡ); ("AppendComplex64"%go, consoleEncoder__AppendComplex64ⁱᵐᵖˡ); ("AppendDuration"%go, consoleEncoder__AppendDurationⁱᵐᵖˡ); ("AppendFloat32"%go, consoleEncoder__AppendFloat32ⁱᵐᵖˡ); ("AppendFloat64"%go, consoleEncoder__AppendFloat64ⁱᵐᵖˡ); ("AppendInt"%go, consoleEncoder__AppendIntⁱᵐᵖˡ); ("AppendInt16"%go, consoleEncoder__AppendInt16ⁱᵐᵖˡ); ("AppendInt32"%go, consoleEncoder__AppendInt32ⁱᵐᵖˡ); ("AppendInt64"%go, consoleEncoder__AppendInt64ⁱᵐᵖˡ); ("AppendInt8"%go, consoleEncoder__AppendInt8ⁱᵐᵖˡ); ("AppendObject"%go, consoleEncoder__AppendObjectⁱᵐᵖˡ); ("AppendReflected"%go, consoleEncoder__AppendReflectedⁱᵐᵖˡ); ("AppendString"%go, consoleEncoder__AppendStringⁱᵐᵖˡ); ("AppendTime"%go, consoleEncoder__AppendTimeⁱᵐᵖˡ); ("AppendTimeLayout"%go, consoleEncoder__AppendTimeLayoutⁱᵐᵖˡ); ("AppendUint"%go, consoleEncoder__AppendUintⁱᵐᵖˡ); ("AppendUint16"%go, consoleEncoder__AppendUint16ⁱᵐᵖˡ); ("AppendUint32"%go, consoleEncoder__AppendUint32ⁱᵐᵖˡ); ("AppendUint64"%go, consoleEncoder__AppendUint64ⁱᵐᵖˡ); ("AppendUint8"%go, consoleEncoder__AppendUint8ⁱᵐᵖˡ); ("AppendUintptr"%go, consoleEncoder__AppendUintptrⁱᵐᵖˡ); ("Clone"%go, consoleEncoder__Cloneⁱᵐᵖˡ); ("EncodeEntry"%go, consoleEncoder__EncodeEntryⁱᵐᵖˡ); ("OpenNamespace"%go, consoleEncoder__OpenNamespaceⁱᵐᵖˡ); ("addElementSeparator"%go, consoleEncoder__addElementSeparatorⁱᵐᵖˡ); ("addKey"%go, consoleEncoder__addKeyⁱᵐᵖˡ); ("addSeparatorIfNecessary"%go, consoleEncoder__addSeparatorIfNecessaryⁱᵐᵖˡ); ("appendComplex"%go, consoleEncoder__appendComplexⁱᵐᵖˡ); ("appendFloat"%go, consoleEncoder__appendFloatⁱᵐᵖˡ); ("clone"%go, consoleEncoder__cloneⁱᵐᵖˡ); ("closeOpenNamespaces"%go, consoleEncoder__closeOpenNamespacesⁱᵐᵖˡ); ("encodeReflected"%go, consoleEncoder__encodeReflectedⁱᵐᵖˡ); ("resetReflectBuf"%go, consoleEncoder__resetReflectBufⁱᵐᵖˡ); ("safeAddByteString"%go, consoleEncoder__safeAddByteStringⁱᵐᵖˡ); ("safeAddString"%go, consoleEncoder__safeAddStringⁱᵐᵖˡ); ("truncate"%go, consoleEncoder__truncateⁱᵐᵖˡ); ("writeContext"%go, consoleEncoder__writeContextⁱᵐᵖˡ)]); (nopCore.id, [("Check"%go, nopCore__Checkⁱᵐᵖˡ); ("Enabled"%go, nopCore__Enabledⁱᵐᵖˡ); ("Sync"%go, nopCore__Syncⁱᵐᵖˡ); ("With"%go, nopCore__Withⁱᵐᵖˡ); ("Write"%go, nopCore__Writeⁱᵐᵖˡ)]); (ptrT.id nopCore.id, [("Check"%go, nopCore__Checkⁱᵐᵖˡ); ("Enabled"%go, nopCore__Enabledⁱᵐᵖˡ); ("Sync"%go, nopCore__Syncⁱᵐᵖˡ); ("With"%go, nopCore__Withⁱᵐᵖˡ); ("Write"%go, nopCore__Writeⁱᵐᵖˡ)]); (ioCore.id, [("Enabled"%go, ioCore__Enabledⁱᵐᵖˡ)]); (ptrT.id ioCore.id, [("Check"%go, ioCore__Checkⁱᵐᵖˡ); ("Enabled"%go, ioCore__Enabledⁱᵐᵖˡ); ("Level"%go, ioCore__Levelⁱᵐᵖˡ); ("Sync"%go, ioCore__Syncⁱᵐᵖˡ); ("With"%go, ioCore__Withⁱᵐᵖˡ); ("Write"%go, ioCore__Writeⁱᵐᵖˡ); ("clone"%go, ioCore__cloneⁱᵐᵖˡ)]); (LevelEncoder.id, []); (ptrT.id LevelEncoder.id, [("UnmarshalText"%go, LevelEncoder__UnmarshalTextⁱᵐᵖˡ)]); (TimeEncoder.id, []); (ptrT.id TimeEncoder.id, [("UnmarshalJSON"%go, TimeEncoder__UnmarshalJSONⁱᵐᵖˡ); ("UnmarshalText"%go, TimeEncoder__UnmarshalTextⁱᵐᵖˡ); ("UnmarshalYAML"%go, TimeEncoder__UnmarshalYAMLⁱᵐᵖˡ)]); (DurationEncoder.id, []); (ptrT.id DurationEncoder.id, [("UnmarshalText"%go, DurationEncoder__UnmarshalTextⁱᵐᵖˡ)]); (CallerEncoder.id, []); (ptrT.id CallerEncoder.id, [("UnmarshalText"%go, CallerEncoder__UnmarshalTextⁱᵐᵖˡ)]); (NameEncoder.id, []); (ptrT.id NameEncoder.id, [("UnmarshalText"%go, NameEncoder__UnmarshalTextⁱᵐᵖˡ)]); (EncoderConfig.id, []); (ptrT.id EncoderConfig.id, []); (EntryCaller.id, [("FullPath"%go, EntryCaller__FullPathⁱᵐᵖˡ); ("String"%go, EntryCaller__Stringⁱᵐᵖˡ); ("TrimmedPath"%go, EntryCaller__TrimmedPathⁱᵐᵖˡ)]); (ptrT.id EntryCaller.id, [("FullPath"%go, EntryCaller__FullPathⁱᵐᵖˡ); ("String"%go, EntryCaller__Stringⁱᵐᵖˡ); ("TrimmedPath"%go, EntryCaller__TrimmedPathⁱᵐᵖˡ)]); (Entry.id, []); (ptrT.id Entry.id, []); (CheckWriteAction.id, [("OnWrite"%go, CheckWriteAction__OnWriteⁱᵐᵖˡ)]); (ptrT.id CheckWriteAction.id, [("OnWrite"%go, CheckWriteAction__OnWriteⁱᵐᵖˡ)]); (CheckedEntry.id, []); (ptrT.id CheckedEntry.id, [("AddCore"%go, CheckedEntry__AddCoreⁱᵐᵖˡ); ("After"%go, CheckedEntry__Afterⁱᵐᵖˡ); ("Should"%go, CheckedEntry__Shouldⁱᵐᵖˡ); ("Write"%go, CheckedEntry__Writeⁱᵐᵖˡ); ("reset"%go, CheckedEntry__resetⁱᵐᵖˡ)]); (errArray.id, [("MarshalLogArray"%go, errArray__MarshalLogArrayⁱᵐᵖˡ)]); (ptrT.id errArray.id, [("MarshalLogArray"%go, errArray__MarshalLogArrayⁱᵐᵖˡ)]); (errArrayElem.id, []); (ptrT.id errArrayElem.id, [("Free"%go, errArrayElem__Freeⁱᵐᵖˡ); ("MarshalLogArray"%go, errArrayElem__MarshalLogArrayⁱᵐᵖˡ); ("MarshalLogObject"%go, errArrayElem__MarshalLogObjectⁱᵐᵖˡ)]); (FieldType.id, []); (ptrT.id FieldType.id, []); (Field.id, [("AddTo"%go, Field__AddToⁱᵐᵖˡ); ("Equals"%go, Field__Equalsⁱᵐᵖˡ)]); (ptrT.id Field.id, [("AddTo"%go, Field__AddToⁱᵐᵖˡ); ("Equals"%go, Field__Equalsⁱᵐᵖˡ)]); (hooked.id, [("Enabled"%go, hooked__Enabledⁱᵐᵖˡ); ("Sync"%go, hooked__Syncⁱᵐᵖˡ)]); (ptrT.id hooked.id, [("Check"%go, hooked__Checkⁱᵐᵖˡ); ("Enabled"%go, hooked__Enabledⁱᵐᵖˡ); ("Level"%go, hooked__Levelⁱᵐᵖˡ); ("Sync"%go, hooked__Syncⁱᵐᵖˡ); ("With"%go, hooked__Withⁱᵐᵖˡ); ("Write"%go, hooked__Writeⁱᵐᵖˡ)]); (levelFilterCore.id, []); (ptrT.id levelFilterCore.id, [("Check"%go, levelFilterCore__Checkⁱᵐᵖˡ); ("Enabled"%go, levelFilterCore__Enabledⁱᵐᵖˡ); ("Level"%go, levelFilterCore__Levelⁱᵐᵖˡ); ("Sync"%go, levelFilterCore__Syncⁱᵐᵖˡ); ("With"%go, levelFilterCore__Withⁱᵐᵖˡ); ("Write"%go, levelFilterCore__Writeⁱᵐᵖˡ)]); (jsonEncoder.id, []); (ptrT.id jsonEncoder.id, [("AddArray"%go, jsonEncoder__AddArrayⁱᵐᵖˡ); ("AddBinary"%go, jsonEncoder__AddBinaryⁱᵐᵖˡ); ("AddBool"%go, jsonEncoder__AddBoolⁱᵐᵖˡ); ("AddByteString"%go, jsonEncoder__AddByteStringⁱᵐᵖˡ); ("AddComplex128"%go, jsonEncoder__AddComplex128ⁱᵐᵖˡ); ("AddComplex64"%go, jsonEncoder__AddComplex64ⁱᵐᵖˡ); ("AddDuration"%go, jsonEncoder__AddDurationⁱᵐᵖˡ); ("AddFloat32"%go, jsonEncoder__AddFloat32ⁱᵐᵖˡ); ("AddFloat64"%go, jsonEncoder__AddFloat64ⁱᵐᵖˡ); ("AddInt"%go, jsonEncoder__AddIntⁱᵐᵖˡ); ("AddInt16"%go, jsonEncoder__AddInt16ⁱᵐᵖˡ); ("AddInt32"%go, jsonEncoder__AddInt32ⁱᵐᵖˡ); ("AddInt64"%go, jsonEncoder__AddInt64ⁱᵐᵖˡ); ("AddInt8"%go, jsonEncoder__AddInt8ⁱᵐᵖˡ); ("AddObject"%go, jsonEncoder__AddObjectⁱᵐᵖˡ); ("AddReflected"%go, jsonEncoder__AddReflectedⁱᵐᵖˡ); ("AddString"%go, jsonEncoder__AddStringⁱᵐᵖˡ); ("AddTime"%go, jsonEncoder__AddTimeⁱᵐᵖˡ); ("AddUint"%go, jsonEncoder__AddUintⁱᵐᵖˡ); ("AddUint16"%go, jsonEncoder__AddUint16ⁱᵐᵖˡ); ("AddUint32"%go, jsonEncoder__AddUint32ⁱᵐᵖˡ); ("AddUint64"%go, jsonEncoder__AddUint64ⁱᵐᵖˡ); ("AddUint8"%go, jsonEncoder__AddUint8ⁱᵐᵖˡ); ("AddUintptr"%go, jsonEncoder__AddUintptrⁱᵐᵖˡ); ("AppendArray"%go, jsonEncoder__AppendArrayⁱᵐᵖˡ); ("AppendBool"%go, jsonEncoder__AppendBoolⁱᵐᵖˡ); ("AppendByteString"%go, jsonEncoder__AppendByteStringⁱᵐᵖˡ); ("AppendComplex128"%go, jsonEncoder__AppendComplex128ⁱᵐᵖˡ); ("AppendComplex64"%go, jsonEncoder__AppendComplex64ⁱᵐᵖˡ); ("AppendDuration"%go, jsonEncoder__AppendDurationⁱᵐᵖˡ); ("AppendFloat32"%go, jsonEncoder__AppendFloat32ⁱᵐᵖˡ); ("AppendFloat64"%go, jsonEncoder__AppendFloat64ⁱᵐᵖˡ); ("AppendInt"%go, jsonEncoder__AppendIntⁱᵐᵖˡ); ("AppendInt16"%go, jsonEncoder__AppendInt16ⁱᵐᵖˡ); ("AppendInt32"%go, jsonEncoder__AppendInt32ⁱᵐᵖˡ); ("AppendInt64"%go, jsonEncoder__AppendInt64ⁱᵐᵖˡ); ("AppendInt8"%go, jsonEncoder__AppendInt8ⁱᵐᵖˡ); ("AppendObject"%go, jsonEncoder__AppendObjectⁱᵐᵖˡ); ("AppendReflected"%go, jsonEncoder__AppendReflectedⁱᵐᵖˡ); ("AppendString"%go, jsonEncoder__AppendStringⁱᵐᵖˡ); ("AppendTime"%go, jsonEncoder__AppendTimeⁱᵐᵖˡ); ("AppendTimeLayout"%go, jsonEncoder__AppendTimeLayoutⁱᵐᵖˡ); ("AppendUint"%go, jsonEncoder__AppendUintⁱᵐᵖˡ); ("AppendUint16"%go, jsonEncoder__AppendUint16ⁱᵐᵖˡ); ("AppendUint32"%go, jsonEncoder__AppendUint32ⁱᵐᵖˡ); ("AppendUint64"%go, jsonEncoder__AppendUint64ⁱᵐᵖˡ); ("AppendUint8"%go, jsonEncoder__AppendUint8ⁱᵐᵖˡ); ("AppendUintptr"%go, jsonEncoder__AppendUintptrⁱᵐᵖˡ); ("Clone"%go, jsonEncoder__Cloneⁱᵐᵖˡ); ("EncodeEntry"%go, jsonEncoder__EncodeEntryⁱᵐᵖˡ); ("OpenNamespace"%go, jsonEncoder__OpenNamespaceⁱᵐᵖˡ); ("addElementSeparator"%go, jsonEncoder__addElementSeparatorⁱᵐᵖˡ); ("addKey"%go, jsonEncoder__addKeyⁱᵐᵖˡ); ("appendComplex"%go, jsonEncoder__appendComplexⁱᵐᵖˡ); ("appendFloat"%go, jsonEncoder__appendFloatⁱᵐᵖˡ); ("clone"%go, jsonEncoder__cloneⁱᵐᵖˡ); ("closeOpenNamespaces"%go, jsonEncoder__closeOpenNamespacesⁱᵐᵖˡ); ("encodeReflected"%go, jsonEncoder__encodeReflectedⁱᵐᵖˡ); ("resetReflectBuf"%go, jsonEncoder__resetReflectBufⁱᵐᵖˡ); ("safeAddByteString"%go, jsonEncoder__safeAddByteStringⁱᵐᵖˡ); ("safeAddString"%go, jsonEncoder__safeAddStringⁱᵐᵖˡ); ("truncate"%go, jsonEncoder__truncateⁱᵐᵖˡ)]); (lazyWithCore.id, [("Enabled"%go, lazyWithCore__Enabledⁱᵐᵖˡ); ("Sync"%go, lazyWithCore__Syncⁱᵐᵖˡ); ("Write"%go, lazyWithCore__Writeⁱᵐᵖˡ)]); (ptrT.id lazyWithCore.id, [("Check"%go, lazyWithCore__Checkⁱᵐᵖˡ); ("Do"%go, lazyWithCore__Doⁱᵐᵖˡ); ("Enabled"%go, lazyWithCore__Enabledⁱᵐᵖˡ); ("Sync"%go, lazyWithCore__Syncⁱᵐᵖˡ); ("With"%go, lazyWithCore__Withⁱᵐᵖˡ); ("Write"%go, lazyWithCore__Writeⁱᵐᵖˡ); ("initOnce"%go, lazyWithCore__initOnceⁱᵐᵖˡ); ("doSlow"%go, lazyWithCore__doSlowⁱᵐᵖˡ)]); (Level.id, [("CapitalString"%go, Level__CapitalStringⁱᵐᵖˡ); ("Enabled"%go, Level__Enabledⁱᵐᵖˡ); ("MarshalText"%go, Level__MarshalTextⁱᵐᵖˡ); ("String"%go, Level__Stringⁱᵐᵖˡ)]); (ptrT.id Level.id, [("CapitalString"%go, Level__CapitalStringⁱᵐᵖˡ); ("Enabled"%go, Level__Enabledⁱᵐᵖˡ); ("Get"%go, Level__Getⁱᵐᵖˡ); ("MarshalText"%go, Level__MarshalTextⁱᵐᵖˡ); ("Set"%go, Level__Setⁱᵐᵖˡ); ("String"%go, Level__Stringⁱᵐᵖˡ); ("UnmarshalText"%go, Level__UnmarshalTextⁱᵐᵖˡ); ("unmarshalText"%go, Level__unmarshalTextⁱᵐᵖˡ)]); (ObjectMarshalerFunc.id, [("MarshalLogObject"%go, ObjectMarshalerFunc__MarshalLogObjectⁱᵐᵖˡ)]); (ptrT.id ObjectMarshalerFunc.id, [("MarshalLogObject"%go, ObjectMarshalerFunc__MarshalLogObjectⁱᵐᵖˡ)]); (ArrayMarshalerFunc.id, [("MarshalLogArray"%go, ArrayMarshalerFunc__MarshalLogArrayⁱᵐᵖˡ)]); (ptrT.id ArrayMarshalerFunc.id, [("MarshalLogArray"%go, ArrayMarshalerFunc__MarshalLogArrayⁱᵐᵖˡ)]); (MapObjectEncoder.id, [("AddDuration"%go, MapObjectEncoder__AddDurationⁱᵐᵖˡ); ("AddTime"%go, MapObjectEncoder__AddTimeⁱᵐᵖˡ)]); (ptrT.id MapObjectEncoder.id, [("AddArray"%go, MapObjectEncoder__AddArrayⁱᵐᵖˡ); ("AddBinary"%go, MapObjectEncoder__AddBinaryⁱᵐᵖˡ); ("AddBool"%go, MapObjectEncoder__AddBoolⁱᵐᵖˡ); ("AddByteString"%go, MapObjectEncoder__AddByteStringⁱᵐᵖˡ); ("AddComplex128"%go, MapObjectEncoder__AddComplex128ⁱᵐᵖˡ); ("AddComplex64"%go, MapObjectEncoder__AddComplex64ⁱᵐᵖˡ); ("AddDuration"%go, MapObjectEncoder__AddDurationⁱᵐᵖˡ); ("AddFloat32"%go, MapObjectEncoder__AddFloat32ⁱᵐᵖˡ); ("AddFloat64"%go, MapObjectEncoder__AddFloat64ⁱᵐᵖˡ); ("AddInt"%go, MapObjectEncoder__AddIntⁱᵐᵖˡ); ("AddInt16"%go, MapObjectEncoder__AddInt16ⁱᵐᵖˡ); ("AddInt32"%go, MapObjectEncoder__AddInt32ⁱᵐᵖˡ); ("AddInt64"%go, MapObjectEncoder__AddInt64ⁱᵐᵖˡ); ("AddInt8"%go, MapObjectEncoder__AddInt8ⁱᵐᵖˡ); ("AddObject"%go, MapObjectEncoder__AddObjectⁱᵐᵖˡ); ("AddReflected"%go, MapObjectEncoder__AddReflectedⁱᵐᵖˡ); ("AddString"%go, MapObjectEncoder__AddStringⁱᵐᵖˡ); ("AddTime"%go, MapObjectEncoder__AddTimeⁱᵐᵖˡ); ("AddUint"%go, MapObjectEncoder__AddUintⁱᵐᵖˡ); ("AddUint16"%go, MapObjectEncoder__AddUint16ⁱᵐᵖˡ); ("AddUint32"%go, MapObjectEncoder__AddUint32ⁱᵐᵖˡ); ("AddUint64"%go, MapObjectEncoder__AddUint64ⁱᵐᵖˡ); ("AddUint8"%go, MapObjectEncoder__AddUint8ⁱᵐᵖˡ); ("AddUintptr"%go, MapObjectEncoder__AddUintptrⁱᵐᵖˡ); ("OpenNamespace"%go, MapObjectEncoder__OpenNamespaceⁱᵐᵖˡ)]); (sliceArrayEncoder.id, []); (ptrT.id sliceArrayEncoder.id, [("AppendArray"%go, sliceArrayEncoder__AppendArrayⁱᵐᵖˡ); ("AppendBool"%go, sliceArrayEncoder__AppendBoolⁱᵐᵖˡ); ("AppendByteString"%go, sliceArrayEncoder__AppendByteStringⁱᵐᵖˡ); ("AppendComplex128"%go, sliceArrayEncoder__AppendComplex128ⁱᵐᵖˡ); ("AppendComplex64"%go, sliceArrayEncoder__AppendComplex64ⁱᵐᵖˡ); ("AppendDuration"%go, sliceArrayEncoder__AppendDurationⁱᵐᵖˡ); ("AppendFloat32"%go, sliceArrayEncoder__AppendFloat32ⁱᵐᵖˡ); ("AppendFloat64"%go, sliceArrayEncoder__AppendFloat64ⁱᵐᵖˡ); ("AppendInt"%go, sliceArrayEncoder__AppendIntⁱᵐᵖˡ); ("AppendInt16"%go, sliceArrayEncoder__AppendInt16ⁱᵐᵖˡ); ("AppendInt32"%go, sliceArrayEncoder__AppendInt32ⁱᵐᵖˡ); ("AppendInt64"%go, sliceArrayEncoder__AppendInt64ⁱᵐᵖˡ); ("AppendInt8"%go, sliceArrayEncoder__AppendInt8ⁱᵐᵖˡ); ("AppendObject"%go, sliceArrayEncoder__AppendObjectⁱᵐᵖˡ); ("AppendReflected"%go, sliceArrayEncoder__AppendReflectedⁱᵐᵖˡ); ("AppendString"%go, sliceArrayEncoder__AppendStringⁱᵐᵖˡ); ("AppendTime"%go, sliceArrayEncoder__AppendTimeⁱᵐᵖˡ); ("AppendUint"%go, sliceArrayEncoder__AppendUintⁱᵐᵖˡ); ("AppendUint16"%go, sliceArrayEncoder__AppendUint16ⁱᵐᵖˡ); ("AppendUint32"%go, sliceArrayEncoder__AppendUint32ⁱᵐᵖˡ); ("AppendUint64"%go, sliceArrayEncoder__AppendUint64ⁱᵐᵖˡ); ("AppendUint8"%go, sliceArrayEncoder__AppendUint8ⁱᵐᵖˡ); ("AppendUintptr"%go, sliceArrayEncoder__AppendUintptrⁱᵐᵖˡ)]); (counter.id, []); (ptrT.id counter.id, [("IncCheckReset"%go, counter__IncCheckResetⁱᵐᵖˡ)]); (counters.id, []); (ptrT.id counters.id, [("get"%go, counters__getⁱᵐᵖˡ)]); (SamplingDecision.id, []); (ptrT.id SamplingDecision.id, []); (optionFunc.id, [("apply"%go, optionFunc__applyⁱᵐᵖˡ)]); (ptrT.id optionFunc.id, [("apply"%go, optionFunc__applyⁱᵐᵖˡ)]); (sampler.id, [("Enabled"%go, sampler__Enabledⁱᵐᵖˡ); ("Sync"%go, sampler__Syncⁱᵐᵖˡ); ("Write"%go, sampler__Writeⁱᵐᵖˡ)]); (ptrT.id sampler.id, [("Check"%go, sampler__Checkⁱᵐᵖˡ); ("Enabled"%go, sampler__Enabledⁱᵐᵖˡ); ("Level"%go, sampler__Levelⁱᵐᵖˡ); ("Sync"%go, sampler__Syncⁱᵐᵖˡ); ("With"%go, sampler__Withⁱᵐᵖˡ); ("Write"%go, sampler__Writeⁱᵐᵖˡ)]); (multiCore.id, [("Check"%go, multiCore__Checkⁱᵐᵖˡ); ("Enabled"%go, multiCore__Enabledⁱᵐᵖˡ); ("Level"%go, multiCore__Levelⁱᵐᵖˡ); ("Sync"%go, multiCore__Syncⁱᵐᵖˡ); ("With"%go, multiCore__Withⁱᵐᵖˡ); ("Write"%go, multiCore__Writeⁱᵐᵖˡ)]); (ptrT.id multiCore.id, [("Check"%go, multiCore__Checkⁱᵐᵖˡ); ("Enabled"%go, multiCore__Enabledⁱᵐᵖˡ); ("Level"%go, multiCore__Levelⁱᵐᵖˡ); ("Sync"%go, multiCore__Syncⁱᵐᵖˡ); ("With"%go, multiCore__Withⁱᵐᵖˡ); ("Write"%go, multiCore__Writeⁱᵐᵖˡ)]); (lockedWriteSyncer.id, []); (ptrT.id lockedWriteSyncer.id, [("Lock"%go, lockedWriteSyncer__Lockⁱᵐᵖˡ); ("Sync"%go, lockedWriteSyncer__Syncⁱᵐᵖˡ); ("TryLock"%go, lockedWriteSyncer__TryLockⁱᵐᵖˡ); ("Unlock"%go, lockedWriteSyncer__Unlockⁱᵐᵖˡ); ("Write"%go, lockedWriteSyncer__Writeⁱᵐᵖˡ)]); (writerWrapper.id, [("Sync"%go, writerWrapper__Syncⁱᵐᵖˡ); ("Write"%go, writerWrapper__Writeⁱᵐᵖˡ)]); (ptrT.id writerWrapper.id, [("Sync"%go, writerWrapper__Syncⁱᵐᵖˡ); ("Write"%go, writerWrapper__Writeⁱᵐᵖˡ)]); (multiWriteSyncer.id, [("Sync"%go, multiWriteSyncer__Syncⁱᵐᵖˡ); ("Write"%go, multiWriteSyncer__Writeⁱᵐᵖˡ)]); (ptrT.id multiWriteSyncer.id, [("Sync"%go, multiWriteSyncer__Syncⁱᵐᵖˡ); ("Write"%go, multiWriteSyncer__Writeⁱᵐᵖˡ)])].

#[global] Instance info' : PkgInfo zapcore.zapcore :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #zapcore.zapcore (λ: <>,
      exception_do (do:  (package.alloc zapcore.zapcore #());;;
      do:  (DefaultClock'init #());;;
      do:  (_sliceEncoderPool'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_cePool'init #());;;
      do:  (_'init #());;;
      do:  (_errArrayElemPool'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_jsonPool'init #());;;
      do:  (nullLiteralBytes'init #());;;
      do:  (errUnmarshalNilLevel'init #());;;
      do:  (_levelToColor'init #());;;
      do:  (_unknownLevelColor'init #());;;
      do:  (_levelToLowercaseColorString'init #());;;
      do:  (_levelToCapitalColorString'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #());;;
      do:  (_'init #()))
      ).

End code.
End zapcore.
