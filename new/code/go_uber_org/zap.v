(* autogenerated from go.uber.org/zap *)
From New.golang Require Import defn.
Require Export New.code.go_uber_org.zap.zapcore.

Module zap.
Section code.
Context `{ffi_syntax}.


Axiom errNoEncoderNameSpecified'init : val.

Axiom _encoderNameToConstructor'init : val.

Axiom _errArrayElemPool'init : val.

Axiom _minTimeInt64'init : val.

Axiom _maxTimeInt64'init : val.

Axiom _globalL'init : val.

Axiom _globalS'init : val.

Axiom _sinkRegistry'init : val.

Definition pkg_name' : go_string := "go.uber.org/zap".

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

Definition info' : pkg_info.t := {|
             pkg_info.vars := vars';
             pkg_info.functions := functions';
             pkg_info.msets := msets';
             pkg_info.imported_pkgs := [zapcore.pkg_name'];
           |}.

#[global] Instance  : PkgInfo pkg_name' info' :=
  {}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' (Î»: <>,
      exception_do (do:  zapcore.initialize';;;
      do:  (errNoEncoderNameSpecified'init #());;;
      do:  (_encoderNameToConstructor'init #());;;
      do:  (_errArrayElemPool'init #());;;
      do:  (_minTimeInt64'init #());;;
      do:  (_maxTimeInt64'init #());;;
      do:  (_globalL'init #());;;
      do:  (_globalS'init #());;;
      do:  (_'init #());;;
      do:  (_sinkRegistry'init #()))
      ).

End code.
End zap.
