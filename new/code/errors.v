(* autogenerated from errors *)
From New.golang Require Import defn.

Definition errors : go_string := "errors".

Module errors.
Section code.
Context `{ffi_syntax}.


Definition New : go_string := "errors.New"%go.

Definition ErrUnsupported : go_string := "errors.ErrUnsupported"%go.

Axiom ErrUnsupported'init : val.

Definition Join : go_string := "errors.Join"%go.

Definition Unwrap : go_string := "errors.Unwrap"%go.

Definition Is : go_string := "errors.Is"%go.

Definition is' : go_string := "errors.is"%go.

Definition As : go_string := "errors.As"%go.

Definition as' : go_string := "errors.as"%go.

Definition errorType : go_string := "errors.errorType"%go.

Axiom errorType'init : val.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [].

#[global] Instance info' : PkgInfo errors.errors :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  λ: <>,
    package.init #errors.errors (λ: <>,
      exception_do (do:  (package.alloc errors.errors #());;;
      do:  (ErrUnsupported'init #());;;
      do:  (errorType'init #()))
      ).

End code.
End errors.
