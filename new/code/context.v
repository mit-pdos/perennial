(* autogenerated from context *)
From New.golang Require Import defn.

Definition context : go_string := "context".

Module context.
Section code.
Context `{ffi_syntax}.


Definition Context : go_type := interfaceT.

Axiom Canceled'init : val.

Axiom DeadlineExceeded'init : val.

Definition CancelFunc : go_type := funcT.

Axiom closedchan'init : val.

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [("CancelFunc"%go, []); ("CancelFunc'ptr"%go, [])].

#[global] Instance info' : PkgInfo context.context :=
  {|
    pkg_vars := vars';
    pkg_functions := functions';
    pkg_msets := msets';
    pkg_imported_pkgs := [];
  |}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init context.context (Î»: <>,
      exception_do (do:  (Canceled'init #());;;
      do:  (DeadlineExceeded'init #());;;
      do:  (closedchan'init #()))
      ).

End code.
End context.
