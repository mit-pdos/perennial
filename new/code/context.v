(* autogenerated from context *)
From New.golang Require Import defn.

Module context.
Section code.
Context `{ffi_syntax}.


Definition Context : go_type := interfaceT.

Axiom Canceled'init : val.

Axiom DeadlineExceeded'init : val.

Definition CancelFunc : go_type := funcT.

Axiom closedchan'init : val.

Definition pkg_name' : go_string := "context".

Definition vars' : list (go_string * go_type) := [].

Definition functions' : list (go_string * val) := [].

Definition msets' : list (go_string * (list (go_string * val))) := [("CancelFunc"%go, []); ("CancelFunc'ptr"%go, [])].

Definition info' : pkg_info.t := {|
             pkg_info.vars := vars';
             pkg_info.functions := functions';
             pkg_info.msets := msets';
             pkg_info.imported_pkgs := [];
           |}.

#[global] Instance  : PkgInfo pkg_name' info' :=
  {}.

Axiom _'init : val.

Definition initialize' : val :=
  rec: "initialize'" <> :=
    globals.package_init pkg_name' (Î»: <>,
      exception_do (do:  (Canceled'init #());;;
      do:  (DeadlineExceeded'init #());;;
      do:  (closedchan'init #()))
      ).

End code.
End context.
