(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.time.
Require Export New.golang.theory.

Require Export New.code.context.

Set Default Proof Using "Type".

Module context.

(* type context.Context *)
Module Context.

#[global] Transparent context.Context.
#[global] Typeclasses Transparent context.Context.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End Context.

(* type context.deadlineExceededError *)
Module deadlineExceededError.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End deadlineExceededError.

Global Instance bounded_size_deadlineExceededError : BoundedTypeSize context.deadlineExceededError.
Admitted.

Global Instance into_val_deadlineExceededError `{ffi_syntax} : IntoVal deadlineExceededError.t.
Admitted.

Global Instance into_val_typed_deadlineExceededError `{ffi_syntax} : IntoValTyped deadlineExceededError.t context.deadlineExceededError.
Admitted.

(* type context.emptyCtx *)
Module emptyCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End emptyCtx.

Global Instance bounded_size_emptyCtx : BoundedTypeSize context.emptyCtx.
Admitted.

Global Instance into_val_emptyCtx `{ffi_syntax} : IntoVal emptyCtx.t.
Admitted.

Global Instance into_val_typed_emptyCtx `{ffi_syntax} : IntoValTyped emptyCtx.t context.emptyCtx.
Admitted.

(* type context.backgroundCtx *)
Module backgroundCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End backgroundCtx.

Global Instance bounded_size_backgroundCtx : BoundedTypeSize context.backgroundCtx.
Admitted.

Global Instance into_val_backgroundCtx `{ffi_syntax} : IntoVal backgroundCtx.t.
Admitted.

Global Instance into_val_typed_backgroundCtx `{ffi_syntax} : IntoValTyped backgroundCtx.t context.backgroundCtx.
Admitted.

(* type context.todoCtx *)
Module todoCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End todoCtx.

Global Instance bounded_size_todoCtx : BoundedTypeSize context.todoCtx.
Admitted.

Global Instance into_val_todoCtx `{ffi_syntax} : IntoVal todoCtx.t.
Admitted.

Global Instance into_val_typed_todoCtx `{ffi_syntax} : IntoValTyped todoCtx.t context.todoCtx.
Admitted.

(* type context.CancelFunc *)
Module CancelFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CancelFunc.

Global Instance bounded_size_CancelFunc : BoundedTypeSize context.CancelFunc.
Admitted.

Global Instance into_val_CancelFunc `{ffi_syntax} : IntoVal CancelFunc.t.
Admitted.

Global Instance into_val_typed_CancelFunc `{ffi_syntax} : IntoValTyped CancelFunc.t context.CancelFunc.
Admitted.

(* type context.CancelCauseFunc *)
Module CancelCauseFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CancelCauseFunc.

Global Instance bounded_size_CancelCauseFunc : BoundedTypeSize context.CancelCauseFunc.
Admitted.

Global Instance into_val_CancelCauseFunc `{ffi_syntax} : IntoVal CancelCauseFunc.t.
Admitted.

Global Instance into_val_typed_CancelCauseFunc `{ffi_syntax} : IntoValTyped CancelCauseFunc.t context.CancelCauseFunc.
Admitted.

(* type context.afterFuncer *)
Module afterFuncer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End afterFuncer.

Global Instance bounded_size_afterFuncer : BoundedTypeSize context.afterFuncer.
Admitted.

Global Instance into_val_afterFuncer `{ffi_syntax} : IntoVal afterFuncer.t.
Admitted.

Global Instance into_val_typed_afterFuncer `{ffi_syntax} : IntoValTyped afterFuncer.t context.afterFuncer.
Admitted.

(* type context.afterFuncCtx *)
Module afterFuncCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End afterFuncCtx.

Global Instance bounded_size_afterFuncCtx : BoundedTypeSize context.afterFuncCtx.
Admitted.

Global Instance into_val_afterFuncCtx `{ffi_syntax} : IntoVal afterFuncCtx.t.
Admitted.

Global Instance into_val_typed_afterFuncCtx `{ffi_syntax} : IntoValTyped afterFuncCtx.t context.afterFuncCtx.
Admitted.

(* type context.stopCtx *)
Module stopCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End stopCtx.

Global Instance bounded_size_stopCtx : BoundedTypeSize context.stopCtx.
Admitted.

Global Instance into_val_stopCtx `{ffi_syntax} : IntoVal stopCtx.t.
Admitted.

Global Instance into_val_typed_stopCtx `{ffi_syntax} : IntoValTyped stopCtx.t context.stopCtx.
Admitted.

(* type context.canceler *)
Module canceler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End canceler.

Global Instance bounded_size_canceler : BoundedTypeSize context.canceler.
Admitted.

Global Instance into_val_canceler `{ffi_syntax} : IntoVal canceler.t.
Admitted.

Global Instance into_val_typed_canceler `{ffi_syntax} : IntoValTyped canceler.t context.canceler.
Admitted.

(* type context.cancelCtx *)
Module cancelCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End cancelCtx.

Global Instance bounded_size_cancelCtx : BoundedTypeSize context.cancelCtx.
Admitted.

Global Instance into_val_cancelCtx `{ffi_syntax} : IntoVal cancelCtx.t.
Admitted.

Global Instance into_val_typed_cancelCtx `{ffi_syntax} : IntoValTyped cancelCtx.t context.cancelCtx.
Admitted.

(* type context.stringer *)
Module stringer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End stringer.

Global Instance bounded_size_stringer : BoundedTypeSize context.stringer.
Admitted.

Global Instance into_val_stringer `{ffi_syntax} : IntoVal stringer.t.
Admitted.

Global Instance into_val_typed_stringer `{ffi_syntax} : IntoValTyped stringer.t context.stringer.
Admitted.

(* type context.withoutCancelCtx *)
Module withoutCancelCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End withoutCancelCtx.

Global Instance bounded_size_withoutCancelCtx : BoundedTypeSize context.withoutCancelCtx.
Admitted.

Global Instance into_val_withoutCancelCtx `{ffi_syntax} : IntoVal withoutCancelCtx.t.
Admitted.

Global Instance into_val_typed_withoutCancelCtx `{ffi_syntax} : IntoValTyped withoutCancelCtx.t context.withoutCancelCtx.
Admitted.

(* type context.timerCtx *)
Module timerCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End timerCtx.

Global Instance bounded_size_timerCtx : BoundedTypeSize context.timerCtx.
Admitted.

Global Instance into_val_timerCtx `{ffi_syntax} : IntoVal timerCtx.t.
Admitted.

Global Instance into_val_typed_timerCtx `{ffi_syntax} : IntoValTyped timerCtx.t context.timerCtx.
Admitted.

(* type context.valueCtx *)
Module valueCtx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End valueCtx.

Global Instance bounded_size_valueCtx : BoundedTypeSize context.valueCtx.
Admitted.

Global Instance into_val_valueCtx `{ffi_syntax} : IntoVal valueCtx.t.
Admitted.

Global Instance into_val_typed_valueCtx `{ffi_syntax} : IntoValTyped valueCtx.t context.valueCtx.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_context : IsPkgDefinedPure context :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single context ∧
      is_pkg_defined_pure code.time.time;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_context : IsPkgDefined context :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single context ∗
       is_pkg_defined code.time.time)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End context.
