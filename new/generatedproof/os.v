(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.os.

Set Default Proof Using "Type".

Module os.

(* type os.File *)
Module File.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End File.

Global Instance bounded_size_File : BoundedTypeSize os.File.
Admitted.

Global Instance into_val_File `{ffi_syntax} : IntoVal File.t.
Admitted.

Global Instance into_val_typed_File `{ffi_syntax} : IntoValTyped File.t os.File.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_os : IsPkgDefinedPure os :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single os;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_os : IsPkgDefined os :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single os)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End os.
