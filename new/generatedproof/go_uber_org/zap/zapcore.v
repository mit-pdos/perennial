(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.go_uber_org.zap.zapcore.

Set Default Proof Using "Type".

Module zapcore.

(* type zapcore.BufferedWriteSyncer *)
Module BufferedWriteSyncer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End BufferedWriteSyncer.

Global Instance bounded_size_BufferedWriteSyncer : BoundedTypeSize zapcore.BufferedWriteSyncer.
Admitted.

Global Instance into_val_BufferedWriteSyncer `{ffi_syntax} : IntoVal BufferedWriteSyncer.t.
Admitted.

Global Instance into_val_typed_BufferedWriteSyncer `{ffi_syntax} : IntoValTyped BufferedWriteSyncer.t zapcore.BufferedWriteSyncer.
Admitted.

(* type zapcore.Clock *)
Module Clock.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Clock.

Global Instance bounded_size_Clock : BoundedTypeSize zapcore.Clock.
Admitted.

Global Instance into_val_Clock `{ffi_syntax} : IntoVal Clock.t.
Admitted.

Global Instance into_val_typed_Clock `{ffi_syntax} : IntoValTyped Clock.t zapcore.Clock.
Admitted.

(* type zapcore.systemClock *)
Module systemClock.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End systemClock.

Global Instance bounded_size_systemClock : BoundedTypeSize zapcore.systemClock.
Admitted.

Global Instance into_val_systemClock `{ffi_syntax} : IntoVal systemClock.t.
Admitted.

Global Instance into_val_typed_systemClock `{ffi_syntax} : IntoValTyped systemClock.t zapcore.systemClock.
Admitted.

(* type zapcore.consoleEncoder *)
Module consoleEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End consoleEncoder.

Global Instance bounded_size_consoleEncoder : BoundedTypeSize zapcore.consoleEncoder.
Admitted.

Global Instance into_val_consoleEncoder `{ffi_syntax} : IntoVal consoleEncoder.t.
Admitted.

Global Instance into_val_typed_consoleEncoder `{ffi_syntax} : IntoValTyped consoleEncoder.t zapcore.consoleEncoder.
Admitted.

(* type zapcore.Core *)
Module Core.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Core.

Global Instance bounded_size_Core : BoundedTypeSize zapcore.Core.
Admitted.

Global Instance into_val_Core `{ffi_syntax} : IntoVal Core.t.
Admitted.

Global Instance into_val_typed_Core `{ffi_syntax} : IntoValTyped Core.t zapcore.Core.
Admitted.

(* type zapcore.nopCore *)
Module nopCore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End nopCore.

Global Instance bounded_size_nopCore : BoundedTypeSize zapcore.nopCore.
Admitted.

Global Instance into_val_nopCore `{ffi_syntax} : IntoVal nopCore.t.
Admitted.

Global Instance into_val_typed_nopCore `{ffi_syntax} : IntoValTyped nopCore.t zapcore.nopCore.
Admitted.

(* type zapcore.ioCore *)
Module ioCore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ioCore.

Global Instance bounded_size_ioCore : BoundedTypeSize zapcore.ioCore.
Admitted.

Global Instance into_val_ioCore `{ffi_syntax} : IntoVal ioCore.t.
Admitted.

Global Instance into_val_typed_ioCore `{ffi_syntax} : IntoValTyped ioCore.t zapcore.ioCore.
Admitted.

(* type zapcore.LevelEncoder *)
Module LevelEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End LevelEncoder.

Global Instance bounded_size_LevelEncoder : BoundedTypeSize zapcore.LevelEncoder.
Admitted.

Global Instance into_val_LevelEncoder `{ffi_syntax} : IntoVal LevelEncoder.t.
Admitted.

Global Instance into_val_typed_LevelEncoder `{ffi_syntax} : IntoValTyped LevelEncoder.t zapcore.LevelEncoder.
Admitted.

(* type zapcore.TimeEncoder *)
Module TimeEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End TimeEncoder.

Global Instance bounded_size_TimeEncoder : BoundedTypeSize zapcore.TimeEncoder.
Admitted.

Global Instance into_val_TimeEncoder `{ffi_syntax} : IntoVal TimeEncoder.t.
Admitted.

Global Instance into_val_typed_TimeEncoder `{ffi_syntax} : IntoValTyped TimeEncoder.t zapcore.TimeEncoder.
Admitted.

(* type zapcore.DurationEncoder *)
Module DurationEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End DurationEncoder.

Global Instance bounded_size_DurationEncoder : BoundedTypeSize zapcore.DurationEncoder.
Admitted.

Global Instance into_val_DurationEncoder `{ffi_syntax} : IntoVal DurationEncoder.t.
Admitted.

Global Instance into_val_typed_DurationEncoder `{ffi_syntax} : IntoValTyped DurationEncoder.t zapcore.DurationEncoder.
Admitted.

(* type zapcore.CallerEncoder *)
Module CallerEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CallerEncoder.

Global Instance bounded_size_CallerEncoder : BoundedTypeSize zapcore.CallerEncoder.
Admitted.

Global Instance into_val_CallerEncoder `{ffi_syntax} : IntoVal CallerEncoder.t.
Admitted.

Global Instance into_val_typed_CallerEncoder `{ffi_syntax} : IntoValTyped CallerEncoder.t zapcore.CallerEncoder.
Admitted.

(* type zapcore.NameEncoder *)
Module NameEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End NameEncoder.

Global Instance bounded_size_NameEncoder : BoundedTypeSize zapcore.NameEncoder.
Admitted.

Global Instance into_val_NameEncoder `{ffi_syntax} : IntoVal NameEncoder.t.
Admitted.

Global Instance into_val_typed_NameEncoder `{ffi_syntax} : IntoValTyped NameEncoder.t zapcore.NameEncoder.
Admitted.

(* type zapcore.EncoderConfig *)
Module EncoderConfig.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End EncoderConfig.

Global Instance bounded_size_EncoderConfig : BoundedTypeSize zapcore.EncoderConfig.
Admitted.

Global Instance into_val_EncoderConfig `{ffi_syntax} : IntoVal EncoderConfig.t.
Admitted.

Global Instance into_val_typed_EncoderConfig `{ffi_syntax} : IntoValTyped EncoderConfig.t zapcore.EncoderConfig.
Admitted.

(* type zapcore.ObjectEncoder *)
Module ObjectEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ObjectEncoder.

Global Instance bounded_size_ObjectEncoder : BoundedTypeSize zapcore.ObjectEncoder.
Admitted.

Global Instance into_val_ObjectEncoder `{ffi_syntax} : IntoVal ObjectEncoder.t.
Admitted.

Global Instance into_val_typed_ObjectEncoder `{ffi_syntax} : IntoValTyped ObjectEncoder.t zapcore.ObjectEncoder.
Admitted.

(* type zapcore.ArrayEncoder *)
Module ArrayEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ArrayEncoder.

Global Instance bounded_size_ArrayEncoder : BoundedTypeSize zapcore.ArrayEncoder.
Admitted.

Global Instance into_val_ArrayEncoder `{ffi_syntax} : IntoVal ArrayEncoder.t.
Admitted.

Global Instance into_val_typed_ArrayEncoder `{ffi_syntax} : IntoValTyped ArrayEncoder.t zapcore.ArrayEncoder.
Admitted.

(* type zapcore.PrimitiveArrayEncoder *)
Module PrimitiveArrayEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End PrimitiveArrayEncoder.

Global Instance bounded_size_PrimitiveArrayEncoder : BoundedTypeSize zapcore.PrimitiveArrayEncoder.
Admitted.

Global Instance into_val_PrimitiveArrayEncoder `{ffi_syntax} : IntoVal PrimitiveArrayEncoder.t.
Admitted.

Global Instance into_val_typed_PrimitiveArrayEncoder `{ffi_syntax} : IntoValTyped PrimitiveArrayEncoder.t zapcore.PrimitiveArrayEncoder.
Admitted.

(* type zapcore.Encoder *)
Module Encoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Encoder.

Global Instance bounded_size_Encoder : BoundedTypeSize zapcore.Encoder.
Admitted.

Global Instance into_val_Encoder `{ffi_syntax} : IntoVal Encoder.t.
Admitted.

Global Instance into_val_typed_Encoder `{ffi_syntax} : IntoValTyped Encoder.t zapcore.Encoder.
Admitted.

(* type zapcore.EntryCaller *)
Module EntryCaller.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End EntryCaller.

Global Instance bounded_size_EntryCaller : BoundedTypeSize zapcore.EntryCaller.
Admitted.

Global Instance into_val_EntryCaller `{ffi_syntax} : IntoVal EntryCaller.t.
Admitted.

Global Instance into_val_typed_EntryCaller `{ffi_syntax} : IntoValTyped EntryCaller.t zapcore.EntryCaller.
Admitted.

(* type zapcore.Entry *)
Module Entry.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Entry.

Global Instance bounded_size_Entry : BoundedTypeSize zapcore.Entry.
Admitted.

Global Instance into_val_Entry `{ffi_syntax} : IntoVal Entry.t.
Admitted.

Global Instance into_val_typed_Entry `{ffi_syntax} : IntoValTyped Entry.t zapcore.Entry.
Admitted.

(* type zapcore.CheckWriteHook *)
Module CheckWriteHook.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CheckWriteHook.

Global Instance bounded_size_CheckWriteHook : BoundedTypeSize zapcore.CheckWriteHook.
Admitted.

Global Instance into_val_CheckWriteHook `{ffi_syntax} : IntoVal CheckWriteHook.t.
Admitted.

Global Instance into_val_typed_CheckWriteHook `{ffi_syntax} : IntoValTyped CheckWriteHook.t zapcore.CheckWriteHook.
Admitted.

(* type zapcore.CheckWriteAction *)
Module CheckWriteAction.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CheckWriteAction.

Global Instance bounded_size_CheckWriteAction : BoundedTypeSize zapcore.CheckWriteAction.
Admitted.

Global Instance into_val_CheckWriteAction `{ffi_syntax} : IntoVal CheckWriteAction.t.
Admitted.

Global Instance into_val_typed_CheckWriteAction `{ffi_syntax} : IntoValTyped CheckWriteAction.t zapcore.CheckWriteAction.
Admitted.

(* type zapcore.CheckedEntry *)
Module CheckedEntry.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CheckedEntry.

Global Instance bounded_size_CheckedEntry : BoundedTypeSize zapcore.CheckedEntry.
Admitted.

Global Instance into_val_CheckedEntry `{ffi_syntax} : IntoVal CheckedEntry.t.
Admitted.

Global Instance into_val_typed_CheckedEntry `{ffi_syntax} : IntoValTyped CheckedEntry.t zapcore.CheckedEntry.
Admitted.

(* type zapcore.errorGroup *)
Module errorGroup.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End errorGroup.

Global Instance bounded_size_errorGroup : BoundedTypeSize zapcore.errorGroup.
Admitted.

Global Instance into_val_errorGroup `{ffi_syntax} : IntoVal errorGroup.t.
Admitted.

Global Instance into_val_typed_errorGroup `{ffi_syntax} : IntoValTyped errorGroup.t zapcore.errorGroup.
Admitted.

(* type zapcore.errArray *)
Module errArray.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End errArray.

Global Instance bounded_size_errArray : BoundedTypeSize zapcore.errArray.
Admitted.

Global Instance into_val_errArray `{ffi_syntax} : IntoVal errArray.t.
Admitted.

Global Instance into_val_typed_errArray `{ffi_syntax} : IntoValTyped errArray.t zapcore.errArray.
Admitted.

(* type zapcore.errArrayElem *)
Module errArrayElem.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End errArrayElem.

Global Instance bounded_size_errArrayElem : BoundedTypeSize zapcore.errArrayElem.
Admitted.

Global Instance into_val_errArrayElem `{ffi_syntax} : IntoVal errArrayElem.t.
Admitted.

Global Instance into_val_typed_errArrayElem `{ffi_syntax} : IntoValTyped errArrayElem.t zapcore.errArrayElem.
Admitted.

(* type zapcore.FieldType *)
Module FieldType.

#[global] Transparent zapcore.FieldType.
#[global] Typeclasses Transparent zapcore.FieldType.
Section def.
Context `{ffi_syntax}.
Definition t := w8.
End def.
End FieldType.

(* type zapcore.Field *)
Module Field.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Key' : go_string;
  Type' : FieldType.t;
  Integer' : w64;
  String' : go_string;
  Interface' : interface.t;
}.
End def.
End Field.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Field : Settable Field.t :=
  settable! Field.mk < Field.Key'; Field.Type'; Field.Integer'; Field.String'; Field.Interface' >.
#[local] Transparent zapcore.Field.
#[local] Typeclasses Transparent zapcore.Field.
Global Instance into_val_Field : IntoVal Field.t :=
  {| to_val_def v :=
    struct.val_aux zapcore.Field [
    "Key" ::= #(Field.Key' v);
    "Type" ::= #(Field.Type' v);
    "Integer" ::= #(Field.Integer' v);
    "String" ::= #(Field.String' v);
    "Interface" ::= #(Field.Interface' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Field : IntoValTyped Field.t zapcore.Field :=
{|
  default_val := Field.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Field_Key : IntoValStructField "Key" zapcore.Field Field.Key'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Field_Type : IntoValStructField "Type" zapcore.Field Field.Type'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Field_Integer : IntoValStructField "Integer" zapcore.Field Field.Integer'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Field_String : IntoValStructField "String" zapcore.Field Field.String'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Field_Interface : IntoValStructField "Interface" zapcore.Field Field.Interface'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Field Key' Type' Integer' String' Interface':
  PureWp True
    (struct.make #zapcore.Field (alist_val [
      "Key" ::= #Key';
      "Type" ::= #Type';
      "Integer" ::= #Integer';
      "String" ::= #String';
      "Interface" ::= #Interface'
    ]))%struct
    #(Field.mk Key' Type' Integer' String' Interface').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Field_struct_fields_split dq l (v : Field.t) :
  StructFieldsSplit dq l v (
    "HKey" ∷ l ↦s[zapcore.Field :: "Key"]{dq} v.(Field.Key') ∗
    "HType" ∷ l ↦s[zapcore.Field :: "Type"]{dq} v.(Field.Type') ∗
    "HInteger" ∷ l ↦s[zapcore.Field :: "Integer"]{dq} v.(Field.Integer') ∗
    "HString" ∷ l ↦s[zapcore.Field :: "String"]{dq} v.(Field.String') ∗
    "HInterface" ∷ l ↦s[zapcore.Field :: "Interface"]{dq} v.(Field.Interface')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Field.Key' v)) (zapcore.Field) "Key"%go.
  simpl_one_flatten_struct (# (Field.Type' v)) (zapcore.Field) "Type"%go.
  simpl_one_flatten_struct (# (Field.Integer' v)) (zapcore.Field) "Integer"%go.
  simpl_one_flatten_struct (# (Field.String' v)) (zapcore.Field) "String"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type zapcore.hooked *)
Module hooked.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End hooked.

Global Instance bounded_size_hooked : BoundedTypeSize zapcore.hooked.
Admitted.

Global Instance into_val_hooked `{ffi_syntax} : IntoVal hooked.t.
Admitted.

Global Instance into_val_typed_hooked `{ffi_syntax} : IntoValTyped hooked.t zapcore.hooked.
Admitted.

(* type zapcore.levelFilterCore *)
Module levelFilterCore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End levelFilterCore.

Global Instance bounded_size_levelFilterCore : BoundedTypeSize zapcore.levelFilterCore.
Admitted.

Global Instance into_val_levelFilterCore `{ffi_syntax} : IntoVal levelFilterCore.t.
Admitted.

Global Instance into_val_typed_levelFilterCore `{ffi_syntax} : IntoValTyped levelFilterCore.t zapcore.levelFilterCore.
Admitted.

(* type zapcore.jsonEncoder *)
Module jsonEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End jsonEncoder.

Global Instance bounded_size_jsonEncoder : BoundedTypeSize zapcore.jsonEncoder.
Admitted.

Global Instance into_val_jsonEncoder `{ffi_syntax} : IntoVal jsonEncoder.t.
Admitted.

Global Instance into_val_typed_jsonEncoder `{ffi_syntax} : IntoValTyped jsonEncoder.t zapcore.jsonEncoder.
Admitted.

(* type zapcore.lazyWithCore *)
Module lazyWithCore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End lazyWithCore.

Global Instance bounded_size_lazyWithCore : BoundedTypeSize zapcore.lazyWithCore.
Admitted.

Global Instance into_val_lazyWithCore `{ffi_syntax} : IntoVal lazyWithCore.t.
Admitted.

Global Instance into_val_typed_lazyWithCore `{ffi_syntax} : IntoValTyped lazyWithCore.t zapcore.lazyWithCore.
Admitted.

(* type zapcore.Level *)
Module Level.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Level.

Global Instance bounded_size_Level : BoundedTypeSize zapcore.Level.
Admitted.

Global Instance into_val_Level `{ffi_syntax} : IntoVal Level.t.
Admitted.

Global Instance into_val_typed_Level `{ffi_syntax} : IntoValTyped Level.t zapcore.Level.
Admitted.

(* type zapcore.leveledEnabler *)
Module leveledEnabler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End leveledEnabler.

Global Instance bounded_size_leveledEnabler : BoundedTypeSize zapcore.leveledEnabler.
Admitted.

Global Instance into_val_leveledEnabler `{ffi_syntax} : IntoVal leveledEnabler.t.
Admitted.

Global Instance into_val_typed_leveledEnabler `{ffi_syntax} : IntoValTyped leveledEnabler.t zapcore.leveledEnabler.
Admitted.

(* type zapcore.LevelEnabler *)
Module LevelEnabler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End LevelEnabler.

Global Instance bounded_size_LevelEnabler : BoundedTypeSize zapcore.LevelEnabler.
Admitted.

Global Instance into_val_LevelEnabler `{ffi_syntax} : IntoVal LevelEnabler.t.
Admitted.

Global Instance into_val_typed_LevelEnabler `{ffi_syntax} : IntoValTyped LevelEnabler.t zapcore.LevelEnabler.
Admitted.

(* type zapcore.ObjectMarshaler *)
Module ObjectMarshaler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ObjectMarshaler.

Global Instance bounded_size_ObjectMarshaler : BoundedTypeSize zapcore.ObjectMarshaler.
Admitted.

Global Instance into_val_ObjectMarshaler `{ffi_syntax} : IntoVal ObjectMarshaler.t.
Admitted.

Global Instance into_val_typed_ObjectMarshaler `{ffi_syntax} : IntoValTyped ObjectMarshaler.t zapcore.ObjectMarshaler.
Admitted.

(* type zapcore.ObjectMarshalerFunc *)
Module ObjectMarshalerFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ObjectMarshalerFunc.

Global Instance bounded_size_ObjectMarshalerFunc : BoundedTypeSize zapcore.ObjectMarshalerFunc.
Admitted.

Global Instance into_val_ObjectMarshalerFunc `{ffi_syntax} : IntoVal ObjectMarshalerFunc.t.
Admitted.

Global Instance into_val_typed_ObjectMarshalerFunc `{ffi_syntax} : IntoValTyped ObjectMarshalerFunc.t zapcore.ObjectMarshalerFunc.
Admitted.

(* type zapcore.ArrayMarshaler *)
Module ArrayMarshaler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ArrayMarshaler.

Global Instance bounded_size_ArrayMarshaler : BoundedTypeSize zapcore.ArrayMarshaler.
Admitted.

Global Instance into_val_ArrayMarshaler `{ffi_syntax} : IntoVal ArrayMarshaler.t.
Admitted.

Global Instance into_val_typed_ArrayMarshaler `{ffi_syntax} : IntoValTyped ArrayMarshaler.t zapcore.ArrayMarshaler.
Admitted.

(* type zapcore.ArrayMarshalerFunc *)
Module ArrayMarshalerFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ArrayMarshalerFunc.

Global Instance bounded_size_ArrayMarshalerFunc : BoundedTypeSize zapcore.ArrayMarshalerFunc.
Admitted.

Global Instance into_val_ArrayMarshalerFunc `{ffi_syntax} : IntoVal ArrayMarshalerFunc.t.
Admitted.

Global Instance into_val_typed_ArrayMarshalerFunc `{ffi_syntax} : IntoValTyped ArrayMarshalerFunc.t zapcore.ArrayMarshalerFunc.
Admitted.

(* type zapcore.MapObjectEncoder *)
Module MapObjectEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End MapObjectEncoder.

Global Instance bounded_size_MapObjectEncoder : BoundedTypeSize zapcore.MapObjectEncoder.
Admitted.

Global Instance into_val_MapObjectEncoder `{ffi_syntax} : IntoVal MapObjectEncoder.t.
Admitted.

Global Instance into_val_typed_MapObjectEncoder `{ffi_syntax} : IntoValTyped MapObjectEncoder.t zapcore.MapObjectEncoder.
Admitted.

(* type zapcore.sliceArrayEncoder *)
Module sliceArrayEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End sliceArrayEncoder.

Global Instance bounded_size_sliceArrayEncoder : BoundedTypeSize zapcore.sliceArrayEncoder.
Admitted.

Global Instance into_val_sliceArrayEncoder `{ffi_syntax} : IntoVal sliceArrayEncoder.t.
Admitted.

Global Instance into_val_typed_sliceArrayEncoder `{ffi_syntax} : IntoValTyped sliceArrayEncoder.t zapcore.sliceArrayEncoder.
Admitted.

(* type zapcore.ReflectedEncoder *)
Module ReflectedEncoder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ReflectedEncoder.

Global Instance bounded_size_ReflectedEncoder : BoundedTypeSize zapcore.ReflectedEncoder.
Admitted.

Global Instance into_val_ReflectedEncoder `{ffi_syntax} : IntoVal ReflectedEncoder.t.
Admitted.

Global Instance into_val_typed_ReflectedEncoder `{ffi_syntax} : IntoValTyped ReflectedEncoder.t zapcore.ReflectedEncoder.
Admitted.

(* type zapcore.counter *)
Module counter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End counter.

Global Instance bounded_size_counter : BoundedTypeSize zapcore.counter.
Admitted.

Global Instance into_val_counter `{ffi_syntax} : IntoVal counter.t.
Admitted.

Global Instance into_val_typed_counter `{ffi_syntax} : IntoValTyped counter.t zapcore.counter.
Admitted.

(* type zapcore.counters *)
Module counters.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End counters.

Global Instance bounded_size_counters : BoundedTypeSize zapcore.counters.
Admitted.

Global Instance into_val_counters `{ffi_syntax} : IntoVal counters.t.
Admitted.

Global Instance into_val_typed_counters `{ffi_syntax} : IntoValTyped counters.t zapcore.counters.
Admitted.

(* type zapcore.SamplingDecision *)
Module SamplingDecision.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End SamplingDecision.

Global Instance bounded_size_SamplingDecision : BoundedTypeSize zapcore.SamplingDecision.
Admitted.

Global Instance into_val_SamplingDecision `{ffi_syntax} : IntoVal SamplingDecision.t.
Admitted.

Global Instance into_val_typed_SamplingDecision `{ffi_syntax} : IntoValTyped SamplingDecision.t zapcore.SamplingDecision.
Admitted.

(* type zapcore.optionFunc *)
Module optionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End optionFunc.

Global Instance bounded_size_optionFunc : BoundedTypeSize zapcore.optionFunc.
Admitted.

Global Instance into_val_optionFunc `{ffi_syntax} : IntoVal optionFunc.t.
Admitted.

Global Instance into_val_typed_optionFunc `{ffi_syntax} : IntoValTyped optionFunc.t zapcore.optionFunc.
Admitted.

(* type zapcore.SamplerOption *)
Module SamplerOption.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End SamplerOption.

Global Instance bounded_size_SamplerOption : BoundedTypeSize zapcore.SamplerOption.
Admitted.

Global Instance into_val_SamplerOption `{ffi_syntax} : IntoVal SamplerOption.t.
Admitted.

Global Instance into_val_typed_SamplerOption `{ffi_syntax} : IntoValTyped SamplerOption.t zapcore.SamplerOption.
Admitted.

(* type zapcore.sampler *)
Module sampler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End sampler.

Global Instance bounded_size_sampler : BoundedTypeSize zapcore.sampler.
Admitted.

Global Instance into_val_sampler `{ffi_syntax} : IntoVal sampler.t.
Admitted.

Global Instance into_val_typed_sampler `{ffi_syntax} : IntoValTyped sampler.t zapcore.sampler.
Admitted.

(* type zapcore.multiCore *)
Module multiCore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End multiCore.

Global Instance bounded_size_multiCore : BoundedTypeSize zapcore.multiCore.
Admitted.

Global Instance into_val_multiCore `{ffi_syntax} : IntoVal multiCore.t.
Admitted.

Global Instance into_val_typed_multiCore `{ffi_syntax} : IntoValTyped multiCore.t zapcore.multiCore.
Admitted.

(* type zapcore.WriteSyncer *)
Module WriteSyncer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End WriteSyncer.

Global Instance bounded_size_WriteSyncer : BoundedTypeSize zapcore.WriteSyncer.
Admitted.

Global Instance into_val_WriteSyncer `{ffi_syntax} : IntoVal WriteSyncer.t.
Admitted.

Global Instance into_val_typed_WriteSyncer `{ffi_syntax} : IntoValTyped WriteSyncer.t zapcore.WriteSyncer.
Admitted.

(* type zapcore.lockedWriteSyncer *)
Module lockedWriteSyncer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End lockedWriteSyncer.

Global Instance bounded_size_lockedWriteSyncer : BoundedTypeSize zapcore.lockedWriteSyncer.
Admitted.

Global Instance into_val_lockedWriteSyncer `{ffi_syntax} : IntoVal lockedWriteSyncer.t.
Admitted.

Global Instance into_val_typed_lockedWriteSyncer `{ffi_syntax} : IntoValTyped lockedWriteSyncer.t zapcore.lockedWriteSyncer.
Admitted.

(* type zapcore.writerWrapper *)
Module writerWrapper.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End writerWrapper.

Global Instance bounded_size_writerWrapper : BoundedTypeSize zapcore.writerWrapper.
Admitted.

Global Instance into_val_writerWrapper `{ffi_syntax} : IntoVal writerWrapper.t.
Admitted.

Global Instance into_val_typed_writerWrapper `{ffi_syntax} : IntoValTyped writerWrapper.t zapcore.writerWrapper.
Admitted.

(* type zapcore.multiWriteSyncer *)
Module multiWriteSyncer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End multiWriteSyncer.

Global Instance bounded_size_multiWriteSyncer : BoundedTypeSize zapcore.multiWriteSyncer.
Admitted.

Global Instance into_val_multiWriteSyncer `{ffi_syntax} : IntoVal multiWriteSyncer.t.
Admitted.

Global Instance into_val_typed_multiWriteSyncer `{ffi_syntax} : IntoValTyped multiWriteSyncer.t zapcore.multiWriteSyncer.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_zapcore : IsPkgDefinedPure zapcore :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single zapcore;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_zapcore : IsPkgDefined zapcore :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single zapcore)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End zapcore.
