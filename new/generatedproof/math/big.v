(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.math.big.

Set Default Proof Using "Type".

Module big.

(* type big.Int *)
Module Int.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Int.

Global Instance bounded_size_Int : BoundedTypeSize big.Int.
Admitted.

Global Instance into_val_Int `{ffi_syntax} : IntoVal Int.t.
Admitted.

Global Instance into_val_typed_Int `{ffi_syntax} : IntoValTyped Int.t big.Int.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_big : IsPkgDefinedPure big :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single big;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_big : IsPkgDefined big :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single big)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End big.
