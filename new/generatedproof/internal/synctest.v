(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.manualproof.internal.synctest.
Require Export New.golang.theory.

Require Export New.code.internal.synctest.

Set Default Proof Using "Type".

Module synctest.

(* type synctest.Association *)
Module Association.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Association.

Global Instance bounded_size_Association : BoundedTypeSize synctest.Association.
Admitted.

Global Instance into_val_Association `{ffi_syntax} : IntoVal Association.t.
Admitted.

Global Instance into_val_typed_Association `{ffi_syntax} : IntoValTyped Association.t synctest.Association.
Admitted.

(* type synctest.Bubble *)
Module Bubble.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Bubble.

Global Instance bounded_size_Bubble : BoundedTypeSize synctest.Bubble.
Admitted.

Global Instance into_val_Bubble `{ffi_syntax} : IntoVal Bubble.t.
Admitted.

Global Instance into_val_typed_Bubble `{ffi_syntax} : IntoValTyped Bubble.t synctest.Bubble.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_synctest : IsPkgDefinedPure synctest :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single synctest;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_synctest : IsPkgDefined synctest :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single synctest)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_Run :
  WpFuncCall synctest.Run _ (is_pkg_defined synctest) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_IsInBubble :
  WpFuncCall synctest.IsInBubble _ (is_pkg_defined synctest) :=
  ltac:(solve_wp_func_call).

End names.
End synctest.
