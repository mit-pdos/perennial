(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.github_com.sanjit_bhat.pav.cryptoffi.

Set Default Proof Using "Type".

Module cryptoffi.

(* type cryptoffi.Hasher *)
Module Hasher.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Hasher.

Global Instance bounded_size_Hasher : BoundedTypeSize cryptoffi.Hasher.
Admitted.

Global Instance into_val_Hasher `{ffi_syntax} : IntoVal Hasher.t.
Admitted.

Global Instance into_val_typed_Hasher `{ffi_syntax} : IntoValTyped Hasher.t cryptoffi.Hasher.
Admitted.

(* type cryptoffi.SigPrivateKey *)
Module SigPrivateKey.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End SigPrivateKey.

Global Instance bounded_size_SigPrivateKey : BoundedTypeSize cryptoffi.SigPrivateKey.
Admitted.

Global Instance into_val_SigPrivateKey `{ffi_syntax} : IntoVal SigPrivateKey.t.
Admitted.

Global Instance into_val_typed_SigPrivateKey `{ffi_syntax} : IntoValTyped SigPrivateKey.t cryptoffi.SigPrivateKey.
Admitted.

(* type cryptoffi.SigPublicKey *)
Module SigPublicKey.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End SigPublicKey.

Global Instance bounded_size_SigPublicKey : BoundedTypeSize cryptoffi.SigPublicKey.
Admitted.

Global Instance into_val_SigPublicKey `{ffi_syntax} : IntoVal SigPublicKey.t.
Admitted.

Global Instance into_val_typed_SigPublicKey `{ffi_syntax} : IntoValTyped SigPublicKey.t cryptoffi.SigPublicKey.
Admitted.

(* type cryptoffi.VrfPrivateKey *)
Module VrfPrivateKey.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End VrfPrivateKey.

Global Instance bounded_size_VrfPrivateKey : BoundedTypeSize cryptoffi.VrfPrivateKey.
Admitted.

Global Instance into_val_VrfPrivateKey `{ffi_syntax} : IntoVal VrfPrivateKey.t.
Admitted.

Global Instance into_val_typed_VrfPrivateKey `{ffi_syntax} : IntoValTyped VrfPrivateKey.t cryptoffi.VrfPrivateKey.
Admitted.

(* type cryptoffi.VrfPublicKey *)
Module VrfPublicKey.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End VrfPublicKey.

Global Instance bounded_size_VrfPublicKey : BoundedTypeSize cryptoffi.VrfPublicKey.
Admitted.

Global Instance into_val_VrfPublicKey `{ffi_syntax} : IntoVal VrfPublicKey.t.
Admitted.

Global Instance into_val_typed_VrfPublicKey `{ffi_syntax} : IntoValTyped VrfPublicKey.t cryptoffi.VrfPublicKey.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_cryptoffi : IsPkgDefined cryptoffi :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single cryptoffi;
    is_pkg_defined_def go_ctx :=
        (is_pkg_defined_single cryptoffi)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_NewHasher :
  WpFuncCall cryptoffi.NewHasher _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_SigGenerateKey :
  WpFuncCall cryptoffi.SigGenerateKey _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_VrfGenerateKey :
  WpFuncCall cryptoffi.VrfGenerateKey _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_VrfPublicKeyEncode :
  WpFuncCall cryptoffi.VrfPublicKeyEncode _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_VrfPublicKeyDecode :
  WpFuncCall cryptoffi.VrfPublicKeyDecode _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_RandBytes :
  WpFuncCall cryptoffi.RandBytes _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_func_call).

Global Instance wp_method_call_Hasher'ptr_Sum :
  WpMethodCall (ptrT.id cryptoffi.Hasher.id) "Sum" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Hasher'ptr_Write :
  WpMethodCall (ptrT.id cryptoffi.Hasher.id) "Write" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_SigPrivateKey'ptr_Sign :
  WpMethodCall (ptrT.id cryptoffi.SigPrivateKey.id) "Sign" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_SigPublicKey_Verify :
  WpMethodCall cryptoffi.SigPublicKey.id "Verify" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_SigPublicKey'ptr_Verify :
  WpMethodCall (ptrT.id cryptoffi.SigPublicKey.id) "Verify" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_VrfPrivateKey'ptr_Evaluate :
  WpMethodCall (ptrT.id cryptoffi.VrfPrivateKey.id) "Evaluate" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_VrfPrivateKey'ptr_Prove :
  WpMethodCall (ptrT.id cryptoffi.VrfPrivateKey.id) "Prove" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_VrfPrivateKey'ptr_PublicKey :
  WpMethodCall (ptrT.id cryptoffi.VrfPrivateKey.id) "PublicKey" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_VrfPublicKey'ptr_Verify :
  WpMethodCall (ptrT.id cryptoffi.VrfPublicKey.id) "Verify" _ (is_pkg_defined cryptoffi) :=
  ltac:(solve_wp_method_call).

End names.
End cryptoffi.
