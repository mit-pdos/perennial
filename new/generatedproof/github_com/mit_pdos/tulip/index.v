(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.grove_prelude.
Require Export New.generatedproof.sync.
Require Export New.generatedproof.github_com.mit_pdos.tulip.tuple.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.tulip.index.

Set Default Proof Using "Type".

Module index.

(* type index.Index *)
Module Index.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  mu' : loc;
  tplm' : loc;
}.
End def.
End Index.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Index : Settable Index.t :=
  settable! Index.mk < Index.mu'; Index.tplm' >.
Global Instance into_val_Index : IntoVal Index.t :=
  {| to_val_def v :=
    struct.val_aux index.Index [
    "mu" ::= #(Index.mu' v);
    "tplm" ::= #(Index.tplm' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Index : IntoValTyped Index.t index.Index :=
{|
  default_val := Index.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Index_mu : IntoValStructField "mu" index.Index Index.mu'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Index_tplm : IntoValStructField "tplm" index.Index Index.tplm'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Index mu' tplm':
  PureWp True
    (struct.make #index.Index (alist_val [
      "mu" ::= #mu';
      "tplm" ::= #tplm'
    ]))%struct
    #(Index.mk mu' tplm').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Index_struct_fields_split dq l (v : Index.t) :
  StructFieldsSplit dq l v (
    "Hmu" ∷ l ↦s[index.Index :: "mu"]{dq} v.(Index.mu') ∗
    "Htplm" ∷ l ↦s[index.Index :: "tplm"]{dq} v.(Index.tplm')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Index.mu' v)) index.Index "mu"%go.

  solve_field_ref_f.
Qed.

End instances.

Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined index :=
{|
  is_pkg_defined := is_global_definitions index var_addrs;
|}.

Definition own_allocated : iProp Σ :=
True.

Global Instance wp_func_call_MkIndex :
  WpFuncCall index "MkIndex" _ (is_pkg_defined index) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_method_call_Index'ptr_GetTuple :
  WpMethodCall index "Index'ptr" "GetTuple" _ (is_pkg_defined index) :=
  ltac:(apply wp_method_call'; reflexivity).

End names.
End index.
