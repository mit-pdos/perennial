(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.grove_prelude.
Require Export New.generatedproof.github_com.goose_lang.std.
Require Export New.generatedproof.github_com.tchajed.marshal.
Require Export New.generatedproof.github_com.mit_pdos.tulip.tulip.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.tulip.util.
Module util.
Axiom falso : False.
Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{!heapGS Σ}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined util :=
{|
  is_pkg_defined := is_global_definitions util var_addrs;
|}.

Definition own_allocated : iProp Σ :=
True.

Global Instance wp_func_call_NextAligned :
  WpFuncCall util "NextAligned" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_swap :
  WpFuncCall util "swap" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Sort :
  WpFuncCall util "Sort" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_CountBoolMap :
  WpFuncCall util "CountBoolMap" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeInts :
  WpFuncCall util "EncodeInts" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeInts :
  WpFuncCall util "DecodeInts" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeString :
  WpFuncCall util "EncodeString" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeStrings :
  WpFuncCall util "EncodeStrings" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeString :
  WpFuncCall util "DecodeString" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeStrings :
  WpFuncCall util "DecodeStrings" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodePrepareProposal :
  WpFuncCall util "EncodePrepareProposal" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodePrepareProposal :
  WpFuncCall util "DecodePrepareProposal" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeValue :
  WpFuncCall util "EncodeValue" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeValue :
  WpFuncCall util "DecodeValue" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeVersion :
  WpFuncCall util "EncodeVersion" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeVersion :
  WpFuncCall util "DecodeVersion" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeWriteEntry :
  WpFuncCall util "EncodeWriteEntry" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeWriteEntry :
  WpFuncCall util "DecodeWriteEntry" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeKVMap :
  WpFuncCall util "EncodeKVMap" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_EncodeKVMapFromSlice :
  WpFuncCall util "EncodeKVMapFromSlice" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeKVMapIntoSlice :
  WpFuncCall util "DecodeKVMapIntoSlice" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_DecodeKVMap :
  WpFuncCall util "DecodeKVMap" _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

End names.
End util.
