(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.gokv.kv.

Set Default Proof Using "Type".

Module kv.

(* type kv.Kv *)
Module Kv.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End Kv.

(* type kv.KvCput *)
Module KvCput.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End KvCput.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_kv : IsPkgDefined kv :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single kv;
    is_pkg_defined_def go_ctx :=
        (is_pkg_defined_single kv)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End kv.
