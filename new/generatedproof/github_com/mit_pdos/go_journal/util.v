(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.log.
Require Export New.golang.theory.

Require Export New.code.github_com.mit_pdos.go_journal.util.

Set Default Proof Using "Type".

Module util.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context `{!GoContext}.

Global Instance wp_func_call_DPrintf :
  WpFuncCall util.DPrintf _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_RoundUp :
  WpFuncCall util.RoundUp _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_Min :
  WpFuncCall util.Min _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_SumOverflows :
  WpFuncCall util.SumOverflows _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_SumOverflows32 :
  WpFuncCall util.SumOverflows32 _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_CloneByteSlice :
  WpFuncCall util.CloneByteSlice _ (is_pkg_defined util) :=
  ltac:(apply wp_func_call'; reflexivity).

End names.
End util.
