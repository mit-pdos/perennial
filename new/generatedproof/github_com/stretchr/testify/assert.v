(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.github_com.stretchr.testify.assert.

Set Default Proof Using "Type".

Module assert.

(* type assert.CompareType *)
Module CompareType.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CompareType.

Global Instance bounded_size_CompareType : BoundedTypeSize assert.CompareType.
Admitted.

Global Instance into_val_CompareType `{ffi_syntax} : IntoVal CompareType.t.
Admitted.

Global Instance into_val_typed_CompareType `{ffi_syntax} : IntoValTyped CompareType.t assert.CompareType.
Admitted.

(* type assert.compareResult *)
Module compareResult.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End compareResult.

Global Instance bounded_size_compareResult : BoundedTypeSize assert.compareResult.
Admitted.

Global Instance into_val_compareResult `{ffi_syntax} : IntoVal compareResult.t.
Admitted.

Global Instance into_val_typed_compareResult `{ffi_syntax} : IntoValTyped compareResult.t assert.compareResult.
Admitted.

(* type assert.TestingT *)
Module TestingT.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End TestingT.

Global Instance bounded_size_TestingT : BoundedTypeSize assert.TestingT.
Admitted.

Global Instance into_val_TestingT `{ffi_syntax} : IntoVal TestingT.t.
Admitted.

Global Instance into_val_typed_TestingT `{ffi_syntax} : IntoValTyped TestingT.t assert.TestingT.
Admitted.

(* type assert.ComparisonAssertionFunc *)
Module ComparisonAssertionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ComparisonAssertionFunc.

Global Instance bounded_size_ComparisonAssertionFunc : BoundedTypeSize assert.ComparisonAssertionFunc.
Admitted.

Global Instance into_val_ComparisonAssertionFunc `{ffi_syntax} : IntoVal ComparisonAssertionFunc.t.
Admitted.

Global Instance into_val_typed_ComparisonAssertionFunc `{ffi_syntax} : IntoValTyped ComparisonAssertionFunc.t assert.ComparisonAssertionFunc.
Admitted.

(* type assert.ValueAssertionFunc *)
Module ValueAssertionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ValueAssertionFunc.

Global Instance bounded_size_ValueAssertionFunc : BoundedTypeSize assert.ValueAssertionFunc.
Admitted.

Global Instance into_val_ValueAssertionFunc `{ffi_syntax} : IntoVal ValueAssertionFunc.t.
Admitted.

Global Instance into_val_typed_ValueAssertionFunc `{ffi_syntax} : IntoValTyped ValueAssertionFunc.t assert.ValueAssertionFunc.
Admitted.

(* type assert.BoolAssertionFunc *)
Module BoolAssertionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End BoolAssertionFunc.

Global Instance bounded_size_BoolAssertionFunc : BoundedTypeSize assert.BoolAssertionFunc.
Admitted.

Global Instance into_val_BoolAssertionFunc `{ffi_syntax} : IntoVal BoolAssertionFunc.t.
Admitted.

Global Instance into_val_typed_BoolAssertionFunc `{ffi_syntax} : IntoValTyped BoolAssertionFunc.t assert.BoolAssertionFunc.
Admitted.

(* type assert.ErrorAssertionFunc *)
Module ErrorAssertionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ErrorAssertionFunc.

Global Instance bounded_size_ErrorAssertionFunc : BoundedTypeSize assert.ErrorAssertionFunc.
Admitted.

Global Instance into_val_ErrorAssertionFunc `{ffi_syntax} : IntoVal ErrorAssertionFunc.t.
Admitted.

Global Instance into_val_typed_ErrorAssertionFunc `{ffi_syntax} : IntoValTyped ErrorAssertionFunc.t assert.ErrorAssertionFunc.
Admitted.

(* type assert.PanicAssertionFunc *)
Module PanicAssertionFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End PanicAssertionFunc.

Global Instance bounded_size_PanicAssertionFunc : BoundedTypeSize assert.PanicAssertionFunc.
Admitted.

Global Instance into_val_PanicAssertionFunc `{ffi_syntax} : IntoVal PanicAssertionFunc.t.
Admitted.

Global Instance into_val_typed_PanicAssertionFunc `{ffi_syntax} : IntoValTyped PanicAssertionFunc.t assert.PanicAssertionFunc.
Admitted.

(* type assert.Comparison *)
Module Comparison.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Comparison.

Global Instance bounded_size_Comparison : BoundedTypeSize assert.Comparison.
Admitted.

Global Instance into_val_Comparison `{ffi_syntax} : IntoVal Comparison.t.
Admitted.

Global Instance into_val_typed_Comparison `{ffi_syntax} : IntoValTyped Comparison.t assert.Comparison.
Admitted.

(* type assert.failNower *)
Module failNower.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End failNower.

Global Instance bounded_size_failNower : BoundedTypeSize assert.failNower.
Admitted.

Global Instance into_val_failNower `{ffi_syntax} : IntoVal failNower.t.
Admitted.

Global Instance into_val_typed_failNower `{ffi_syntax} : IntoValTyped failNower.t assert.failNower.
Admitted.

(* type assert.labeledContent *)
Module labeledContent.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End labeledContent.

Global Instance bounded_size_labeledContent : BoundedTypeSize assert.labeledContent.
Admitted.

Global Instance into_val_labeledContent `{ffi_syntax} : IntoVal labeledContent.t.
Admitted.

Global Instance into_val_typed_labeledContent `{ffi_syntax} : IntoValTyped labeledContent.t assert.labeledContent.
Admitted.

(* type assert.PanicTestFunc *)
Module PanicTestFunc.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End PanicTestFunc.

Global Instance bounded_size_PanicTestFunc : BoundedTypeSize assert.PanicTestFunc.
Admitted.

Global Instance into_val_PanicTestFunc `{ffi_syntax} : IntoVal PanicTestFunc.t.
Admitted.

Global Instance into_val_typed_PanicTestFunc `{ffi_syntax} : IntoValTyped PanicTestFunc.t assert.PanicTestFunc.
Admitted.

(* type assert.tHelper *)
Module tHelper.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End tHelper.

Global Instance bounded_size_tHelper : BoundedTypeSize assert.tHelper.
Admitted.

Global Instance into_val_tHelper `{ffi_syntax} : IntoVal tHelper.t.
Admitted.

Global Instance into_val_typed_tHelper `{ffi_syntax} : IntoValTyped tHelper.t assert.tHelper.
Admitted.

(* type assert.CollectT *)
Module CollectT.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CollectT.

Global Instance bounded_size_CollectT : BoundedTypeSize assert.CollectT.
Admitted.

Global Instance into_val_CollectT `{ffi_syntax} : IntoVal CollectT.t.
Admitted.

Global Instance into_val_typed_CollectT `{ffi_syntax} : IntoValTyped CollectT.t assert.CollectT.
Admitted.

(* type assert.Assertions *)
Module Assertions.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Assertions.

Global Instance bounded_size_Assertions : BoundedTypeSize assert.Assertions.
Admitted.

Global Instance into_val_Assertions `{ffi_syntax} : IntoVal Assertions.t.
Admitted.

Global Instance into_val_typed_Assertions `{ffi_syntax} : IntoValTyped Assertions.t assert.Assertions.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_assert : IsPkgDefinedPure assert :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single assert;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_assert : IsPkgDefined assert :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single assert)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End assert.
