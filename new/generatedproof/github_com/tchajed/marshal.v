(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.github_com.tchajed.marshal.
Module marshal.
Axiom falso : False.

Section names.

Class GlobalAddrs :=
{
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined marshal :=
{|
  is_pkg_defined := is_global_definitions marshal var_addrs;
|}.

Definition own_allocated `{!GlobalAddrs} : iProp Σ :=
True.

Global Instance wp_func_call_compute_new_cap :
  WpFuncCall marshal "compute_new_cap" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_reserve :
  WpFuncCall marshal "reserve" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadInt :
  WpFuncCall marshal "ReadInt" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadInt32 :
  WpFuncCall marshal "ReadInt32" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadBytes :
  WpFuncCall marshal "ReadBytes" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadBytesCopy :
  WpFuncCall marshal "ReadBytesCopy" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_ReadBool :
  WpFuncCall marshal "ReadBool" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_WriteInt :
  WpFuncCall marshal "WriteInt" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_WriteInt32 :
  WpFuncCall marshal "WriteInt32" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_WriteBytes :
  WpFuncCall marshal "WriteBytes" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_WriteBool :
  WpFuncCall marshal "WriteBool" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

Global Instance wp_func_call_WriteLenPrefixedBytes :
  WpFuncCall marshal "WriteLenPrefixedBytes" _ (is_pkg_defined marshal) :=
  ltac:(apply wp_func_call'; reflexivity).

End names.
End marshal.
