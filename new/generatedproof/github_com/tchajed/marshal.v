(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.github_com.goose_lang.primitive.
Require Export New.generatedproof.github_com.goose_lang.std.
Require Export New.golang.theory.

Require Export New.code.github_com.tchajed.marshal.

Set Default Proof Using "Type".

Module marshal.

(* type marshal.Enc *)
Module Enc.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  b' : slice.t;
  off' : loc;
}.
End def.
End Enc.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Enc : Settable Enc.t :=
  settable! Enc.mk < Enc.b'; Enc.off' >.
Global Instance into_val_Enc : IntoVal Enc.t :=
  {| to_val_def v :=
    struct.val_aux marshal.Enc [
    "b" ::= #(Enc.b' v);
    "off" ::= #(Enc.off' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Enc : IntoValTyped Enc.t marshal.Enc :=
{|
  default_val := Enc.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Enc_b : IntoValStructField "b" marshal.Enc Enc.b'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Enc_off : IntoValStructField "off" marshal.Enc Enc.off'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Enc b' off':
  PureWp True
    (struct.make #marshal.Enc (alist_val [
      "b" ::= #b';
      "off" ::= #off'
    ]))%struct
    #(Enc.mk b' off').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Enc_struct_fields_split dq l (v : Enc.t) :
  StructFieldsSplit dq l v (
    "Hb" ∷ l ↦s[marshal.Enc :: "b"]{dq} v.(Enc.b') ∗
    "Hoff" ∷ l ↦s[marshal.Enc :: "off"]{dq} v.(Enc.off')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Enc.b' v)) (marshal.Enc) "b"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type marshal.Dec *)
Module Dec.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  b' : slice.t;
  off' : loc;
}.
End def.
End Dec.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Dec : Settable Dec.t :=
  settable! Dec.mk < Dec.b'; Dec.off' >.
Global Instance into_val_Dec : IntoVal Dec.t :=
  {| to_val_def v :=
    struct.val_aux marshal.Dec [
    "b" ::= #(Dec.b' v);
    "off" ::= #(Dec.off' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Dec : IntoValTyped Dec.t marshal.Dec :=
{|
  default_val := Dec.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Dec_b : IntoValStructField "b" marshal.Dec Dec.b'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Dec_off : IntoValStructField "off" marshal.Dec Dec.off'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Dec b' off':
  PureWp True
    (struct.make #marshal.Dec (alist_val [
      "b" ::= #b';
      "off" ::= #off'
    ]))%struct
    #(Dec.mk b' off').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Dec_struct_fields_split dq l (v : Dec.t) :
  StructFieldsSplit dq l v (
    "Hb" ∷ l ↦s[marshal.Dec :: "b"]{dq} v.(Dec.b') ∗
    "Hoff" ∷ l ↦s[marshal.Dec :: "off"]{dq} v.(Dec.off')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Dec.b' v)) (marshal.Dec) "b"%go.

  solve_field_ref_f.
Qed.

End instances.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_marshal : IsPkgDefinedPure marshal :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single marshal ∧
      is_pkg_defined_pure code.github_com.goose_lang.primitive.primitive ∧
      is_pkg_defined_pure code.github_com.goose_lang.std.std;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_marshal : IsPkgDefined marshal :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single marshal ∗
       is_pkg_defined code.github_com.goose_lang.primitive.primitive ∗
       is_pkg_defined code.github_com.goose_lang.std.std)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_NewEncFromSlice :
  WpFuncCall marshal.NewEncFromSlice _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_NewEnc :
  WpFuncCall marshal.NewEnc _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_bool2byte :
  WpFuncCall marshal.bool2byte _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_NewDec :
  WpFuncCall marshal.NewDec _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_compute_new_cap :
  WpFuncCall marshal.compute_new_cap _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_reserve :
  WpFuncCall marshal.reserve _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadInt :
  WpFuncCall marshal.ReadInt _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadInt32 :
  WpFuncCall marshal.ReadInt32 _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadInts :
  WpFuncCall marshal.ReadInts _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadBytes :
  WpFuncCall marshal.ReadBytes _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadBytesCopy :
  WpFuncCall marshal.ReadBytesCopy _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadBool :
  WpFuncCall marshal.ReadBool _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadLenPrefixedBytes :
  WpFuncCall marshal.ReadLenPrefixedBytes _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteInt :
  WpFuncCall marshal.WriteInt _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteInt32 :
  WpFuncCall marshal.WriteInt32 _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteBytes :
  WpFuncCall marshal.WriteBytes _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteInts :
  WpFuncCall marshal.WriteInts _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteBool :
  WpFuncCall marshal.WriteBool _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteLenPrefixedBytes :
  WpFuncCall marshal.WriteLenPrefixedBytes _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadSlice :
  WpFuncCall marshal.ReadSlice _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ReadSliceLenPrefix :
  WpFuncCall marshal.ReadSliceLenPrefix _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteSlice :
  WpFuncCall marshal.WriteSlice _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_WriteSliceLenPrefix :
  WpFuncCall marshal.WriteSliceLenPrefix _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_func_call).

Global Instance wp_method_call_Enc_Finish :
  WpMethodCall marshal.Enc.id "Finish" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc_PutBool :
  WpMethodCall marshal.Enc.id "PutBool" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc_PutBytes :
  WpMethodCall marshal.Enc.id "PutBytes" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc_PutInt :
  WpMethodCall marshal.Enc.id "PutInt" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc_PutInt32 :
  WpMethodCall marshal.Enc.id "PutInt32" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc_PutInts :
  WpMethodCall marshal.Enc.id "PutInts" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_Finish :
  WpMethodCall (ptrT.id marshal.Enc.id) "Finish" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_PutBool :
  WpMethodCall (ptrT.id marshal.Enc.id) "PutBool" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_PutBytes :
  WpMethodCall (ptrT.id marshal.Enc.id) "PutBytes" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_PutInt :
  WpMethodCall (ptrT.id marshal.Enc.id) "PutInt" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_PutInt32 :
  WpMethodCall (ptrT.id marshal.Enc.id) "PutInt32" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Enc'ptr_PutInts :
  WpMethodCall (ptrT.id marshal.Enc.id) "PutInts" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec_GetBool :
  WpMethodCall marshal.Dec.id "GetBool" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec_GetBytes :
  WpMethodCall marshal.Dec.id "GetBytes" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec_GetInt :
  WpMethodCall marshal.Dec.id "GetInt" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec_GetInt32 :
  WpMethodCall marshal.Dec.id "GetInt32" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec_GetInts :
  WpMethodCall marshal.Dec.id "GetInts" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec'ptr_GetBool :
  WpMethodCall (ptrT.id marshal.Dec.id) "GetBool" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec'ptr_GetBytes :
  WpMethodCall (ptrT.id marshal.Dec.id) "GetBytes" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec'ptr_GetInt :
  WpMethodCall (ptrT.id marshal.Dec.id) "GetInt" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec'ptr_GetInt32 :
  WpMethodCall (ptrT.id marshal.Dec.id) "GetInt32" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Dec'ptr_GetInts :
  WpMethodCall (ptrT.id marshal.Dec.id) "GetInts" _ (is_pkg_defined marshal) :=
  ltac:(solve_wp_method_call).

End names.
End marshal.
