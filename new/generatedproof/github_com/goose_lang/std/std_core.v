(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.github_com.goose_lang.primitive.
Require Export New.golang.theory.

Require Export New.code.github_com.goose_lang.std.std_core.

Set Default Proof Using "Type".

Module std_core.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_std_core : IsPkgDefined std_core :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single std_core ∧
      is_pkg_defined_pure primitive;
    is_pkg_defined_def go_ctx :=
        (is_pkg_defined_single std_core ∗
         is_pkg_defined primitive)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_SumNoOverflow :
  WpFuncCall std_core.SumNoOverflow _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_SumAssumeNoOverflow :
  WpFuncCall std_core.SumAssumeNoOverflow _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_MulNoOverflow :
  WpFuncCall std_core.MulNoOverflow _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_MulAssumeNoOverflow :
  WpFuncCall std_core.MulAssumeNoOverflow _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Shuffle :
  WpFuncCall std_core.Shuffle _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Permutation :
  WpFuncCall std_core.Permutation _ (is_pkg_defined std_core) :=
  ltac:(solve_wp_func_call).

End names.
End std_core.
