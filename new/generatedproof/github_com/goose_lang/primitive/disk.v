(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.disk_prelude.
Require Export New.manualproof.github_com.goose_lang.primitive.disk.
Require Export New.golang.theory.

Require Export New.code.github_com.goose_lang.primitive.disk.

Set Default Proof Using "Type".

Module disk.

(* type disk.Block *)
Module Block.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Block.

Global Instance bounded_size_Block : BoundedTypeSize disk.Block.
Admitted.

Global Instance into_val_Block `{ffi_syntax} : IntoVal Block.t.
Admitted.

Global Instance into_val_typed_Block `{ffi_syntax} : IntoValTyped Block.t disk.Block.
Admitted.

(* type disk.FileDisk *)
Module FileDisk.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End FileDisk.

Global Instance bounded_size_FileDisk : BoundedTypeSize disk.FileDisk.
Admitted.

Global Instance into_val_FileDisk `{ffi_syntax} : IntoVal FileDisk.t.
Admitted.

Global Instance into_val_typed_FileDisk `{ffi_syntax} : IntoValTyped FileDisk.t disk.FileDisk.
Admitted.

(* type disk.MemDisk *)
Module MemDisk.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End MemDisk.

Global Instance bounded_size_MemDisk : BoundedTypeSize disk.MemDisk.
Admitted.

Global Instance into_val_MemDisk `{ffi_syntax} : IntoVal MemDisk.t.
Admitted.

Global Instance into_val_typed_MemDisk `{ffi_syntax} : IntoValTyped MemDisk.t disk.MemDisk.
Admitted.

Section names.

Context `{!heapGS Σ}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_disk : IsPkgDefinedPure disk :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single disk;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_disk : IsPkgDefined disk :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single disk)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_Get :
  WpFuncCall disk.Get _ (is_pkg_defined disk) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Read :
  WpFuncCall disk.Read _ (is_pkg_defined disk) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Write :
  WpFuncCall disk.Write _ (is_pkg_defined disk) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Size :
  WpFuncCall disk.Size _ (is_pkg_defined disk) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Barrier :
  WpFuncCall disk.Barrier _ (is_pkg_defined disk) :=
  ltac:(solve_wp_func_call).

End names.
End disk.
