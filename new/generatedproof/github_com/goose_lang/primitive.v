(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.manualproof.github_com.goose_lang.primitive.
Require Export New.golang.theory.

Require Export New.code.github_com.goose_lang.primitive.

Set Default Proof Using "Type".

Module primitive.

(* type primitive.prophId *)
Module prophId.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End prophId.

Global Instance bounded_size_prophId : BoundedTypeSize primitive.prophId.
Admitted.

Global Instance into_val_prophId `{ffi_syntax} : IntoVal prophId.t.
Admitted.

Global Instance into_val_typed_prophId `{ffi_syntax} : IntoValTyped prophId.t primitive.prophId.
Admitted.

(* type primitive.ProphId *)
Module ProphId.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ProphId.

Global Instance bounded_size_ProphId : BoundedTypeSize primitive.ProphId.
Admitted.

Global Instance into_val_ProphId `{ffi_syntax} : IntoVal ProphId.t.
Admitted.

Global Instance into_val_typed_ProphId `{ffi_syntax} : IntoValTyped ProphId.t primitive.ProphId.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_primitive : IsPkgDefinedPure primitive :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single primitive;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_primitive : IsPkgDefined primitive :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single primitive)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_UInt64Put :
  WpFuncCall primitive.UInt64Put _ (is_pkg_defined primitive) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_RandomUint64 :
  WpFuncCall primitive.RandomUint64 _ (is_pkg_defined primitive) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Assume :
  WpFuncCall primitive.Assume _ (is_pkg_defined primitive) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_AssumeNoStringOverflow :
  WpFuncCall primitive.AssumeNoStringOverflow _ (is_pkg_defined primitive) :=
  ltac:(solve_wp_func_call).

End names.
End primitive.
