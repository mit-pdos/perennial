(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.strings.

Set Default Proof Using "Type".

Module strings.

(* type strings.Builder *)
Module Builder.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  addr' : loc;
  buf' : slice.t;
}.
End def.
End Builder.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Builder : Settable Builder.t :=
  settable! Builder.mk < Builder.addr'; Builder.buf' >.
Global Instance into_val_Builder : IntoVal Builder.t :=
  {| to_val_def v :=
    struct.val_aux strings.Builder [
    "addr" ::= #(Builder.addr' v);
    "buf" ::= #(Builder.buf' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Builder : IntoValTyped Builder.t strings.Builder :=
{|
  default_val := Builder.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Builder_addr : IntoValStructField "addr" strings.Builder Builder.addr'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Builder_buf : IntoValStructField "buf" strings.Builder Builder.buf'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Builder addr' buf':
  PureWp True
    (struct.make #strings.Builder (alist_val [
      "addr" ::= #addr';
      "buf" ::= #buf'
    ]))%struct
    #(Builder.mk addr' buf').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Builder_struct_fields_split dq l (v : Builder.t) :
  StructFieldsSplit dq l v (
    "Haddr" ∷ l ↦s[strings.Builder :: "addr"]{dq} v.(Builder.addr') ∗
    "Hbuf" ∷ l ↦s[strings.Builder :: "buf"]{dq} v.(Builder.buf')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Builder.addr' v)) (strings.Builder) "addr"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type strings.Reader *)
Module Reader.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Reader.

Global Instance bounded_size_Reader : BoundedTypeSize strings.Reader.
Admitted.

Global Instance into_val_Reader `{ffi_syntax} : IntoVal Reader.t.
Admitted.

Global Instance into_val_typed_Reader `{ffi_syntax} : IntoValTyped Reader.t strings.Reader.
Admitted.

(* type strings.Replacer *)
Module Replacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Replacer.

Global Instance bounded_size_Replacer : BoundedTypeSize strings.Replacer.
Admitted.

Global Instance into_val_Replacer `{ffi_syntax} : IntoVal Replacer.t.
Admitted.

Global Instance into_val_typed_Replacer `{ffi_syntax} : IntoValTyped Replacer.t strings.Replacer.
Admitted.

(* type strings.replacer *)
Module replacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End replacer.

Global Instance bounded_size_replacer : BoundedTypeSize strings.replacer.
Admitted.

Global Instance into_val_replacer `{ffi_syntax} : IntoVal replacer.t.
Admitted.

Global Instance into_val_typed_replacer `{ffi_syntax} : IntoValTyped replacer.t strings.replacer.
Admitted.

(* type strings.trieNode *)
Module trieNode.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End trieNode.

Global Instance bounded_size_trieNode : BoundedTypeSize strings.trieNode.
Admitted.

Global Instance into_val_trieNode `{ffi_syntax} : IntoVal trieNode.t.
Admitted.

Global Instance into_val_typed_trieNode `{ffi_syntax} : IntoValTyped trieNode.t strings.trieNode.
Admitted.

(* type strings.genericReplacer *)
Module genericReplacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End genericReplacer.

Global Instance bounded_size_genericReplacer : BoundedTypeSize strings.genericReplacer.
Admitted.

Global Instance into_val_genericReplacer `{ffi_syntax} : IntoVal genericReplacer.t.
Admitted.

Global Instance into_val_typed_genericReplacer `{ffi_syntax} : IntoValTyped genericReplacer.t strings.genericReplacer.
Admitted.

(* type strings.appendSliceWriter *)
Module appendSliceWriter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End appendSliceWriter.

Global Instance bounded_size_appendSliceWriter : BoundedTypeSize strings.appendSliceWriter.
Admitted.

Global Instance into_val_appendSliceWriter `{ffi_syntax} : IntoVal appendSliceWriter.t.
Admitted.

Global Instance into_val_typed_appendSliceWriter `{ffi_syntax} : IntoValTyped appendSliceWriter.t strings.appendSliceWriter.
Admitted.

(* type strings.stringWriter *)
Module stringWriter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End stringWriter.

Global Instance bounded_size_stringWriter : BoundedTypeSize strings.stringWriter.
Admitted.

Global Instance into_val_stringWriter `{ffi_syntax} : IntoVal stringWriter.t.
Admitted.

Global Instance into_val_typed_stringWriter `{ffi_syntax} : IntoValTyped stringWriter.t strings.stringWriter.
Admitted.

(* type strings.singleStringReplacer *)
Module singleStringReplacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End singleStringReplacer.

Global Instance bounded_size_singleStringReplacer : BoundedTypeSize strings.singleStringReplacer.
Admitted.

Global Instance into_val_singleStringReplacer `{ffi_syntax} : IntoVal singleStringReplacer.t.
Admitted.

Global Instance into_val_typed_singleStringReplacer `{ffi_syntax} : IntoValTyped singleStringReplacer.t strings.singleStringReplacer.
Admitted.

(* type strings.byteReplacer *)
Module byteReplacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End byteReplacer.

Global Instance bounded_size_byteReplacer : BoundedTypeSize strings.byteReplacer.
Admitted.

Global Instance into_val_byteReplacer `{ffi_syntax} : IntoVal byteReplacer.t.
Admitted.

Global Instance into_val_typed_byteReplacer `{ffi_syntax} : IntoValTyped byteReplacer.t strings.byteReplacer.
Admitted.

(* type strings.byteStringReplacer *)
Module byteStringReplacer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End byteStringReplacer.

Global Instance bounded_size_byteStringReplacer : BoundedTypeSize strings.byteStringReplacer.
Admitted.

Global Instance into_val_byteStringReplacer `{ffi_syntax} : IntoVal byteStringReplacer.t.
Admitted.

Global Instance into_val_typed_byteStringReplacer `{ffi_syntax} : IntoValTyped byteStringReplacer.t strings.byteStringReplacer.
Admitted.

(* type strings.stringFinder *)
Module stringFinder.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End stringFinder.

Global Instance bounded_size_stringFinder : BoundedTypeSize strings.stringFinder.
Admitted.

Global Instance into_val_stringFinder `{ffi_syntax} : IntoVal stringFinder.t.
Admitted.

Global Instance into_val_typed_stringFinder `{ffi_syntax} : IntoValTyped stringFinder.t strings.stringFinder.
Admitted.

(* type strings.asciiSet *)
Module asciiSet.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End asciiSet.

Global Instance bounded_size_asciiSet : BoundedTypeSize strings.asciiSet.
Admitted.

Global Instance into_val_asciiSet `{ffi_syntax} : IntoVal asciiSet.t.
Admitted.

Global Instance into_val_typed_asciiSet `{ffi_syntax} : IntoValTyped asciiSet.t strings.asciiSet.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_strings : IsPkgDefinedPure strings :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single strings;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_strings : IsPkgDefined strings :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single strings)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End strings.
