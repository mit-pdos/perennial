(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.testing.

Set Default Proof Using "Type".

Module testing.

(* type testing.T *)
Module T.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End T.

Global Instance bounded_size_T : BoundedTypeSize testing.T.
Admitted.

Global Instance into_val_T `{ffi_syntax} : IntoVal T.t.
Admitted.

Global Instance into_val_typed_T `{ffi_syntax} : IntoValTyped T.t testing.T.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_testing : IsPkgDefinedPure testing :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single testing;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_testing : IsPkgDefined testing :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single testing)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End testing.
