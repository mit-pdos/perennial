(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.testing.

Set Default Proof Using "Type".

Module testing.

(* type testing.durationOrCountFlag *)
Module durationOrCountFlag.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End durationOrCountFlag.

Global Instance bounded_size_durationOrCountFlag : BoundedTypeSize testing.durationOrCountFlag.
Admitted.

Global Instance into_val_durationOrCountFlag `{ffi_syntax} : IntoVal durationOrCountFlag.t.
Admitted.

Global Instance into_val_typed_durationOrCountFlag `{ffi_syntax} : IntoValTyped durationOrCountFlag.t testing.durationOrCountFlag.
Admitted.

(* type testing.InternalBenchmark *)
Module InternalBenchmark.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End InternalBenchmark.

Global Instance bounded_size_InternalBenchmark : BoundedTypeSize testing.InternalBenchmark.
Admitted.

Global Instance into_val_InternalBenchmark `{ffi_syntax} : IntoVal InternalBenchmark.t.
Admitted.

Global Instance into_val_typed_InternalBenchmark `{ffi_syntax} : IntoValTyped InternalBenchmark.t testing.InternalBenchmark.
Admitted.

(* type testing.B *)
Module B.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End B.

Global Instance bounded_size_B : BoundedTypeSize testing.B.
Admitted.

Global Instance into_val_B `{ffi_syntax} : IntoVal B.t.
Admitted.

Global Instance into_val_typed_B `{ffi_syntax} : IntoValTyped B.t testing.B.
Admitted.

(* type testing.BenchmarkResult *)
Module BenchmarkResult.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End BenchmarkResult.

Global Instance bounded_size_BenchmarkResult : BoundedTypeSize testing.BenchmarkResult.
Admitted.

Global Instance into_val_BenchmarkResult `{ffi_syntax} : IntoVal BenchmarkResult.t.
Admitted.

Global Instance into_val_typed_BenchmarkResult `{ffi_syntax} : IntoValTyped BenchmarkResult.t testing.BenchmarkResult.
Admitted.

(* type testing.benchState *)
Module benchState.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End benchState.

Global Instance bounded_size_benchState : BoundedTypeSize testing.benchState.
Admitted.

Global Instance into_val_benchState `{ffi_syntax} : IntoVal benchState.t.
Admitted.

Global Instance into_val_typed_benchState `{ffi_syntax} : IntoValTyped benchState.t testing.benchState.
Admitted.

(* type testing.PB *)
Module PB.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End PB.

Global Instance bounded_size_PB : BoundedTypeSize testing.PB.
Admitted.

Global Instance into_val_PB `{ffi_syntax} : IntoVal PB.t.
Admitted.

Global Instance into_val_typed_PB `{ffi_syntax} : IntoValTyped PB.t testing.PB.
Admitted.

(* type testing.discard *)
Module discard.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End discard.

Global Instance bounded_size_discard : BoundedTypeSize testing.discard.
Admitted.

Global Instance into_val_discard `{ffi_syntax} : IntoVal discard.t.
Admitted.

Global Instance into_val_typed_discard `{ffi_syntax} : IntoValTyped discard.t testing.discard.
Admitted.

(* type testing.CoverBlock *)
Module CoverBlock.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CoverBlock.

Global Instance bounded_size_CoverBlock : BoundedTypeSize testing.CoverBlock.
Admitted.

Global Instance into_val_CoverBlock `{ffi_syntax} : IntoVal CoverBlock.t.
Admitted.

Global Instance into_val_typed_CoverBlock `{ffi_syntax} : IntoValTyped CoverBlock.t testing.CoverBlock.
Admitted.

(* type testing.Cover *)
Module Cover.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Cover.

Global Instance bounded_size_Cover : BoundedTypeSize testing.Cover.
Admitted.

Global Instance into_val_Cover `{ffi_syntax} : IntoVal Cover.t.
Admitted.

Global Instance into_val_typed_Cover `{ffi_syntax} : IntoValTyped Cover.t testing.Cover.
Admitted.

(* type testing.InternalExample *)
Module InternalExample.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End InternalExample.

Global Instance bounded_size_InternalExample : BoundedTypeSize testing.InternalExample.
Admitted.

Global Instance into_val_InternalExample `{ffi_syntax} : IntoVal InternalExample.t.
Admitted.

Global Instance into_val_typed_InternalExample `{ffi_syntax} : IntoValTyped InternalExample.t testing.InternalExample.
Admitted.

(* type testing.InternalFuzzTarget *)
Module InternalFuzzTarget.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End InternalFuzzTarget.

Global Instance bounded_size_InternalFuzzTarget : BoundedTypeSize testing.InternalFuzzTarget.
Admitted.

Global Instance into_val_InternalFuzzTarget `{ffi_syntax} : IntoVal InternalFuzzTarget.t.
Admitted.

Global Instance into_val_typed_InternalFuzzTarget `{ffi_syntax} : IntoValTyped InternalFuzzTarget.t testing.InternalFuzzTarget.
Admitted.

(* type testing.F *)
Module F.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End F.

Global Instance bounded_size_F : BoundedTypeSize testing.F.
Admitted.

Global Instance into_val_F `{ffi_syntax} : IntoVal F.t.
Admitted.

Global Instance into_val_typed_F `{ffi_syntax} : IntoValTyped F.t testing.F.
Admitted.

(* type testing.corpusEntry *)
Module corpusEntry.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End corpusEntry.

Global Instance bounded_size_corpusEntry : BoundedTypeSize testing.corpusEntry.
Admitted.

Global Instance into_val_corpusEntry `{ffi_syntax} : IntoVal corpusEntry.t.
Admitted.

Global Instance into_val_typed_corpusEntry `{ffi_syntax} : IntoValTyped corpusEntry.t testing.corpusEntry.
Admitted.

(* type testing.fuzzResult *)
Module fuzzResult.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End fuzzResult.

Global Instance bounded_size_fuzzResult : BoundedTypeSize testing.fuzzResult.
Admitted.

Global Instance into_val_fuzzResult `{ffi_syntax} : IntoVal fuzzResult.t.
Admitted.

Global Instance into_val_typed_fuzzResult `{ffi_syntax} : IntoValTyped fuzzResult.t testing.fuzzResult.
Admitted.

(* type testing.fuzzCrashError *)
Module fuzzCrashError.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End fuzzCrashError.

Global Instance bounded_size_fuzzCrashError : BoundedTypeSize testing.fuzzCrashError.
Admitted.

Global Instance into_val_fuzzCrashError `{ffi_syntax} : IntoVal fuzzCrashError.t.
Admitted.

Global Instance into_val_typed_fuzzCrashError `{ffi_syntax} : IntoValTyped fuzzCrashError.t testing.fuzzCrashError.
Admitted.

(* type testing.fuzzState *)
Module fuzzState.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End fuzzState.

Global Instance bounded_size_fuzzState : BoundedTypeSize testing.fuzzState.
Admitted.

Global Instance into_val_fuzzState `{ffi_syntax} : IntoVal fuzzState.t.
Admitted.

Global Instance into_val_typed_fuzzState `{ffi_syntax} : IntoValTyped fuzzState.t testing.fuzzState.
Admitted.

(* type testing.fuzzMode *)
Module fuzzMode.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End fuzzMode.

Global Instance bounded_size_fuzzMode : BoundedTypeSize testing.fuzzMode.
Admitted.

Global Instance into_val_fuzzMode `{ffi_syntax} : IntoVal fuzzMode.t.
Admitted.

Global Instance into_val_typed_fuzzMode `{ffi_syntax} : IntoValTyped fuzzMode.t testing.fuzzMode.
Admitted.

(* type testing.matcher *)
Module matcher.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End matcher.

Global Instance bounded_size_matcher : BoundedTypeSize testing.matcher.
Admitted.

Global Instance into_val_matcher `{ffi_syntax} : IntoVal matcher.t.
Admitted.

Global Instance into_val_typed_matcher `{ffi_syntax} : IntoValTyped matcher.t testing.matcher.
Admitted.

(* type testing.filterMatch *)
Module filterMatch.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End filterMatch.

Global Instance bounded_size_filterMatch : BoundedTypeSize testing.filterMatch.
Admitted.

Global Instance into_val_filterMatch `{ffi_syntax} : IntoVal filterMatch.t.
Admitted.

Global Instance into_val_typed_filterMatch `{ffi_syntax} : IntoValTyped filterMatch.t testing.filterMatch.
Admitted.

(* type testing.simpleMatch *)
Module simpleMatch.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End simpleMatch.

Global Instance bounded_size_simpleMatch : BoundedTypeSize testing.simpleMatch.
Admitted.

Global Instance into_val_simpleMatch `{ffi_syntax} : IntoVal simpleMatch.t.
Admitted.

Global Instance into_val_typed_simpleMatch `{ffi_syntax} : IntoValTyped simpleMatch.t testing.simpleMatch.
Admitted.

(* type testing.alternationMatch *)
Module alternationMatch.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End alternationMatch.

Global Instance bounded_size_alternationMatch : BoundedTypeSize testing.alternationMatch.
Admitted.

Global Instance into_val_alternationMatch `{ffi_syntax} : IntoVal alternationMatch.t.
Admitted.

Global Instance into_val_typed_alternationMatch `{ffi_syntax} : IntoValTyped alternationMatch.t testing.alternationMatch.
Admitted.

(* type testing.chattyFlag *)
Module chattyFlag.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End chattyFlag.

Global Instance bounded_size_chattyFlag : BoundedTypeSize testing.chattyFlag.
Admitted.

Global Instance into_val_chattyFlag `{ffi_syntax} : IntoVal chattyFlag.t.
Admitted.

Global Instance into_val_typed_chattyFlag `{ffi_syntax} : IntoValTyped chattyFlag.t testing.chattyFlag.
Admitted.

(* type testing.chattyPrinter *)
Module chattyPrinter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End chattyPrinter.

Global Instance bounded_size_chattyPrinter : BoundedTypeSize testing.chattyPrinter.
Admitted.

Global Instance into_val_chattyPrinter `{ffi_syntax} : IntoVal chattyPrinter.t.
Admitted.

Global Instance into_val_typed_chattyPrinter `{ffi_syntax} : IntoValTyped chattyPrinter.t testing.chattyPrinter.
Admitted.

(* type testing.common *)
Module common.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End common.

Global Instance bounded_size_common : BoundedTypeSize testing.common.
Admitted.

Global Instance into_val_common `{ffi_syntax} : IntoVal common.t.
Admitted.

Global Instance into_val_typed_common `{ffi_syntax} : IntoValTyped common.t testing.common.
Admitted.

(* type testing.indenter *)
Module indenter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End indenter.

Global Instance bounded_size_indenter : BoundedTypeSize testing.indenter.
Admitted.

Global Instance into_val_indenter `{ffi_syntax} : IntoVal indenter.t.
Admitted.

Global Instance into_val_typed_indenter `{ffi_syntax} : IntoValTyped indenter.t testing.indenter.
Admitted.

(* type testing.TB *)
Module TB.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End TB.

Global Instance bounded_size_TB : BoundedTypeSize testing.TB.
Admitted.

Global Instance into_val_TB `{ffi_syntax} : IntoVal TB.t.
Admitted.

Global Instance into_val_typed_TB `{ffi_syntax} : IntoValTyped TB.t testing.TB.
Admitted.

(* type testing.T *)
Module T.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End T.

Global Instance bounded_size_T : BoundedTypeSize testing.T.
Admitted.

Global Instance into_val_T `{ffi_syntax} : IntoVal T.t.
Admitted.

Global Instance into_val_typed_T `{ffi_syntax} : IntoValTyped T.t testing.T.
Admitted.

(* type testing.panicHandling *)
Module panicHandling.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End panicHandling.

Global Instance bounded_size_panicHandling : BoundedTypeSize testing.panicHandling.
Admitted.

Global Instance into_val_panicHandling `{ffi_syntax} : IntoVal panicHandling.t.
Admitted.

Global Instance into_val_typed_panicHandling `{ffi_syntax} : IntoValTyped panicHandling.t testing.panicHandling.
Admitted.

(* type testing.InternalTest *)
Module InternalTest.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End InternalTest.

Global Instance bounded_size_InternalTest : BoundedTypeSize testing.InternalTest.
Admitted.

Global Instance into_val_InternalTest `{ffi_syntax} : IntoVal InternalTest.t.
Admitted.

Global Instance into_val_typed_InternalTest `{ffi_syntax} : IntoValTyped InternalTest.t testing.InternalTest.
Admitted.

(* type testing.testState *)
Module testState.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End testState.

Global Instance bounded_size_testState : BoundedTypeSize testing.testState.
Admitted.

Global Instance into_val_testState `{ffi_syntax} : IntoVal testState.t.
Admitted.

Global Instance into_val_typed_testState `{ffi_syntax} : IntoValTyped testState.t testing.testState.
Admitted.

(* type testing.matchStringOnly *)
Module matchStringOnly.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End matchStringOnly.

Global Instance bounded_size_matchStringOnly : BoundedTypeSize testing.matchStringOnly.
Admitted.

Global Instance into_val_matchStringOnly `{ffi_syntax} : IntoVal matchStringOnly.t.
Admitted.

Global Instance into_val_typed_matchStringOnly `{ffi_syntax} : IntoValTyped matchStringOnly.t testing.matchStringOnly.
Admitted.

(* type testing.M *)
Module M.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End M.

Global Instance bounded_size_M : BoundedTypeSize testing.M.
Admitted.

Global Instance into_val_M `{ffi_syntax} : IntoVal M.t.
Admitted.

Global Instance into_val_typed_M `{ffi_syntax} : IntoValTyped M.t testing.M.
Admitted.

(* type testing.testDeps *)
Module testDeps.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End testDeps.

Global Instance bounded_size_testDeps : BoundedTypeSize testing.testDeps.
Admitted.

Global Instance into_val_testDeps `{ffi_syntax} : IntoVal testDeps.t.
Admitted.

Global Instance into_val_typed_testDeps `{ffi_syntax} : IntoValTyped testDeps.t testing.testDeps.
Admitted.

(* type testing.highPrecisionTime *)
Module highPrecisionTime.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End highPrecisionTime.

Global Instance bounded_size_highPrecisionTime : BoundedTypeSize testing.highPrecisionTime.
Admitted.

Global Instance into_val_highPrecisionTime `{ffi_syntax} : IntoVal highPrecisionTime.t.
Admitted.

Global Instance into_val_typed_highPrecisionTime `{ffi_syntax} : IntoValTyped highPrecisionTime.t testing.highPrecisionTime.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_testing : IsPkgDefinedPure testing :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single testing;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_testing : IsPkgDefined testing :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single testing)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End testing.
