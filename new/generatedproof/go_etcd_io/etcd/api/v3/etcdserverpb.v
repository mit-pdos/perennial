(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.api.v3.etcdserverpb.

Set Default Proof Using "Type".

Module etcdserverpb.

(* type etcdserverpb.RangeRequest_SortOrder *)
Module RangeRequest_SortOrder.
Section def.
Context `{ffi_syntax}.
Definition t := w32.
End def.
End RangeRequest_SortOrder.

(* type etcdserverpb.RangeRequest_SortTarget *)
Module RangeRequest_SortTarget.
Section def.
Context `{ffi_syntax}.
Definition t := w32.
End def.
End RangeRequest_SortTarget.

(* type etcdserverpb.Compare_CompareResult *)
Module Compare_CompareResult.
Section def.
Context `{ffi_syntax}.
Definition t := w32.
End def.
End Compare_CompareResult.

(* type etcdserverpb.Compare_CompareTarget *)
Module Compare_CompareTarget.
Section def.
Context `{ffi_syntax}.
Definition t := w32.
End def.
End Compare_CompareTarget.

(* type etcdserverpb.ResponseHeader *)
Module ResponseHeader.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ClusterId' : w64;
  MemberId' : w64;
  Revision' : w64;
  RaftTerm' : w64;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End ResponseHeader.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseHeader : Settable ResponseHeader.t :=
  settable! ResponseHeader.mk < ResponseHeader.ClusterId'; ResponseHeader.MemberId'; ResponseHeader.Revision'; ResponseHeader.RaftTerm'; ResponseHeader.XXX_NoUnkeyedLiteral'; ResponseHeader.XXX_unrecognized'; ResponseHeader.XXX_sizecache' >.
Global Instance into_val_ResponseHeader : IntoVal ResponseHeader.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseHeader [
    "ClusterId" ::= #(ResponseHeader.ClusterId' v);
    "MemberId" ::= #(ResponseHeader.MemberId' v);
    "Revision" ::= #(ResponseHeader.Revision' v);
    "RaftTerm" ::= #(ResponseHeader.RaftTerm' v);
    "XXX_NoUnkeyedLiteral" ::= #(ResponseHeader.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(ResponseHeader.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(ResponseHeader.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseHeader : IntoValTyped ResponseHeader.t etcdserverpb.ResponseHeader :=
{|
  default_val := ResponseHeader.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseHeader_ClusterId : IntoValStructField "ClusterId" etcdserverpb.ResponseHeader ResponseHeader.ClusterId'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_MemberId : IntoValStructField "MemberId" etcdserverpb.ResponseHeader ResponseHeader.MemberId'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_Revision : IntoValStructField "Revision" etcdserverpb.ResponseHeader ResponseHeader.Revision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_RaftTerm : IntoValStructField "RaftTerm" etcdserverpb.ResponseHeader ResponseHeader.RaftTerm'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.ResponseHeader ResponseHeader.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.ResponseHeader ResponseHeader.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseHeader_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.ResponseHeader ResponseHeader.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseHeader ClusterId' MemberId' Revision' RaftTerm' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.ResponseHeader (alist_val [
      "ClusterId" ::= #ClusterId';
      "MemberId" ::= #MemberId';
      "Revision" ::= #Revision';
      "RaftTerm" ::= #RaftTerm';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(ResponseHeader.mk ClusterId' MemberId' Revision' RaftTerm' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseHeader_struct_fields_split dq l (v : ResponseHeader.t) :
  StructFieldsSplit dq l v (
    "HClusterId" ∷ l ↦s[etcdserverpb.ResponseHeader :: "ClusterId"]{dq} v.(ResponseHeader.ClusterId') ∗
    "HMemberId" ∷ l ↦s[etcdserverpb.ResponseHeader :: "MemberId"]{dq} v.(ResponseHeader.MemberId') ∗
    "HRevision" ∷ l ↦s[etcdserverpb.ResponseHeader :: "Revision"]{dq} v.(ResponseHeader.Revision') ∗
    "HRaftTerm" ∷ l ↦s[etcdserverpb.ResponseHeader :: "RaftTerm"]{dq} v.(ResponseHeader.RaftTerm') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.ResponseHeader :: "XXX_NoUnkeyedLiteral"]{dq} v.(ResponseHeader.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.ResponseHeader :: "XXX_unrecognized"]{dq} v.(ResponseHeader.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.ResponseHeader :: "XXX_sizecache"]{dq} v.(ResponseHeader.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (ResponseHeader.ClusterId' v)) etcdserverpb.ResponseHeader "ClusterId"%go.
  simpl_one_flatten_struct (# (ResponseHeader.MemberId' v)) etcdserverpb.ResponseHeader "MemberId"%go.
  simpl_one_flatten_struct (# (ResponseHeader.Revision' v)) etcdserverpb.ResponseHeader "Revision"%go.
  simpl_one_flatten_struct (# (ResponseHeader.RaftTerm' v)) etcdserverpb.ResponseHeader "RaftTerm"%go.
  simpl_one_flatten_struct (# (ResponseHeader.XXX_NoUnkeyedLiteral' v)) etcdserverpb.ResponseHeader "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (ResponseHeader.XXX_unrecognized' v)) etcdserverpb.ResponseHeader "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RangeRequest *)
Module RangeRequest.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Key' : slice.t;
  RangeEnd' : slice.t;
  Limit' : w64;
  Revision' : w64;
  SortOrder' : RangeRequest_SortOrder.t;
  SortTarget' : RangeRequest_SortTarget.t;
  Serializable' : bool;
  KeysOnly' : bool;
  CountOnly' : bool;
  MinModRevision' : w64;
  MaxModRevision' : w64;
  MinCreateRevision' : w64;
  MaxCreateRevision' : w64;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End RangeRequest.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RangeRequest : Settable RangeRequest.t :=
  settable! RangeRequest.mk < RangeRequest.Key'; RangeRequest.RangeEnd'; RangeRequest.Limit'; RangeRequest.Revision'; RangeRequest.SortOrder'; RangeRequest.SortTarget'; RangeRequest.Serializable'; RangeRequest.KeysOnly'; RangeRequest.CountOnly'; RangeRequest.MinModRevision'; RangeRequest.MaxModRevision'; RangeRequest.MinCreateRevision'; RangeRequest.MaxCreateRevision'; RangeRequest.XXX_NoUnkeyedLiteral'; RangeRequest.XXX_unrecognized'; RangeRequest.XXX_sizecache' >.
Global Instance into_val_RangeRequest : IntoVal RangeRequest.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RangeRequest [
    "Key" ::= #(RangeRequest.Key' v);
    "RangeEnd" ::= #(RangeRequest.RangeEnd' v);
    "Limit" ::= #(RangeRequest.Limit' v);
    "Revision" ::= #(RangeRequest.Revision' v);
    "SortOrder" ::= #(RangeRequest.SortOrder' v);
    "SortTarget" ::= #(RangeRequest.SortTarget' v);
    "Serializable" ::= #(RangeRequest.Serializable' v);
    "KeysOnly" ::= #(RangeRequest.KeysOnly' v);
    "CountOnly" ::= #(RangeRequest.CountOnly' v);
    "MinModRevision" ::= #(RangeRequest.MinModRevision' v);
    "MaxModRevision" ::= #(RangeRequest.MaxModRevision' v);
    "MinCreateRevision" ::= #(RangeRequest.MinCreateRevision' v);
    "MaxCreateRevision" ::= #(RangeRequest.MaxCreateRevision' v);
    "XXX_NoUnkeyedLiteral" ::= #(RangeRequest.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(RangeRequest.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(RangeRequest.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RangeRequest : IntoValTyped RangeRequest.t etcdserverpb.RangeRequest :=
{|
  default_val := RangeRequest.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RangeRequest_Key : IntoValStructField "Key" etcdserverpb.RangeRequest RangeRequest.Key'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_RangeEnd : IntoValStructField "RangeEnd" etcdserverpb.RangeRequest RangeRequest.RangeEnd'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_Limit : IntoValStructField "Limit" etcdserverpb.RangeRequest RangeRequest.Limit'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_Revision : IntoValStructField "Revision" etcdserverpb.RangeRequest RangeRequest.Revision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_SortOrder : IntoValStructField "SortOrder" etcdserverpb.RangeRequest RangeRequest.SortOrder'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_SortTarget : IntoValStructField "SortTarget" etcdserverpb.RangeRequest RangeRequest.SortTarget'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_Serializable : IntoValStructField "Serializable" etcdserverpb.RangeRequest RangeRequest.Serializable'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_KeysOnly : IntoValStructField "KeysOnly" etcdserverpb.RangeRequest RangeRequest.KeysOnly'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_CountOnly : IntoValStructField "CountOnly" etcdserverpb.RangeRequest RangeRequest.CountOnly'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_MinModRevision : IntoValStructField "MinModRevision" etcdserverpb.RangeRequest RangeRequest.MinModRevision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_MaxModRevision : IntoValStructField "MaxModRevision" etcdserverpb.RangeRequest RangeRequest.MaxModRevision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_MinCreateRevision : IntoValStructField "MinCreateRevision" etcdserverpb.RangeRequest RangeRequest.MinCreateRevision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_MaxCreateRevision : IntoValStructField "MaxCreateRevision" etcdserverpb.RangeRequest RangeRequest.MaxCreateRevision'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.RangeRequest RangeRequest.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.RangeRequest RangeRequest.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeRequest_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.RangeRequest RangeRequest.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RangeRequest Key' RangeEnd' Limit' Revision' SortOrder' SortTarget' Serializable' KeysOnly' CountOnly' MinModRevision' MaxModRevision' MinCreateRevision' MaxCreateRevision' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.RangeRequest (alist_val [
      "Key" ::= #Key';
      "RangeEnd" ::= #RangeEnd';
      "Limit" ::= #Limit';
      "Revision" ::= #Revision';
      "SortOrder" ::= #SortOrder';
      "SortTarget" ::= #SortTarget';
      "Serializable" ::= #Serializable';
      "KeysOnly" ::= #KeysOnly';
      "CountOnly" ::= #CountOnly';
      "MinModRevision" ::= #MinModRevision';
      "MaxModRevision" ::= #MaxModRevision';
      "MinCreateRevision" ::= #MinCreateRevision';
      "MaxCreateRevision" ::= #MaxCreateRevision';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(RangeRequest.mk Key' RangeEnd' Limit' Revision' SortOrder' SortTarget' Serializable' KeysOnly' CountOnly' MinModRevision' MaxModRevision' MinCreateRevision' MaxCreateRevision' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RangeRequest_struct_fields_split dq l (v : RangeRequest.t) :
  StructFieldsSplit dq l v (
    "HKey" ∷ l ↦s[etcdserverpb.RangeRequest :: "Key"]{dq} v.(RangeRequest.Key') ∗
    "HRangeEnd" ∷ l ↦s[etcdserverpb.RangeRequest :: "RangeEnd"]{dq} v.(RangeRequest.RangeEnd') ∗
    "HLimit" ∷ l ↦s[etcdserverpb.RangeRequest :: "Limit"]{dq} v.(RangeRequest.Limit') ∗
    "HRevision" ∷ l ↦s[etcdserverpb.RangeRequest :: "Revision"]{dq} v.(RangeRequest.Revision') ∗
    "HSortOrder" ∷ l ↦s[etcdserverpb.RangeRequest :: "SortOrder"]{dq} v.(RangeRequest.SortOrder') ∗
    "HSortTarget" ∷ l ↦s[etcdserverpb.RangeRequest :: "SortTarget"]{dq} v.(RangeRequest.SortTarget') ∗
    "HSerializable" ∷ l ↦s[etcdserverpb.RangeRequest :: "Serializable"]{dq} v.(RangeRequest.Serializable') ∗
    "HKeysOnly" ∷ l ↦s[etcdserverpb.RangeRequest :: "KeysOnly"]{dq} v.(RangeRequest.KeysOnly') ∗
    "HCountOnly" ∷ l ↦s[etcdserverpb.RangeRequest :: "CountOnly"]{dq} v.(RangeRequest.CountOnly') ∗
    "HMinModRevision" ∷ l ↦s[etcdserverpb.RangeRequest :: "MinModRevision"]{dq} v.(RangeRequest.MinModRevision') ∗
    "HMaxModRevision" ∷ l ↦s[etcdserverpb.RangeRequest :: "MaxModRevision"]{dq} v.(RangeRequest.MaxModRevision') ∗
    "HMinCreateRevision" ∷ l ↦s[etcdserverpb.RangeRequest :: "MinCreateRevision"]{dq} v.(RangeRequest.MinCreateRevision') ∗
    "HMaxCreateRevision" ∷ l ↦s[etcdserverpb.RangeRequest :: "MaxCreateRevision"]{dq} v.(RangeRequest.MaxCreateRevision') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.RangeRequest :: "XXX_NoUnkeyedLiteral"]{dq} v.(RangeRequest.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.RangeRequest :: "XXX_unrecognized"]{dq} v.(RangeRequest.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.RangeRequest :: "XXX_sizecache"]{dq} v.(RangeRequest.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (RangeRequest.Key' v)) etcdserverpb.RangeRequest "Key"%go.
  simpl_one_flatten_struct (# (RangeRequest.RangeEnd' v)) etcdserverpb.RangeRequest "RangeEnd"%go.
  simpl_one_flatten_struct (# (RangeRequest.Limit' v)) etcdserverpb.RangeRequest "Limit"%go.
  simpl_one_flatten_struct (# (RangeRequest.Revision' v)) etcdserverpb.RangeRequest "Revision"%go.
  simpl_one_flatten_struct (# (RangeRequest.SortOrder' v)) etcdserverpb.RangeRequest "SortOrder"%go.
  simpl_one_flatten_struct (# (RangeRequest.SortTarget' v)) etcdserverpb.RangeRequest "SortTarget"%go.
  simpl_one_flatten_struct (# (RangeRequest.Serializable' v)) etcdserverpb.RangeRequest "Serializable"%go.
  simpl_one_flatten_struct (# (RangeRequest.KeysOnly' v)) etcdserverpb.RangeRequest "KeysOnly"%go.
  simpl_one_flatten_struct (# (RangeRequest.CountOnly' v)) etcdserverpb.RangeRequest "CountOnly"%go.
  simpl_one_flatten_struct (# (RangeRequest.MinModRevision' v)) etcdserverpb.RangeRequest "MinModRevision"%go.
  simpl_one_flatten_struct (# (RangeRequest.MaxModRevision' v)) etcdserverpb.RangeRequest "MaxModRevision"%go.
  simpl_one_flatten_struct (# (RangeRequest.MinCreateRevision' v)) etcdserverpb.RangeRequest "MinCreateRevision"%go.
  simpl_one_flatten_struct (# (RangeRequest.MaxCreateRevision' v)) etcdserverpb.RangeRequest "MaxCreateRevision"%go.
  simpl_one_flatten_struct (# (RangeRequest.XXX_NoUnkeyedLiteral' v)) etcdserverpb.RangeRequest "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (RangeRequest.XXX_unrecognized' v)) etcdserverpb.RangeRequest "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RangeResponse *)
Module RangeResponse.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Header' : loc;
  Kvs' : slice.t;
  More' : bool;
  Count' : w64;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End RangeResponse.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RangeResponse : Settable RangeResponse.t :=
  settable! RangeResponse.mk < RangeResponse.Header'; RangeResponse.Kvs'; RangeResponse.More'; RangeResponse.Count'; RangeResponse.XXX_NoUnkeyedLiteral'; RangeResponse.XXX_unrecognized'; RangeResponse.XXX_sizecache' >.
Global Instance into_val_RangeResponse : IntoVal RangeResponse.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RangeResponse [
    "Header" ::= #(RangeResponse.Header' v);
    "Kvs" ::= #(RangeResponse.Kvs' v);
    "More" ::= #(RangeResponse.More' v);
    "Count" ::= #(RangeResponse.Count' v);
    "XXX_NoUnkeyedLiteral" ::= #(RangeResponse.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(RangeResponse.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(RangeResponse.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RangeResponse : IntoValTyped RangeResponse.t etcdserverpb.RangeResponse :=
{|
  default_val := RangeResponse.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RangeResponse_Header : IntoValStructField "Header" etcdserverpb.RangeResponse RangeResponse.Header'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_Kvs : IntoValStructField "Kvs" etcdserverpb.RangeResponse RangeResponse.Kvs'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_More : IntoValStructField "More" etcdserverpb.RangeResponse RangeResponse.More'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_Count : IntoValStructField "Count" etcdserverpb.RangeResponse RangeResponse.Count'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.RangeResponse RangeResponse.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.RangeResponse RangeResponse.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RangeResponse_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.RangeResponse RangeResponse.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RangeResponse Header' Kvs' More' Count' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.RangeResponse (alist_val [
      "Header" ::= #Header';
      "Kvs" ::= #Kvs';
      "More" ::= #More';
      "Count" ::= #Count';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(RangeResponse.mk Header' Kvs' More' Count' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RangeResponse_struct_fields_split dq l (v : RangeResponse.t) :
  StructFieldsSplit dq l v (
    "HHeader" ∷ l ↦s[etcdserverpb.RangeResponse :: "Header"]{dq} v.(RangeResponse.Header') ∗
    "HKvs" ∷ l ↦s[etcdserverpb.RangeResponse :: "Kvs"]{dq} v.(RangeResponse.Kvs') ∗
    "HMore" ∷ l ↦s[etcdserverpb.RangeResponse :: "More"]{dq} v.(RangeResponse.More') ∗
    "HCount" ∷ l ↦s[etcdserverpb.RangeResponse :: "Count"]{dq} v.(RangeResponse.Count') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.RangeResponse :: "XXX_NoUnkeyedLiteral"]{dq} v.(RangeResponse.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.RangeResponse :: "XXX_unrecognized"]{dq} v.(RangeResponse.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.RangeResponse :: "XXX_sizecache"]{dq} v.(RangeResponse.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (RangeResponse.Header' v)) etcdserverpb.RangeResponse "Header"%go.
  simpl_one_flatten_struct (# (RangeResponse.Kvs' v)) etcdserverpb.RangeResponse "Kvs"%go.
  simpl_one_flatten_struct (# (RangeResponse.More' v)) etcdserverpb.RangeResponse "More"%go.
  simpl_one_flatten_struct (# (RangeResponse.Count' v)) etcdserverpb.RangeResponse "Count"%go.
  simpl_one_flatten_struct (# (RangeResponse.XXX_NoUnkeyedLiteral' v)) etcdserverpb.RangeResponse "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (RangeResponse.XXX_unrecognized' v)) etcdserverpb.RangeResponse "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.PutRequest *)
Module PutRequest.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Key' : slice.t;
  Value' : slice.t;
  Lease' : w64;
  PrevKv' : bool;
  IgnoreValue' : bool;
  IgnoreLease' : bool;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End PutRequest.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_PutRequest : Settable PutRequest.t :=
  settable! PutRequest.mk < PutRequest.Key'; PutRequest.Value'; PutRequest.Lease'; PutRequest.PrevKv'; PutRequest.IgnoreValue'; PutRequest.IgnoreLease'; PutRequest.XXX_NoUnkeyedLiteral'; PutRequest.XXX_unrecognized'; PutRequest.XXX_sizecache' >.
Global Instance into_val_PutRequest : IntoVal PutRequest.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.PutRequest [
    "Key" ::= #(PutRequest.Key' v);
    "Value" ::= #(PutRequest.Value' v);
    "Lease" ::= #(PutRequest.Lease' v);
    "PrevKv" ::= #(PutRequest.PrevKv' v);
    "IgnoreValue" ::= #(PutRequest.IgnoreValue' v);
    "IgnoreLease" ::= #(PutRequest.IgnoreLease' v);
    "XXX_NoUnkeyedLiteral" ::= #(PutRequest.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(PutRequest.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(PutRequest.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_PutRequest : IntoValTyped PutRequest.t etcdserverpb.PutRequest :=
{|
  default_val := PutRequest.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_PutRequest_Key : IntoValStructField "Key" etcdserverpb.PutRequest PutRequest.Key'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_Value : IntoValStructField "Value" etcdserverpb.PutRequest PutRequest.Value'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_Lease : IntoValStructField "Lease" etcdserverpb.PutRequest PutRequest.Lease'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_PrevKv : IntoValStructField "PrevKv" etcdserverpb.PutRequest PutRequest.PrevKv'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_IgnoreValue : IntoValStructField "IgnoreValue" etcdserverpb.PutRequest PutRequest.IgnoreValue'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_IgnoreLease : IntoValStructField "IgnoreLease" etcdserverpb.PutRequest PutRequest.IgnoreLease'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.PutRequest PutRequest.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.PutRequest PutRequest.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutRequest_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.PutRequest PutRequest.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_PutRequest Key' Value' Lease' PrevKv' IgnoreValue' IgnoreLease' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.PutRequest (alist_val [
      "Key" ::= #Key';
      "Value" ::= #Value';
      "Lease" ::= #Lease';
      "PrevKv" ::= #PrevKv';
      "IgnoreValue" ::= #IgnoreValue';
      "IgnoreLease" ::= #IgnoreLease';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(PutRequest.mk Key' Value' Lease' PrevKv' IgnoreValue' IgnoreLease' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance PutRequest_struct_fields_split dq l (v : PutRequest.t) :
  StructFieldsSplit dq l v (
    "HKey" ∷ l ↦s[etcdserverpb.PutRequest :: "Key"]{dq} v.(PutRequest.Key') ∗
    "HValue" ∷ l ↦s[etcdserverpb.PutRequest :: "Value"]{dq} v.(PutRequest.Value') ∗
    "HLease" ∷ l ↦s[etcdserverpb.PutRequest :: "Lease"]{dq} v.(PutRequest.Lease') ∗
    "HPrevKv" ∷ l ↦s[etcdserverpb.PutRequest :: "PrevKv"]{dq} v.(PutRequest.PrevKv') ∗
    "HIgnoreValue" ∷ l ↦s[etcdserverpb.PutRequest :: "IgnoreValue"]{dq} v.(PutRequest.IgnoreValue') ∗
    "HIgnoreLease" ∷ l ↦s[etcdserverpb.PutRequest :: "IgnoreLease"]{dq} v.(PutRequest.IgnoreLease') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.PutRequest :: "XXX_NoUnkeyedLiteral"]{dq} v.(PutRequest.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.PutRequest :: "XXX_unrecognized"]{dq} v.(PutRequest.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.PutRequest :: "XXX_sizecache"]{dq} v.(PutRequest.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (PutRequest.Key' v)) etcdserverpb.PutRequest "Key"%go.
  simpl_one_flatten_struct (# (PutRequest.Value' v)) etcdserverpb.PutRequest "Value"%go.
  simpl_one_flatten_struct (# (PutRequest.Lease' v)) etcdserverpb.PutRequest "Lease"%go.
  simpl_one_flatten_struct (# (PutRequest.PrevKv' v)) etcdserverpb.PutRequest "PrevKv"%go.
  simpl_one_flatten_struct (# (PutRequest.IgnoreValue' v)) etcdserverpb.PutRequest "IgnoreValue"%go.
  simpl_one_flatten_struct (# (PutRequest.IgnoreLease' v)) etcdserverpb.PutRequest "IgnoreLease"%go.
  simpl_one_flatten_struct (# (PutRequest.XXX_NoUnkeyedLiteral' v)) etcdserverpb.PutRequest "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (PutRequest.XXX_unrecognized' v)) etcdserverpb.PutRequest "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.PutResponse *)
Module PutResponse.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Header' : loc;
  PrevKv' : loc;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End PutResponse.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_PutResponse : Settable PutResponse.t :=
  settable! PutResponse.mk < PutResponse.Header'; PutResponse.PrevKv'; PutResponse.XXX_NoUnkeyedLiteral'; PutResponse.XXX_unrecognized'; PutResponse.XXX_sizecache' >.
Global Instance into_val_PutResponse : IntoVal PutResponse.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.PutResponse [
    "Header" ::= #(PutResponse.Header' v);
    "PrevKv" ::= #(PutResponse.PrevKv' v);
    "XXX_NoUnkeyedLiteral" ::= #(PutResponse.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(PutResponse.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(PutResponse.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_PutResponse : IntoValTyped PutResponse.t etcdserverpb.PutResponse :=
{|
  default_val := PutResponse.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_PutResponse_Header : IntoValStructField "Header" etcdserverpb.PutResponse PutResponse.Header'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutResponse_PrevKv : IntoValStructField "PrevKv" etcdserverpb.PutResponse PutResponse.PrevKv'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutResponse_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.PutResponse PutResponse.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutResponse_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.PutResponse PutResponse.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_PutResponse_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.PutResponse PutResponse.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_PutResponse Header' PrevKv' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.PutResponse (alist_val [
      "Header" ::= #Header';
      "PrevKv" ::= #PrevKv';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(PutResponse.mk Header' PrevKv' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance PutResponse_struct_fields_split dq l (v : PutResponse.t) :
  StructFieldsSplit dq l v (
    "HHeader" ∷ l ↦s[etcdserverpb.PutResponse :: "Header"]{dq} v.(PutResponse.Header') ∗
    "HPrevKv" ∷ l ↦s[etcdserverpb.PutResponse :: "PrevKv"]{dq} v.(PutResponse.PrevKv') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.PutResponse :: "XXX_NoUnkeyedLiteral"]{dq} v.(PutResponse.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.PutResponse :: "XXX_unrecognized"]{dq} v.(PutResponse.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.PutResponse :: "XXX_sizecache"]{dq} v.(PutResponse.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (PutResponse.Header' v)) etcdserverpb.PutResponse "Header"%go.
  simpl_one_flatten_struct (# (PutResponse.PrevKv' v)) etcdserverpb.PutResponse "PrevKv"%go.
  simpl_one_flatten_struct (# (PutResponse.XXX_NoUnkeyedLiteral' v)) etcdserverpb.PutResponse "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (PutResponse.XXX_unrecognized' v)) etcdserverpb.PutResponse "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.DeleteRangeRequest *)
Module DeleteRangeRequest.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Key' : slice.t;
  RangeEnd' : slice.t;
  PrevKv' : bool;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End DeleteRangeRequest.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_DeleteRangeRequest : Settable DeleteRangeRequest.t :=
  settable! DeleteRangeRequest.mk < DeleteRangeRequest.Key'; DeleteRangeRequest.RangeEnd'; DeleteRangeRequest.PrevKv'; DeleteRangeRequest.XXX_NoUnkeyedLiteral'; DeleteRangeRequest.XXX_unrecognized'; DeleteRangeRequest.XXX_sizecache' >.
Global Instance into_val_DeleteRangeRequest : IntoVal DeleteRangeRequest.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.DeleteRangeRequest [
    "Key" ::= #(DeleteRangeRequest.Key' v);
    "RangeEnd" ::= #(DeleteRangeRequest.RangeEnd' v);
    "PrevKv" ::= #(DeleteRangeRequest.PrevKv' v);
    "XXX_NoUnkeyedLiteral" ::= #(DeleteRangeRequest.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(DeleteRangeRequest.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(DeleteRangeRequest.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_DeleteRangeRequest : IntoValTyped DeleteRangeRequest.t etcdserverpb.DeleteRangeRequest :=
{|
  default_val := DeleteRangeRequest.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_Key : IntoValStructField "Key" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.Key'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_RangeEnd : IntoValStructField "RangeEnd" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.RangeEnd'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_PrevKv : IntoValStructField "PrevKv" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.PrevKv'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeRequest_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.DeleteRangeRequest DeleteRangeRequest.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_DeleteRangeRequest Key' RangeEnd' PrevKv' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.DeleteRangeRequest (alist_val [
      "Key" ::= #Key';
      "RangeEnd" ::= #RangeEnd';
      "PrevKv" ::= #PrevKv';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(DeleteRangeRequest.mk Key' RangeEnd' PrevKv' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance DeleteRangeRequest_struct_fields_split dq l (v : DeleteRangeRequest.t) :
  StructFieldsSplit dq l v (
    "HKey" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "Key"]{dq} v.(DeleteRangeRequest.Key') ∗
    "HRangeEnd" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "RangeEnd"]{dq} v.(DeleteRangeRequest.RangeEnd') ∗
    "HPrevKv" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "PrevKv"]{dq} v.(DeleteRangeRequest.PrevKv') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "XXX_NoUnkeyedLiteral"]{dq} v.(DeleteRangeRequest.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "XXX_unrecognized"]{dq} v.(DeleteRangeRequest.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.DeleteRangeRequest :: "XXX_sizecache"]{dq} v.(DeleteRangeRequest.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (DeleteRangeRequest.Key' v)) etcdserverpb.DeleteRangeRequest "Key"%go.
  simpl_one_flatten_struct (# (DeleteRangeRequest.RangeEnd' v)) etcdserverpb.DeleteRangeRequest "RangeEnd"%go.
  simpl_one_flatten_struct (# (DeleteRangeRequest.PrevKv' v)) etcdserverpb.DeleteRangeRequest "PrevKv"%go.
  simpl_one_flatten_struct (# (DeleteRangeRequest.XXX_NoUnkeyedLiteral' v)) etcdserverpb.DeleteRangeRequest "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (DeleteRangeRequest.XXX_unrecognized' v)) etcdserverpb.DeleteRangeRequest "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.DeleteRangeResponse *)
Module DeleteRangeResponse.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Header' : loc;
  Deleted' : w64;
  PrevKvs' : slice.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End DeleteRangeResponse.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_DeleteRangeResponse : Settable DeleteRangeResponse.t :=
  settable! DeleteRangeResponse.mk < DeleteRangeResponse.Header'; DeleteRangeResponse.Deleted'; DeleteRangeResponse.PrevKvs'; DeleteRangeResponse.XXX_NoUnkeyedLiteral'; DeleteRangeResponse.XXX_unrecognized'; DeleteRangeResponse.XXX_sizecache' >.
Global Instance into_val_DeleteRangeResponse : IntoVal DeleteRangeResponse.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.DeleteRangeResponse [
    "Header" ::= #(DeleteRangeResponse.Header' v);
    "Deleted" ::= #(DeleteRangeResponse.Deleted' v);
    "PrevKvs" ::= #(DeleteRangeResponse.PrevKvs' v);
    "XXX_NoUnkeyedLiteral" ::= #(DeleteRangeResponse.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(DeleteRangeResponse.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(DeleteRangeResponse.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_DeleteRangeResponse : IntoValTyped DeleteRangeResponse.t etcdserverpb.DeleteRangeResponse :=
{|
  default_val := DeleteRangeResponse.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_Header : IntoValStructField "Header" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.Header'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_Deleted : IntoValStructField "Deleted" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.Deleted'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_PrevKvs : IntoValStructField "PrevKvs" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.PrevKvs'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_DeleteRangeResponse_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.DeleteRangeResponse DeleteRangeResponse.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_DeleteRangeResponse Header' Deleted' PrevKvs' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.DeleteRangeResponse (alist_val [
      "Header" ::= #Header';
      "Deleted" ::= #Deleted';
      "PrevKvs" ::= #PrevKvs';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(DeleteRangeResponse.mk Header' Deleted' PrevKvs' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance DeleteRangeResponse_struct_fields_split dq l (v : DeleteRangeResponse.t) :
  StructFieldsSplit dq l v (
    "HHeader" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "Header"]{dq} v.(DeleteRangeResponse.Header') ∗
    "HDeleted" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "Deleted"]{dq} v.(DeleteRangeResponse.Deleted') ∗
    "HPrevKvs" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "PrevKvs"]{dq} v.(DeleteRangeResponse.PrevKvs') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "XXX_NoUnkeyedLiteral"]{dq} v.(DeleteRangeResponse.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "XXX_unrecognized"]{dq} v.(DeleteRangeResponse.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.DeleteRangeResponse :: "XXX_sizecache"]{dq} v.(DeleteRangeResponse.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (DeleteRangeResponse.Header' v)) etcdserverpb.DeleteRangeResponse "Header"%go.
  simpl_one_flatten_struct (# (DeleteRangeResponse.Deleted' v)) etcdserverpb.DeleteRangeResponse "Deleted"%go.
  simpl_one_flatten_struct (# (DeleteRangeResponse.PrevKvs' v)) etcdserverpb.DeleteRangeResponse "PrevKvs"%go.
  simpl_one_flatten_struct (# (DeleteRangeResponse.XXX_NoUnkeyedLiteral' v)) etcdserverpb.DeleteRangeResponse "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (DeleteRangeResponse.XXX_unrecognized' v)) etcdserverpb.DeleteRangeResponse "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.isRequestOp_Request *)
Module isRequestOp_Request.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End isRequestOp_Request.

(* type etcdserverpb.RequestOp *)
Module RequestOp.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Request' : isRequestOp_Request.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End RequestOp.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RequestOp : Settable RequestOp.t :=
  settable! RequestOp.mk < RequestOp.Request'; RequestOp.XXX_NoUnkeyedLiteral'; RequestOp.XXX_unrecognized'; RequestOp.XXX_sizecache' >.
Global Instance into_val_RequestOp : IntoVal RequestOp.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RequestOp [
    "Request" ::= #(RequestOp.Request' v);
    "XXX_NoUnkeyedLiteral" ::= #(RequestOp.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(RequestOp.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(RequestOp.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RequestOp : IntoValTyped RequestOp.t etcdserverpb.RequestOp :=
{|
  default_val := RequestOp.mk (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RequestOp_Request : IntoValStructField "Request" etcdserverpb.RequestOp RequestOp.Request'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RequestOp_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.RequestOp RequestOp.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RequestOp_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.RequestOp RequestOp.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_RequestOp_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.RequestOp RequestOp.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RequestOp Request' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.RequestOp (alist_val [
      "Request" ::= #Request';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(RequestOp.mk Request' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RequestOp_struct_fields_split dq l (v : RequestOp.t) :
  StructFieldsSplit dq l v (
    "HRequest" ∷ l ↦s[etcdserverpb.RequestOp :: "Request"]{dq} v.(RequestOp.Request') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.RequestOp :: "XXX_NoUnkeyedLiteral"]{dq} v.(RequestOp.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.RequestOp :: "XXX_unrecognized"]{dq} v.(RequestOp.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.RequestOp :: "XXX_sizecache"]{dq} v.(RequestOp.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (RequestOp.Request' v)) etcdserverpb.RequestOp "Request"%go.
  simpl_one_flatten_struct (# (RequestOp.XXX_NoUnkeyedLiteral' v)) etcdserverpb.RequestOp "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (RequestOp.XXX_unrecognized' v)) etcdserverpb.RequestOp "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RequestOp_RequestRange *)
Module RequestOp_RequestRange.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  RequestRange' : loc;
}.
End def.
End RequestOp_RequestRange.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RequestOp_RequestRange : Settable RequestOp_RequestRange.t :=
  settable! RequestOp_RequestRange.mk < RequestOp_RequestRange.RequestRange' >.
Global Instance into_val_RequestOp_RequestRange : IntoVal RequestOp_RequestRange.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RequestOp_RequestRange [
    "RequestRange" ::= #(RequestOp_RequestRange.RequestRange' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RequestOp_RequestRange : IntoValTyped RequestOp_RequestRange.t etcdserverpb.RequestOp_RequestRange :=
{|
  default_val := RequestOp_RequestRange.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RequestOp_RequestRange_RequestRange : IntoValStructField "RequestRange" etcdserverpb.RequestOp_RequestRange RequestOp_RequestRange.RequestRange'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RequestOp_RequestRange RequestRange':
  PureWp True
    (struct.make #etcdserverpb.RequestOp_RequestRange (alist_val [
      "RequestRange" ::= #RequestRange'
    ]))%struct
    #(RequestOp_RequestRange.mk RequestRange').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RequestOp_RequestRange_struct_fields_split dq l (v : RequestOp_RequestRange.t) :
  StructFieldsSplit dq l v (
    "HRequestRange" ∷ l ↦s[etcdserverpb.RequestOp_RequestRange :: "RequestRange"]{dq} v.(RequestOp_RequestRange.RequestRange')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RequestOp_RequestPut *)
Module RequestOp_RequestPut.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  RequestPut' : loc;
}.
End def.
End RequestOp_RequestPut.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RequestOp_RequestPut : Settable RequestOp_RequestPut.t :=
  settable! RequestOp_RequestPut.mk < RequestOp_RequestPut.RequestPut' >.
Global Instance into_val_RequestOp_RequestPut : IntoVal RequestOp_RequestPut.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RequestOp_RequestPut [
    "RequestPut" ::= #(RequestOp_RequestPut.RequestPut' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RequestOp_RequestPut : IntoValTyped RequestOp_RequestPut.t etcdserverpb.RequestOp_RequestPut :=
{|
  default_val := RequestOp_RequestPut.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RequestOp_RequestPut_RequestPut : IntoValStructField "RequestPut" etcdserverpb.RequestOp_RequestPut RequestOp_RequestPut.RequestPut'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RequestOp_RequestPut RequestPut':
  PureWp True
    (struct.make #etcdserverpb.RequestOp_RequestPut (alist_val [
      "RequestPut" ::= #RequestPut'
    ]))%struct
    #(RequestOp_RequestPut.mk RequestPut').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RequestOp_RequestPut_struct_fields_split dq l (v : RequestOp_RequestPut.t) :
  StructFieldsSplit dq l v (
    "HRequestPut" ∷ l ↦s[etcdserverpb.RequestOp_RequestPut :: "RequestPut"]{dq} v.(RequestOp_RequestPut.RequestPut')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RequestOp_RequestDeleteRange *)
Module RequestOp_RequestDeleteRange.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  RequestDeleteRange' : loc;
}.
End def.
End RequestOp_RequestDeleteRange.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RequestOp_RequestDeleteRange : Settable RequestOp_RequestDeleteRange.t :=
  settable! RequestOp_RequestDeleteRange.mk < RequestOp_RequestDeleteRange.RequestDeleteRange' >.
Global Instance into_val_RequestOp_RequestDeleteRange : IntoVal RequestOp_RequestDeleteRange.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RequestOp_RequestDeleteRange [
    "RequestDeleteRange" ::= #(RequestOp_RequestDeleteRange.RequestDeleteRange' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RequestOp_RequestDeleteRange : IntoValTyped RequestOp_RequestDeleteRange.t etcdserverpb.RequestOp_RequestDeleteRange :=
{|
  default_val := RequestOp_RequestDeleteRange.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RequestOp_RequestDeleteRange_RequestDeleteRange : IntoValStructField "RequestDeleteRange" etcdserverpb.RequestOp_RequestDeleteRange RequestOp_RequestDeleteRange.RequestDeleteRange'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RequestOp_RequestDeleteRange RequestDeleteRange':
  PureWp True
    (struct.make #etcdserverpb.RequestOp_RequestDeleteRange (alist_val [
      "RequestDeleteRange" ::= #RequestDeleteRange'
    ]))%struct
    #(RequestOp_RequestDeleteRange.mk RequestDeleteRange').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RequestOp_RequestDeleteRange_struct_fields_split dq l (v : RequestOp_RequestDeleteRange.t) :
  StructFieldsSplit dq l v (
    "HRequestDeleteRange" ∷ l ↦s[etcdserverpb.RequestOp_RequestDeleteRange :: "RequestDeleteRange"]{dq} v.(RequestOp_RequestDeleteRange.RequestDeleteRange')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.RequestOp_RequestTxn *)
Module RequestOp_RequestTxn.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  RequestTxn' : loc;
}.
End def.
End RequestOp_RequestTxn.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_RequestOp_RequestTxn : Settable RequestOp_RequestTxn.t :=
  settable! RequestOp_RequestTxn.mk < RequestOp_RequestTxn.RequestTxn' >.
Global Instance into_val_RequestOp_RequestTxn : IntoVal RequestOp_RequestTxn.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.RequestOp_RequestTxn [
    "RequestTxn" ::= #(RequestOp_RequestTxn.RequestTxn' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_RequestOp_RequestTxn : IntoValTyped RequestOp_RequestTxn.t etcdserverpb.RequestOp_RequestTxn :=
{|
  default_val := RequestOp_RequestTxn.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_RequestOp_RequestTxn_RequestTxn : IntoValStructField "RequestTxn" etcdserverpb.RequestOp_RequestTxn RequestOp_RequestTxn.RequestTxn'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_RequestOp_RequestTxn RequestTxn':
  PureWp True
    (struct.make #etcdserverpb.RequestOp_RequestTxn (alist_val [
      "RequestTxn" ::= #RequestTxn'
    ]))%struct
    #(RequestOp_RequestTxn.mk RequestTxn').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance RequestOp_RequestTxn_struct_fields_split dq l (v : RequestOp_RequestTxn.t) :
  StructFieldsSplit dq l v (
    "HRequestTxn" ∷ l ↦s[etcdserverpb.RequestOp_RequestTxn :: "RequestTxn"]{dq} v.(RequestOp_RequestTxn.RequestTxn')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.isResponseOp_Response *)
Module isResponseOp_Response.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End isResponseOp_Response.

(* type etcdserverpb.ResponseOp *)
Module ResponseOp.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Response' : isResponseOp_Response.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End ResponseOp.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseOp : Settable ResponseOp.t :=
  settable! ResponseOp.mk < ResponseOp.Response'; ResponseOp.XXX_NoUnkeyedLiteral'; ResponseOp.XXX_unrecognized'; ResponseOp.XXX_sizecache' >.
Global Instance into_val_ResponseOp : IntoVal ResponseOp.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseOp [
    "Response" ::= #(ResponseOp.Response' v);
    "XXX_NoUnkeyedLiteral" ::= #(ResponseOp.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(ResponseOp.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(ResponseOp.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseOp : IntoValTyped ResponseOp.t etcdserverpb.ResponseOp :=
{|
  default_val := ResponseOp.mk (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseOp_Response : IntoValStructField "Response" etcdserverpb.ResponseOp ResponseOp.Response'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseOp_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.ResponseOp ResponseOp.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseOp_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.ResponseOp ResponseOp.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_ResponseOp_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.ResponseOp ResponseOp.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseOp Response' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.ResponseOp (alist_val [
      "Response" ::= #Response';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(ResponseOp.mk Response' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseOp_struct_fields_split dq l (v : ResponseOp.t) :
  StructFieldsSplit dq l v (
    "HResponse" ∷ l ↦s[etcdserverpb.ResponseOp :: "Response"]{dq} v.(ResponseOp.Response') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.ResponseOp :: "XXX_NoUnkeyedLiteral"]{dq} v.(ResponseOp.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.ResponseOp :: "XXX_unrecognized"]{dq} v.(ResponseOp.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.ResponseOp :: "XXX_sizecache"]{dq} v.(ResponseOp.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (ResponseOp.Response' v)) etcdserverpb.ResponseOp "Response"%go.
  simpl_one_flatten_struct (# (ResponseOp.XXX_NoUnkeyedLiteral' v)) etcdserverpb.ResponseOp "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (ResponseOp.XXX_unrecognized' v)) etcdserverpb.ResponseOp "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.ResponseOp_ResponseRange *)
Module ResponseOp_ResponseRange.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ResponseRange' : loc;
}.
End def.
End ResponseOp_ResponseRange.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseOp_ResponseRange : Settable ResponseOp_ResponseRange.t :=
  settable! ResponseOp_ResponseRange.mk < ResponseOp_ResponseRange.ResponseRange' >.
Global Instance into_val_ResponseOp_ResponseRange : IntoVal ResponseOp_ResponseRange.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseOp_ResponseRange [
    "ResponseRange" ::= #(ResponseOp_ResponseRange.ResponseRange' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseOp_ResponseRange : IntoValTyped ResponseOp_ResponseRange.t etcdserverpb.ResponseOp_ResponseRange :=
{|
  default_val := ResponseOp_ResponseRange.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseOp_ResponseRange_ResponseRange : IntoValStructField "ResponseRange" etcdserverpb.ResponseOp_ResponseRange ResponseOp_ResponseRange.ResponseRange'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseOp_ResponseRange ResponseRange':
  PureWp True
    (struct.make #etcdserverpb.ResponseOp_ResponseRange (alist_val [
      "ResponseRange" ::= #ResponseRange'
    ]))%struct
    #(ResponseOp_ResponseRange.mk ResponseRange').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseOp_ResponseRange_struct_fields_split dq l (v : ResponseOp_ResponseRange.t) :
  StructFieldsSplit dq l v (
    "HResponseRange" ∷ l ↦s[etcdserverpb.ResponseOp_ResponseRange :: "ResponseRange"]{dq} v.(ResponseOp_ResponseRange.ResponseRange')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.ResponseOp_ResponsePut *)
Module ResponseOp_ResponsePut.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ResponsePut' : loc;
}.
End def.
End ResponseOp_ResponsePut.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseOp_ResponsePut : Settable ResponseOp_ResponsePut.t :=
  settable! ResponseOp_ResponsePut.mk < ResponseOp_ResponsePut.ResponsePut' >.
Global Instance into_val_ResponseOp_ResponsePut : IntoVal ResponseOp_ResponsePut.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseOp_ResponsePut [
    "ResponsePut" ::= #(ResponseOp_ResponsePut.ResponsePut' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseOp_ResponsePut : IntoValTyped ResponseOp_ResponsePut.t etcdserverpb.ResponseOp_ResponsePut :=
{|
  default_val := ResponseOp_ResponsePut.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseOp_ResponsePut_ResponsePut : IntoValStructField "ResponsePut" etcdserverpb.ResponseOp_ResponsePut ResponseOp_ResponsePut.ResponsePut'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseOp_ResponsePut ResponsePut':
  PureWp True
    (struct.make #etcdserverpb.ResponseOp_ResponsePut (alist_val [
      "ResponsePut" ::= #ResponsePut'
    ]))%struct
    #(ResponseOp_ResponsePut.mk ResponsePut').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseOp_ResponsePut_struct_fields_split dq l (v : ResponseOp_ResponsePut.t) :
  StructFieldsSplit dq l v (
    "HResponsePut" ∷ l ↦s[etcdserverpb.ResponseOp_ResponsePut :: "ResponsePut"]{dq} v.(ResponseOp_ResponsePut.ResponsePut')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.ResponseOp_ResponseDeleteRange *)
Module ResponseOp_ResponseDeleteRange.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ResponseDeleteRange' : loc;
}.
End def.
End ResponseOp_ResponseDeleteRange.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseOp_ResponseDeleteRange : Settable ResponseOp_ResponseDeleteRange.t :=
  settable! ResponseOp_ResponseDeleteRange.mk < ResponseOp_ResponseDeleteRange.ResponseDeleteRange' >.
Global Instance into_val_ResponseOp_ResponseDeleteRange : IntoVal ResponseOp_ResponseDeleteRange.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseOp_ResponseDeleteRange [
    "ResponseDeleteRange" ::= #(ResponseOp_ResponseDeleteRange.ResponseDeleteRange' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseOp_ResponseDeleteRange : IntoValTyped ResponseOp_ResponseDeleteRange.t etcdserverpb.ResponseOp_ResponseDeleteRange :=
{|
  default_val := ResponseOp_ResponseDeleteRange.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseOp_ResponseDeleteRange_ResponseDeleteRange : IntoValStructField "ResponseDeleteRange" etcdserverpb.ResponseOp_ResponseDeleteRange ResponseOp_ResponseDeleteRange.ResponseDeleteRange'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseOp_ResponseDeleteRange ResponseDeleteRange':
  PureWp True
    (struct.make #etcdserverpb.ResponseOp_ResponseDeleteRange (alist_val [
      "ResponseDeleteRange" ::= #ResponseDeleteRange'
    ]))%struct
    #(ResponseOp_ResponseDeleteRange.mk ResponseDeleteRange').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseOp_ResponseDeleteRange_struct_fields_split dq l (v : ResponseOp_ResponseDeleteRange.t) :
  StructFieldsSplit dq l v (
    "HResponseDeleteRange" ∷ l ↦s[etcdserverpb.ResponseOp_ResponseDeleteRange :: "ResponseDeleteRange"]{dq} v.(ResponseOp_ResponseDeleteRange.ResponseDeleteRange')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.ResponseOp_ResponseTxn *)
Module ResponseOp_ResponseTxn.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ResponseTxn' : loc;
}.
End def.
End ResponseOp_ResponseTxn.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_ResponseOp_ResponseTxn : Settable ResponseOp_ResponseTxn.t :=
  settable! ResponseOp_ResponseTxn.mk < ResponseOp_ResponseTxn.ResponseTxn' >.
Global Instance into_val_ResponseOp_ResponseTxn : IntoVal ResponseOp_ResponseTxn.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.ResponseOp_ResponseTxn [
    "ResponseTxn" ::= #(ResponseOp_ResponseTxn.ResponseTxn' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_ResponseOp_ResponseTxn : IntoValTyped ResponseOp_ResponseTxn.t etcdserverpb.ResponseOp_ResponseTxn :=
{|
  default_val := ResponseOp_ResponseTxn.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_ResponseOp_ResponseTxn_ResponseTxn : IntoValStructField "ResponseTxn" etcdserverpb.ResponseOp_ResponseTxn ResponseOp_ResponseTxn.ResponseTxn'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_ResponseOp_ResponseTxn ResponseTxn':
  PureWp True
    (struct.make #etcdserverpb.ResponseOp_ResponseTxn (alist_val [
      "ResponseTxn" ::= #ResponseTxn'
    ]))%struct
    #(ResponseOp_ResponseTxn.mk ResponseTxn').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance ResponseOp_ResponseTxn_struct_fields_split dq l (v : ResponseOp_ResponseTxn.t) :
  StructFieldsSplit dq l v (
    "HResponseTxn" ∷ l ↦s[etcdserverpb.ResponseOp_ResponseTxn :: "ResponseTxn"]{dq} v.(ResponseOp_ResponseTxn.ResponseTxn')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.isCompare_TargetUnion *)
Module isCompare_TargetUnion.
Section def.
Context `{ffi_syntax}.
Definition t := interface.t.
End def.
End isCompare_TargetUnion.

(* type etcdserverpb.Compare *)
Module Compare.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Result' : Compare_CompareResult.t;
  Target' : Compare_CompareTarget.t;
  Key' : slice.t;
  TargetUnion' : isCompare_TargetUnion.t;
  RangeEnd' : slice.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End Compare.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare : Settable Compare.t :=
  settable! Compare.mk < Compare.Result'; Compare.Target'; Compare.Key'; Compare.TargetUnion'; Compare.RangeEnd'; Compare.XXX_NoUnkeyedLiteral'; Compare.XXX_unrecognized'; Compare.XXX_sizecache' >.
Global Instance into_val_Compare : IntoVal Compare.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare [
    "Result" ::= #(Compare.Result' v);
    "Target" ::= #(Compare.Target' v);
    "Key" ::= #(Compare.Key' v);
    "TargetUnion" ::= #(Compare.TargetUnion' v);
    "RangeEnd" ::= #(Compare.RangeEnd' v);
    "XXX_NoUnkeyedLiteral" ::= #(Compare.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(Compare.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(Compare.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare : IntoValTyped Compare.t etcdserverpb.Compare :=
{|
  default_val := Compare.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_Result : IntoValStructField "Result" etcdserverpb.Compare Compare.Result'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_Target : IntoValStructField "Target" etcdserverpb.Compare Compare.Target'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_Key : IntoValStructField "Key" etcdserverpb.Compare Compare.Key'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_TargetUnion : IntoValStructField "TargetUnion" etcdserverpb.Compare Compare.TargetUnion'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_RangeEnd : IntoValStructField "RangeEnd" etcdserverpb.Compare Compare.RangeEnd'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.Compare Compare.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.Compare Compare.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Compare_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.Compare Compare.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare Result' Target' Key' TargetUnion' RangeEnd' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.Compare (alist_val [
      "Result" ::= #Result';
      "Target" ::= #Target';
      "Key" ::= #Key';
      "TargetUnion" ::= #TargetUnion';
      "RangeEnd" ::= #RangeEnd';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(Compare.mk Result' Target' Key' TargetUnion' RangeEnd' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_struct_fields_split dq l (v : Compare.t) :
  StructFieldsSplit dq l v (
    "HResult" ∷ l ↦s[etcdserverpb.Compare :: "Result"]{dq} v.(Compare.Result') ∗
    "HTarget" ∷ l ↦s[etcdserverpb.Compare :: "Target"]{dq} v.(Compare.Target') ∗
    "HKey" ∷ l ↦s[etcdserverpb.Compare :: "Key"]{dq} v.(Compare.Key') ∗
    "HTargetUnion" ∷ l ↦s[etcdserverpb.Compare :: "TargetUnion"]{dq} v.(Compare.TargetUnion') ∗
    "HRangeEnd" ∷ l ↦s[etcdserverpb.Compare :: "RangeEnd"]{dq} v.(Compare.RangeEnd') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.Compare :: "XXX_NoUnkeyedLiteral"]{dq} v.(Compare.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.Compare :: "XXX_unrecognized"]{dq} v.(Compare.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.Compare :: "XXX_sizecache"]{dq} v.(Compare.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Compare.Result' v)) etcdserverpb.Compare "Result"%go.
  simpl_one_flatten_struct (# (Compare.Target' v)) etcdserverpb.Compare "Target"%go.
  simpl_one_flatten_struct (# (Compare.Key' v)) etcdserverpb.Compare "Key"%go.
  simpl_one_flatten_struct (# (Compare.TargetUnion' v)) etcdserverpb.Compare "TargetUnion"%go.
  simpl_one_flatten_struct (# (Compare.RangeEnd' v)) etcdserverpb.Compare "RangeEnd"%go.
  simpl_one_flatten_struct (# (Compare.XXX_NoUnkeyedLiteral' v)) etcdserverpb.Compare "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (Compare.XXX_unrecognized' v)) etcdserverpb.Compare "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.Compare_Version *)
Module Compare_Version.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Version' : w64;
}.
End def.
End Compare_Version.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare_Version : Settable Compare_Version.t :=
  settable! Compare_Version.mk < Compare_Version.Version' >.
Global Instance into_val_Compare_Version : IntoVal Compare_Version.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare_Version [
    "Version" ::= #(Compare_Version.Version' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare_Version : IntoValTyped Compare_Version.t etcdserverpb.Compare_Version :=
{|
  default_val := Compare_Version.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_Version_Version : IntoValStructField "Version" etcdserverpb.Compare_Version Compare_Version.Version'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare_Version Version':
  PureWp True
    (struct.make #etcdserverpb.Compare_Version (alist_val [
      "Version" ::= #Version'
    ]))%struct
    #(Compare_Version.mk Version').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_Version_struct_fields_split dq l (v : Compare_Version.t) :
  StructFieldsSplit dq l v (
    "HVersion" ∷ l ↦s[etcdserverpb.Compare_Version :: "Version"]{dq} v.(Compare_Version.Version')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.Compare_CreateRevision *)
Module Compare_CreateRevision.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  CreateRevision' : w64;
}.
End def.
End Compare_CreateRevision.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare_CreateRevision : Settable Compare_CreateRevision.t :=
  settable! Compare_CreateRevision.mk < Compare_CreateRevision.CreateRevision' >.
Global Instance into_val_Compare_CreateRevision : IntoVal Compare_CreateRevision.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare_CreateRevision [
    "CreateRevision" ::= #(Compare_CreateRevision.CreateRevision' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare_CreateRevision : IntoValTyped Compare_CreateRevision.t etcdserverpb.Compare_CreateRevision :=
{|
  default_val := Compare_CreateRevision.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_CreateRevision_CreateRevision : IntoValStructField "CreateRevision" etcdserverpb.Compare_CreateRevision Compare_CreateRevision.CreateRevision'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare_CreateRevision CreateRevision':
  PureWp True
    (struct.make #etcdserverpb.Compare_CreateRevision (alist_val [
      "CreateRevision" ::= #CreateRevision'
    ]))%struct
    #(Compare_CreateRevision.mk CreateRevision').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_CreateRevision_struct_fields_split dq l (v : Compare_CreateRevision.t) :
  StructFieldsSplit dq l v (
    "HCreateRevision" ∷ l ↦s[etcdserverpb.Compare_CreateRevision :: "CreateRevision"]{dq} v.(Compare_CreateRevision.CreateRevision')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.Compare_ModRevision *)
Module Compare_ModRevision.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ModRevision' : w64;
}.
End def.
End Compare_ModRevision.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare_ModRevision : Settable Compare_ModRevision.t :=
  settable! Compare_ModRevision.mk < Compare_ModRevision.ModRevision' >.
Global Instance into_val_Compare_ModRevision : IntoVal Compare_ModRevision.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare_ModRevision [
    "ModRevision" ::= #(Compare_ModRevision.ModRevision' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare_ModRevision : IntoValTyped Compare_ModRevision.t etcdserverpb.Compare_ModRevision :=
{|
  default_val := Compare_ModRevision.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_ModRevision_ModRevision : IntoValStructField "ModRevision" etcdserverpb.Compare_ModRevision Compare_ModRevision.ModRevision'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare_ModRevision ModRevision':
  PureWp True
    (struct.make #etcdserverpb.Compare_ModRevision (alist_val [
      "ModRevision" ::= #ModRevision'
    ]))%struct
    #(Compare_ModRevision.mk ModRevision').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_ModRevision_struct_fields_split dq l (v : Compare_ModRevision.t) :
  StructFieldsSplit dq l v (
    "HModRevision" ∷ l ↦s[etcdserverpb.Compare_ModRevision :: "ModRevision"]{dq} v.(Compare_ModRevision.ModRevision')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.Compare_Value *)
Module Compare_Value.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Value' : slice.t;
}.
End def.
End Compare_Value.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare_Value : Settable Compare_Value.t :=
  settable! Compare_Value.mk < Compare_Value.Value' >.
Global Instance into_val_Compare_Value : IntoVal Compare_Value.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare_Value [
    "Value" ::= #(Compare_Value.Value' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare_Value : IntoValTyped Compare_Value.t etcdserverpb.Compare_Value :=
{|
  default_val := Compare_Value.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_Value_Value : IntoValStructField "Value" etcdserverpb.Compare_Value Compare_Value.Value'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare_Value Value':
  PureWp True
    (struct.make #etcdserverpb.Compare_Value (alist_val [
      "Value" ::= #Value'
    ]))%struct
    #(Compare_Value.mk Value').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_Value_struct_fields_split dq l (v : Compare_Value.t) :
  StructFieldsSplit dq l v (
    "HValue" ∷ l ↦s[etcdserverpb.Compare_Value :: "Value"]{dq} v.(Compare_Value.Value')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.Compare_Lease *)
Module Compare_Lease.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Lease' : w64;
}.
End def.
End Compare_Lease.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Compare_Lease : Settable Compare_Lease.t :=
  settable! Compare_Lease.mk < Compare_Lease.Lease' >.
Global Instance into_val_Compare_Lease : IntoVal Compare_Lease.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.Compare_Lease [
    "Lease" ::= #(Compare_Lease.Lease' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Compare_Lease : IntoValTyped Compare_Lease.t etcdserverpb.Compare_Lease :=
{|
  default_val := Compare_Lease.mk (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Compare_Lease_Lease : IntoValStructField "Lease" etcdserverpb.Compare_Lease Compare_Lease.Lease'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Compare_Lease Lease':
  PureWp True
    (struct.make #etcdserverpb.Compare_Lease (alist_val [
      "Lease" ::= #Lease'
    ]))%struct
    #(Compare_Lease.mk Lease').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Compare_Lease_struct_fields_split dq l (v : Compare_Lease.t) :
  StructFieldsSplit dq l v (
    "HLease" ∷ l ↦s[etcdserverpb.Compare_Lease :: "Lease"]{dq} v.(Compare_Lease.Lease')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.TxnRequest *)
Module TxnRequest.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Compare' : slice.t;
  Success' : slice.t;
  Failure' : slice.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End TxnRequest.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_TxnRequest : Settable TxnRequest.t :=
  settable! TxnRequest.mk < TxnRequest.Compare'; TxnRequest.Success'; TxnRequest.Failure'; TxnRequest.XXX_NoUnkeyedLiteral'; TxnRequest.XXX_unrecognized'; TxnRequest.XXX_sizecache' >.
Global Instance into_val_TxnRequest : IntoVal TxnRequest.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.TxnRequest [
    "Compare" ::= #(TxnRequest.Compare' v);
    "Success" ::= #(TxnRequest.Success' v);
    "Failure" ::= #(TxnRequest.Failure' v);
    "XXX_NoUnkeyedLiteral" ::= #(TxnRequest.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(TxnRequest.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(TxnRequest.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_TxnRequest : IntoValTyped TxnRequest.t etcdserverpb.TxnRequest :=
{|
  default_val := TxnRequest.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_TxnRequest_Compare : IntoValStructField "Compare" etcdserverpb.TxnRequest TxnRequest.Compare'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnRequest_Success : IntoValStructField "Success" etcdserverpb.TxnRequest TxnRequest.Success'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnRequest_Failure : IntoValStructField "Failure" etcdserverpb.TxnRequest TxnRequest.Failure'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnRequest_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.TxnRequest TxnRequest.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnRequest_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.TxnRequest TxnRequest.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnRequest_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.TxnRequest TxnRequest.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_TxnRequest Compare' Success' Failure' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.TxnRequest (alist_val [
      "Compare" ::= #Compare';
      "Success" ::= #Success';
      "Failure" ::= #Failure';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(TxnRequest.mk Compare' Success' Failure' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance TxnRequest_struct_fields_split dq l (v : TxnRequest.t) :
  StructFieldsSplit dq l v (
    "HCompare" ∷ l ↦s[etcdserverpb.TxnRequest :: "Compare"]{dq} v.(TxnRequest.Compare') ∗
    "HSuccess" ∷ l ↦s[etcdserverpb.TxnRequest :: "Success"]{dq} v.(TxnRequest.Success') ∗
    "HFailure" ∷ l ↦s[etcdserverpb.TxnRequest :: "Failure"]{dq} v.(TxnRequest.Failure') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.TxnRequest :: "XXX_NoUnkeyedLiteral"]{dq} v.(TxnRequest.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.TxnRequest :: "XXX_unrecognized"]{dq} v.(TxnRequest.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.TxnRequest :: "XXX_sizecache"]{dq} v.(TxnRequest.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (TxnRequest.Compare' v)) etcdserverpb.TxnRequest "Compare"%go.
  simpl_one_flatten_struct (# (TxnRequest.Success' v)) etcdserverpb.TxnRequest "Success"%go.
  simpl_one_flatten_struct (# (TxnRequest.Failure' v)) etcdserverpb.TxnRequest "Failure"%go.
  simpl_one_flatten_struct (# (TxnRequest.XXX_NoUnkeyedLiteral' v)) etcdserverpb.TxnRequest "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (TxnRequest.XXX_unrecognized' v)) etcdserverpb.TxnRequest "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type etcdserverpb.TxnResponse *)
Module TxnResponse.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Header' : loc;
  Succeeded' : bool;
  Responses' : slice.t;
  XXX_NoUnkeyedLiteral' : unit;
  XXX_unrecognized' : slice.t;
  XXX_sizecache' : w32;
}.
End def.
End TxnResponse.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_TxnResponse : Settable TxnResponse.t :=
  settable! TxnResponse.mk < TxnResponse.Header'; TxnResponse.Succeeded'; TxnResponse.Responses'; TxnResponse.XXX_NoUnkeyedLiteral'; TxnResponse.XXX_unrecognized'; TxnResponse.XXX_sizecache' >.
Global Instance into_val_TxnResponse : IntoVal TxnResponse.t :=
  {| to_val_def v :=
    struct.val_aux etcdserverpb.TxnResponse [
    "Header" ::= #(TxnResponse.Header' v);
    "Succeeded" ::= #(TxnResponse.Succeeded' v);
    "Responses" ::= #(TxnResponse.Responses' v);
    "XXX_NoUnkeyedLiteral" ::= #(TxnResponse.XXX_NoUnkeyedLiteral' v);
    "XXX_unrecognized" ::= #(TxnResponse.XXX_unrecognized' v);
    "XXX_sizecache" ::= #(TxnResponse.XXX_sizecache' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_TxnResponse : IntoValTyped TxnResponse.t etcdserverpb.TxnResponse :=
{|
  default_val := TxnResponse.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_TxnResponse_Header : IntoValStructField "Header" etcdserverpb.TxnResponse TxnResponse.Header'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnResponse_Succeeded : IntoValStructField "Succeeded" etcdserverpb.TxnResponse TxnResponse.Succeeded'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnResponse_Responses : IntoValStructField "Responses" etcdserverpb.TxnResponse TxnResponse.Responses'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnResponse_XXX_NoUnkeyedLiteral : IntoValStructField "XXX_NoUnkeyedLiteral" etcdserverpb.TxnResponse TxnResponse.XXX_NoUnkeyedLiteral'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnResponse_XXX_unrecognized : IntoValStructField "XXX_unrecognized" etcdserverpb.TxnResponse TxnResponse.XXX_unrecognized'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_TxnResponse_XXX_sizecache : IntoValStructField "XXX_sizecache" etcdserverpb.TxnResponse TxnResponse.XXX_sizecache'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_TxnResponse Header' Succeeded' Responses' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache':
  PureWp True
    (struct.make #etcdserverpb.TxnResponse (alist_val [
      "Header" ::= #Header';
      "Succeeded" ::= #Succeeded';
      "Responses" ::= #Responses';
      "XXX_NoUnkeyedLiteral" ::= #XXX_NoUnkeyedLiteral';
      "XXX_unrecognized" ::= #XXX_unrecognized';
      "XXX_sizecache" ::= #XXX_sizecache'
    ]))%struct
    #(TxnResponse.mk Header' Succeeded' Responses' XXX_NoUnkeyedLiteral' XXX_unrecognized' XXX_sizecache').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance TxnResponse_struct_fields_split dq l (v : TxnResponse.t) :
  StructFieldsSplit dq l v (
    "HHeader" ∷ l ↦s[etcdserverpb.TxnResponse :: "Header"]{dq} v.(TxnResponse.Header') ∗
    "HSucceeded" ∷ l ↦s[etcdserverpb.TxnResponse :: "Succeeded"]{dq} v.(TxnResponse.Succeeded') ∗
    "HResponses" ∷ l ↦s[etcdserverpb.TxnResponse :: "Responses"]{dq} v.(TxnResponse.Responses') ∗
    "HXXX_NoUnkeyedLiteral" ∷ l ↦s[etcdserverpb.TxnResponse :: "XXX_NoUnkeyedLiteral"]{dq} v.(TxnResponse.XXX_NoUnkeyedLiteral') ∗
    "HXXX_unrecognized" ∷ l ↦s[etcdserverpb.TxnResponse :: "XXX_unrecognized"]{dq} v.(TxnResponse.XXX_unrecognized') ∗
    "HXXX_sizecache" ∷ l ↦s[etcdserverpb.TxnResponse :: "XXX_sizecache"]{dq} v.(TxnResponse.XXX_sizecache')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (TxnResponse.Header' v)) etcdserverpb.TxnResponse "Header"%go.
  simpl_one_flatten_struct (# (TxnResponse.Succeeded' v)) etcdserverpb.TxnResponse "Succeeded"%go.
  simpl_one_flatten_struct (# (TxnResponse.Responses' v)) etcdserverpb.TxnResponse "Responses"%go.
  simpl_one_flatten_struct (# (TxnResponse.XXX_NoUnkeyedLiteral' v)) etcdserverpb.TxnResponse "XXX_NoUnkeyedLiteral"%go.
  simpl_one_flatten_struct (# (TxnResponse.XXX_unrecognized' v)) etcdserverpb.TxnResponse "XXX_unrecognized"%go.

  solve_field_ref_f.
Qed.

End instances.

Section names.

Class GlobalAddrs :=
{
  RangeRequest_SortOrder_name : loc;
  RangeRequest_SortOrder_value : loc;
  RangeRequest_SortTarget_name : loc;
  RangeRequest_SortTarget_value : loc;
  Compare_CompareResult_name : loc;
  Compare_CompareResult_value : loc;
  Compare_CompareTarget_name : loc;
  Compare_CompareTarget_value : loc;
}.

Context `{!GlobalAddrs}.
Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!goGlobalsGS Σ}.

Definition var_addrs : list (go_string * loc) := [
    ("RangeRequest_SortOrder_name"%go, RangeRequest_SortOrder_name);
    ("RangeRequest_SortOrder_value"%go, RangeRequest_SortOrder_value);
    ("RangeRequest_SortTarget_name"%go, RangeRequest_SortTarget_name);
    ("RangeRequest_SortTarget_value"%go, RangeRequest_SortTarget_value);
    ("Compare_CompareResult_name"%go, Compare_CompareResult_name);
    ("Compare_CompareResult_value"%go, Compare_CompareResult_value);
    ("Compare_CompareTarget_name"%go, Compare_CompareTarget_name);
    ("Compare_CompareTarget_value"%go, Compare_CompareTarget_value)
  ].

Global Instance is_pkg_defined_instance : IsPkgDefined etcdserverpb :=
{|
  is_pkg_defined := is_global_definitions etcdserverpb var_addrs;
|}.

Definition own_allocated : iProp Σ :=
  "HRangeRequest_SortOrder_name" ∷ RangeRequest_SortOrder_name ↦ (default_val loc) ∗
  "HRangeRequest_SortOrder_value" ∷ RangeRequest_SortOrder_value ↦ (default_val loc) ∗
  "HRangeRequest_SortTarget_name" ∷ RangeRequest_SortTarget_name ↦ (default_val loc) ∗
  "HRangeRequest_SortTarget_value" ∷ RangeRequest_SortTarget_value ↦ (default_val loc) ∗
  "HCompare_CompareResult_name" ∷ Compare_CompareResult_name ↦ (default_val loc) ∗
  "HCompare_CompareResult_value" ∷ Compare_CompareResult_value ↦ (default_val loc) ∗
  "HCompare_CompareTarget_name" ∷ Compare_CompareTarget_name ↦ (default_val loc) ∗
  "HCompare_CompareTarget_value" ∷ Compare_CompareTarget_value ↦ (default_val loc).

Global Instance wp_globals_get_RangeRequest_SortOrder_name : 
  WpGlobalsGet etcdserverpb "RangeRequest_SortOrder_name" RangeRequest_SortOrder_name (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_RangeRequest_SortOrder_value : 
  WpGlobalsGet etcdserverpb "RangeRequest_SortOrder_value" RangeRequest_SortOrder_value (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_RangeRequest_SortTarget_name : 
  WpGlobalsGet etcdserverpb "RangeRequest_SortTarget_name" RangeRequest_SortTarget_name (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_RangeRequest_SortTarget_value : 
  WpGlobalsGet etcdserverpb "RangeRequest_SortTarget_value" RangeRequest_SortTarget_value (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_Compare_CompareResult_name : 
  WpGlobalsGet etcdserverpb "Compare_CompareResult_name" Compare_CompareResult_name (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_Compare_CompareResult_value : 
  WpGlobalsGet etcdserverpb "Compare_CompareResult_value" Compare_CompareResult_value (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_Compare_CompareTarget_name : 
  WpGlobalsGet etcdserverpb "Compare_CompareTarget_name" Compare_CompareTarget_name (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_globals_get_Compare_CompareTarget_value : 
  WpGlobalsGet etcdserverpb "Compare_CompareTarget_value" Compare_CompareTarget_value (is_pkg_defined etcdserverpb).
Proof. apply wp_globals_get'. reflexivity. Qed.

Global Instance wp_method_call_RangeRequest_SortOrder_EnumDescriptor :
  WpMethodCall etcdserverpb "RangeRequest_SortOrder" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RangeRequest_SortOrder'ptr_EnumDescriptor :
  WpMethodCall etcdserverpb "RangeRequest_SortOrder'ptr" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RangeRequest_SortTarget_EnumDescriptor :
  WpMethodCall etcdserverpb "RangeRequest_SortTarget" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RangeRequest_SortTarget'ptr_EnumDescriptor :
  WpMethodCall etcdserverpb "RangeRequest_SortTarget'ptr" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CompareResult_EnumDescriptor :
  WpMethodCall etcdserverpb "Compare_CompareResult" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CompareResult'ptr_EnumDescriptor :
  WpMethodCall etcdserverpb "Compare_CompareResult'ptr" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CompareTarget_EnumDescriptor :
  WpMethodCall etcdserverpb "Compare_CompareTarget" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CompareTarget'ptr_EnumDescriptor :
  WpMethodCall etcdserverpb "Compare_CompareTarget'ptr" "EnumDescriptor" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestRange'ptr_MarshalTo :
  WpMethodCall etcdserverpb "RequestOp_RequestRange'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestRange'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "RequestOp_RequestRange'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestRange'ptr_Size :
  WpMethodCall etcdserverpb "RequestOp_RequestRange'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestRange'ptr_isRequestOp_Request :
  WpMethodCall etcdserverpb "RequestOp_RequestRange'ptr" "isRequestOp_Request" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestPut'ptr_MarshalTo :
  WpMethodCall etcdserverpb "RequestOp_RequestPut'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestPut'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "RequestOp_RequestPut'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestPut'ptr_Size :
  WpMethodCall etcdserverpb "RequestOp_RequestPut'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestPut'ptr_isRequestOp_Request :
  WpMethodCall etcdserverpb "RequestOp_RequestPut'ptr" "isRequestOp_Request" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestDeleteRange'ptr_MarshalTo :
  WpMethodCall etcdserverpb "RequestOp_RequestDeleteRange'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestDeleteRange'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "RequestOp_RequestDeleteRange'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestDeleteRange'ptr_Size :
  WpMethodCall etcdserverpb "RequestOp_RequestDeleteRange'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestDeleteRange'ptr_isRequestOp_Request :
  WpMethodCall etcdserverpb "RequestOp_RequestDeleteRange'ptr" "isRequestOp_Request" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestTxn'ptr_MarshalTo :
  WpMethodCall etcdserverpb "RequestOp_RequestTxn'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestTxn'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "RequestOp_RequestTxn'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestTxn'ptr_Size :
  WpMethodCall etcdserverpb "RequestOp_RequestTxn'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_RequestOp_RequestTxn'ptr_isRequestOp_Request :
  WpMethodCall etcdserverpb "RequestOp_RequestTxn'ptr" "isRequestOp_Request" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseRange'ptr_MarshalTo :
  WpMethodCall etcdserverpb "ResponseOp_ResponseRange'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseRange'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "ResponseOp_ResponseRange'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseRange'ptr_Size :
  WpMethodCall etcdserverpb "ResponseOp_ResponseRange'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseRange'ptr_isResponseOp_Response :
  WpMethodCall etcdserverpb "ResponseOp_ResponseRange'ptr" "isResponseOp_Response" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponsePut'ptr_MarshalTo :
  WpMethodCall etcdserverpb "ResponseOp_ResponsePut'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponsePut'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "ResponseOp_ResponsePut'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponsePut'ptr_Size :
  WpMethodCall etcdserverpb "ResponseOp_ResponsePut'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponsePut'ptr_isResponseOp_Response :
  WpMethodCall etcdserverpb "ResponseOp_ResponsePut'ptr" "isResponseOp_Response" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseDeleteRange'ptr_MarshalTo :
  WpMethodCall etcdserverpb "ResponseOp_ResponseDeleteRange'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseDeleteRange'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "ResponseOp_ResponseDeleteRange'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseDeleteRange'ptr_Size :
  WpMethodCall etcdserverpb "ResponseOp_ResponseDeleteRange'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseDeleteRange'ptr_isResponseOp_Response :
  WpMethodCall etcdserverpb "ResponseOp_ResponseDeleteRange'ptr" "isResponseOp_Response" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseTxn'ptr_MarshalTo :
  WpMethodCall etcdserverpb "ResponseOp_ResponseTxn'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseTxn'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "ResponseOp_ResponseTxn'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseTxn'ptr_Size :
  WpMethodCall etcdserverpb "ResponseOp_ResponseTxn'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_ResponseOp_ResponseTxn'ptr_isResponseOp_Response :
  WpMethodCall etcdserverpb "ResponseOp_ResponseTxn'ptr" "isResponseOp_Response" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Version'ptr_MarshalTo :
  WpMethodCall etcdserverpb "Compare_Version'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Version'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "Compare_Version'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Version'ptr_Size :
  WpMethodCall etcdserverpb "Compare_Version'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Version'ptr_isCompare_TargetUnion :
  WpMethodCall etcdserverpb "Compare_Version'ptr" "isCompare_TargetUnion" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CreateRevision'ptr_MarshalTo :
  WpMethodCall etcdserverpb "Compare_CreateRevision'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CreateRevision'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "Compare_CreateRevision'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CreateRevision'ptr_Size :
  WpMethodCall etcdserverpb "Compare_CreateRevision'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_CreateRevision'ptr_isCompare_TargetUnion :
  WpMethodCall etcdserverpb "Compare_CreateRevision'ptr" "isCompare_TargetUnion" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_ModRevision'ptr_MarshalTo :
  WpMethodCall etcdserverpb "Compare_ModRevision'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_ModRevision'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "Compare_ModRevision'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_ModRevision'ptr_Size :
  WpMethodCall etcdserverpb "Compare_ModRevision'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_ModRevision'ptr_isCompare_TargetUnion :
  WpMethodCall etcdserverpb "Compare_ModRevision'ptr" "isCompare_TargetUnion" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Value'ptr_MarshalTo :
  WpMethodCall etcdserverpb "Compare_Value'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Value'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "Compare_Value'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Value'ptr_Size :
  WpMethodCall etcdserverpb "Compare_Value'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Value'ptr_isCompare_TargetUnion :
  WpMethodCall etcdserverpb "Compare_Value'ptr" "isCompare_TargetUnion" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Lease'ptr_MarshalTo :
  WpMethodCall etcdserverpb "Compare_Lease'ptr" "MarshalTo" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Lease'ptr_MarshalToSizedBuffer :
  WpMethodCall etcdserverpb "Compare_Lease'ptr" "MarshalToSizedBuffer" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Lease'ptr_Size :
  WpMethodCall etcdserverpb "Compare_Lease'ptr" "Size" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

Global Instance wp_method_call_Compare_Lease'ptr_isCompare_TargetUnion :
  WpMethodCall etcdserverpb "Compare_Lease'ptr" "isCompare_TargetUnion" _ (is_pkg_defined etcdserverpb) :=
  ltac:(apply wp_method_call'; reflexivity).

End names.

Global Instance wp_globals_alloc_inst `{hG: heapGS Σ, !ffi_semantics _ _} `{!goGlobalsGS Σ} :
  WpGlobalsAlloc etcdserverpb.vars' (GlobalAddrs) (@var_addrs) (λ (_: GlobalAddrs), own_allocated).
Proof. solve_wp_globals_alloc. Qed.

End etcdserverpb.
