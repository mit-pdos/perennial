(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.google_golang_org.grpc.codes.
Require Export New.generatedproof.google_golang_org.grpc.status.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.api.v3.v3rpc.rpctypes.

Set Default Proof Using "Type".

Module rpctypes.

(* type rpctypes.EtcdError *)
Module EtcdError.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  code' : codes.Code.t;
  desc' : go_string;
}.
End def.
End EtcdError.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_EtcdError : Settable EtcdError.t :=
  settable! EtcdError.mk < EtcdError.code'; EtcdError.desc' >.
Global Instance into_val_EtcdError : IntoVal EtcdError.t :=
  {| to_val_def v :=
    struct.val_aux rpctypes.EtcdError [
    "code" ::= #(EtcdError.code' v);
    "desc" ::= #(EtcdError.desc' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_EtcdError : IntoValTyped EtcdError.t rpctypes.EtcdError :=
{|
  default_val := EtcdError.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_EtcdError_code : IntoValStructField "code" rpctypes.EtcdError EtcdError.code'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_EtcdError_desc : IntoValStructField "desc" rpctypes.EtcdError EtcdError.desc'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_EtcdError code' desc':
  PureWp True
    (struct.make #rpctypes.EtcdError (alist_val [
      "code" ::= #code';
      "desc" ::= #desc'
    ]))%struct
    #(EtcdError.mk code' desc').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance EtcdError_struct_fields_split dq l (v : EtcdError.t) :
  StructFieldsSplit dq l v (
    "Hcode" ∷ l ↦s[rpctypes.EtcdError :: "code"]{dq} v.(EtcdError.code') ∗
    "Hdesc" ∷ l ↦s[rpctypes.EtcdError :: "desc"]{dq} v.(EtcdError.desc')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (EtcdError.code' v)) (rpctypes.EtcdError) "code"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type rpctypes.TokenFieldNameGRPCKey *)
Module TokenFieldNameGRPCKey.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End TokenFieldNameGRPCKey.

Section instances.
Context `{ffi_syntax}.
Global Instance into_val_TokenFieldNameGRPCKey : IntoVal TokenFieldNameGRPCKey.t :=
  {| to_val_def v :=
    struct.val_aux rpctypes.TokenFieldNameGRPCKey [
    ]%struct
  |}.

Global Program Instance into_val_typed_TokenFieldNameGRPCKey : IntoValTyped TokenFieldNameGRPCKey.t rpctypes.TokenFieldNameGRPCKey :=
{|
  default_val := TokenFieldNameGRPCKey.mk;
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_TokenFieldNameGRPCKey:
  PureWp True
    (struct.make #rpctypes.TokenFieldNameGRPCKey (alist_val [
    ]))%struct
    #(TokenFieldNameGRPCKey.mk).
Proof. solve_struct_make_pure_wp. Qed.

End instances.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_rpctypes : IsPkgDefinedPure rpctypes :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single rpctypes ∧
      is_pkg_defined_pure google_golang_org.grpc.codes.codes ∧
      is_pkg_defined_pure google_golang_org.grpc.status.status;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_rpctypes : IsPkgDefined rpctypes :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single rpctypes ∗
       is_pkg_defined google_golang_org.grpc.codes.codes ∗
       is_pkg_defined google_golang_org.grpc.status.status)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_Error :
  WpFuncCall rpctypes.Error _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_ErrorDesc :
  WpFuncCall rpctypes.ErrorDesc _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_func_call).

Global Instance wp_method_call_EtcdError_Code :
  WpMethodCall rpctypes.EtcdError.id "Code" _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_EtcdError_Error :
  WpMethodCall rpctypes.EtcdError.id "Error" _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_EtcdError'ptr_Code :
  WpMethodCall (ptrT.id rpctypes.EtcdError.id) "Code" _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_EtcdError'ptr_Error :
  WpMethodCall (ptrT.id rpctypes.EtcdError.id) "Error" _ (is_pkg_defined rpctypes) :=
  ltac:(solve_wp_method_call).

End names.
End rpctypes.
