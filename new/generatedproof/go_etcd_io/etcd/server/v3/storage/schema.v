(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.server.v3.storage.schema.

Set Default Proof Using "Type".

Module schema.

(* type schema.action *)
Module action.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End action.

Global Instance bounded_size_action : BoundedTypeSize schema.action.
Admitted.

Global Instance into_val_action `{ffi_syntax} : IntoVal action.t.
Admitted.

Global Instance into_val_typed_action `{ffi_syntax} : IntoValTyped action.t schema.action.
Admitted.

(* type schema.setKeyAction *)
Module setKeyAction.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End setKeyAction.

Global Instance bounded_size_setKeyAction : BoundedTypeSize schema.setKeyAction.
Admitted.

Global Instance into_val_setKeyAction `{ffi_syntax} : IntoVal setKeyAction.t.
Admitted.

Global Instance into_val_typed_setKeyAction `{ffi_syntax} : IntoValTyped setKeyAction.t schema.setKeyAction.
Admitted.

(* type schema.deleteKeyAction *)
Module deleteKeyAction.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End deleteKeyAction.

Global Instance bounded_size_deleteKeyAction : BoundedTypeSize schema.deleteKeyAction.
Admitted.

Global Instance into_val_deleteKeyAction `{ffi_syntax} : IntoVal deleteKeyAction.t.
Admitted.

Global Instance into_val_typed_deleteKeyAction `{ffi_syntax} : IntoValTyped deleteKeyAction.t schema.deleteKeyAction.
Admitted.

(* type schema.ActionList *)
Module ActionList.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ActionList.

Global Instance bounded_size_ActionList : BoundedTypeSize schema.ActionList.
Admitted.

Global Instance into_val_ActionList `{ffi_syntax} : IntoVal ActionList.t.
Admitted.

Global Instance into_val_typed_ActionList `{ffi_syntax} : IntoValTyped ActionList.t schema.ActionList.
Admitted.

(* type schema.alarmBackend *)
Module alarmBackend.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End alarmBackend.

Global Instance bounded_size_alarmBackend : BoundedTypeSize schema.alarmBackend.
Admitted.

Global Instance into_val_alarmBackend `{ffi_syntax} : IntoVal alarmBackend.t.
Admitted.

Global Instance into_val_typed_alarmBackend `{ffi_syntax} : IntoValTyped alarmBackend.t schema.alarmBackend.
Admitted.

(* type schema.authBackend *)
Module authBackend.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End authBackend.

Global Instance bounded_size_authBackend : BoundedTypeSize schema.authBackend.
Admitted.

Global Instance into_val_authBackend `{ffi_syntax} : IntoVal authBackend.t.
Admitted.

Global Instance into_val_typed_authBackend `{ffi_syntax} : IntoValTyped authBackend.t schema.authBackend.
Admitted.

(* type schema.authReadTx *)
Module authReadTx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End authReadTx.

Global Instance bounded_size_authReadTx : BoundedTypeSize schema.authReadTx.
Admitted.

Global Instance into_val_authReadTx `{ffi_syntax} : IntoVal authReadTx.t.
Admitted.

Global Instance into_val_typed_authReadTx `{ffi_syntax} : IntoValTyped authReadTx.t schema.authReadTx.
Admitted.

(* type schema.authBatchTx *)
Module authBatchTx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End authBatchTx.

Global Instance bounded_size_authBatchTx : BoundedTypeSize schema.authBatchTx.
Admitted.

Global Instance into_val_authBatchTx `{ffi_syntax} : IntoVal authBatchTx.t.
Admitted.

Global Instance into_val_typed_authBatchTx `{ffi_syntax} : IntoValTyped authBatchTx.t schema.authBatchTx.
Admitted.

(* type schema.bucket *)
Module bucket.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bucket.

Global Instance bounded_size_bucket : BoundedTypeSize schema.bucket.
Admitted.

Global Instance into_val_bucket `{ffi_syntax} : IntoVal bucket.t.
Admitted.

Global Instance into_val_typed_bucket `{ffi_syntax} : IntoValTyped bucket.t schema.bucket.
Admitted.

(* type schema.schemaChange *)
Module schemaChange.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End schemaChange.

Global Instance bounded_size_schemaChange : BoundedTypeSize schema.schemaChange.
Admitted.

Global Instance into_val_schemaChange `{ffi_syntax} : IntoVal schemaChange.t.
Admitted.

Global Instance into_val_typed_schemaChange `{ffi_syntax} : IntoValTyped schemaChange.t schema.schemaChange.
Admitted.

(* type schema.simpleSchemaChange *)
Module simpleSchemaChange.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End simpleSchemaChange.

Global Instance bounded_size_simpleSchemaChange : BoundedTypeSize schema.simpleSchemaChange.
Admitted.

Global Instance into_val_simpleSchemaChange `{ffi_syntax} : IntoVal simpleSchemaChange.t.
Admitted.

Global Instance into_val_typed_simpleSchemaChange `{ffi_syntax} : IntoValTyped simpleSchemaChange.t schema.simpleSchemaChange.
Admitted.

(* type schema.membershipBackend *)
Module membershipBackend.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End membershipBackend.

Global Instance bounded_size_membershipBackend : BoundedTypeSize schema.membershipBackend.
Admitted.

Global Instance into_val_membershipBackend `{ffi_syntax} : IntoVal membershipBackend.t.
Admitted.

Global Instance into_val_typed_membershipBackend `{ffi_syntax} : IntoValTyped membershipBackend.t schema.membershipBackend.
Admitted.

(* type schema.migrationPlan *)
Module migrationPlan.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End migrationPlan.

Global Instance bounded_size_migrationPlan : BoundedTypeSize schema.migrationPlan.
Admitted.

Global Instance into_val_migrationPlan `{ffi_syntax} : IntoVal migrationPlan.t.
Admitted.

Global Instance into_val_typed_migrationPlan `{ffi_syntax} : IntoValTyped migrationPlan.t schema.migrationPlan.
Admitted.

(* type schema.migrationStep *)
Module migrationStep.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End migrationStep.

Global Instance bounded_size_migrationStep : BoundedTypeSize schema.migrationStep.
Admitted.

Global Instance into_val_migrationStep `{ffi_syntax} : IntoVal migrationStep.t.
Admitted.

Global Instance into_val_typed_migrationStep `{ffi_syntax} : IntoValTyped migrationStep.t schema.migrationStep.
Admitted.

(* type schema.WALVersion *)
Module WALVersion.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End WALVersion.

Global Instance bounded_size_WALVersion : BoundedTypeSize schema.WALVersion.
Admitted.

Global Instance into_val_WALVersion `{ffi_syntax} : IntoVal WALVersion.t.
Admitted.

Global Instance into_val_typed_WALVersion `{ffi_syntax} : IntoValTyped WALVersion.t schema.WALVersion.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_schema : IsPkgDefinedPure schema :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single schema;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_schema : IsPkgDefined schema :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single schema)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End schema.
