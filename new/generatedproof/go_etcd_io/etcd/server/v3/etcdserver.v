(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.context.
Require Export New.generatedproof.go_etcd_io.etcd.api.v3.etcdserverpb.
Require Export New.generatedproof.go_etcd_io.etcd.server.v3.config.
Require Export New.generatedproof.go_etcd_io.etcd.server.v3.etcdserver.errors.
Require Export New.generatedproof.github_com.prometheus.client_golang.prometheus.
Require Export New.generatedproof.go_etcd_io.etcd.pkg.v3.idutil.
Require Export New.generatedproof.go_etcd_io.etcd.pkg.v3.traceutil.
Require Export New.generatedproof.go_etcd_io.etcd.pkg.v3.wait.
Require Export New.generatedproof.go_etcd_io.etcd.server.v3.auth.
Require Export New.generatedproof.go_etcd_io.etcd.server.v3.etcdserver.apply.
Require Export New.generatedproof.github_com.gogo.protobuf.proto.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.server.v3.etcdserver.

Set Default Proof Using "Type".

Module etcdserver.

(* type etcdserver.serverVersionAdapter *)
Module serverVersionAdapter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End serverVersionAdapter.

Global Instance bounded_size_serverVersionAdapter : BoundedTypeSize etcdserver.serverVersionAdapter.
Admitted.

Global Instance into_val_serverVersionAdapter `{ffi_syntax} : IntoVal serverVersionAdapter.t.
Admitted.

Global Instance into_val_typed_serverVersionAdapter `{ffi_syntax} : IntoValTyped serverVersionAdapter.t etcdserver.serverVersionAdapter.
Admitted.

(* type etcdserver.bootstrappedServer *)
Module bootstrappedServer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedServer.

Global Instance bounded_size_bootstrappedServer : BoundedTypeSize etcdserver.bootstrappedServer.
Admitted.

Global Instance into_val_bootstrappedServer `{ffi_syntax} : IntoVal bootstrappedServer.t.
Admitted.

Global Instance into_val_typed_bootstrappedServer `{ffi_syntax} : IntoValTyped bootstrappedServer.t etcdserver.bootstrappedServer.
Admitted.

(* type etcdserver.bootstrappedStorage *)
Module bootstrappedStorage.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedStorage.

Global Instance bounded_size_bootstrappedStorage : BoundedTypeSize etcdserver.bootstrappedStorage.
Admitted.

Global Instance into_val_bootstrappedStorage `{ffi_syntax} : IntoVal bootstrappedStorage.t.
Admitted.

Global Instance into_val_typed_bootstrappedStorage `{ffi_syntax} : IntoValTyped bootstrappedStorage.t etcdserver.bootstrappedStorage.
Admitted.

(* type etcdserver.bootstrappedBackend *)
Module bootstrappedBackend.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedBackend.

Global Instance bounded_size_bootstrappedBackend : BoundedTypeSize etcdserver.bootstrappedBackend.
Admitted.

Global Instance into_val_bootstrappedBackend `{ffi_syntax} : IntoVal bootstrappedBackend.t.
Admitted.

Global Instance into_val_typed_bootstrappedBackend `{ffi_syntax} : IntoValTyped bootstrappedBackend.t etcdserver.bootstrappedBackend.
Admitted.

(* type etcdserver.bootstrappedCluster *)
Module bootstrappedCluster.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedCluster.

Global Instance bounded_size_bootstrappedCluster : BoundedTypeSize etcdserver.bootstrappedCluster.
Admitted.

Global Instance into_val_bootstrappedCluster `{ffi_syntax} : IntoVal bootstrappedCluster.t.
Admitted.

Global Instance into_val_typed_bootstrappedCluster `{ffi_syntax} : IntoValTyped bootstrappedCluster.t etcdserver.bootstrappedCluster.
Admitted.

(* type etcdserver.bootstrappedRaft *)
Module bootstrappedRaft.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedRaft.

Global Instance bounded_size_bootstrappedRaft : BoundedTypeSize etcdserver.bootstrappedRaft.
Admitted.

Global Instance into_val_bootstrappedRaft `{ffi_syntax} : IntoVal bootstrappedRaft.t.
Admitted.

Global Instance into_val_typed_bootstrappedRaft `{ffi_syntax} : IntoValTyped bootstrappedRaft.t etcdserver.bootstrappedRaft.
Admitted.

(* type etcdserver.snapshotMetadata *)
Module snapshotMetadata.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End snapshotMetadata.

Global Instance bounded_size_snapshotMetadata : BoundedTypeSize etcdserver.snapshotMetadata.
Admitted.

Global Instance into_val_snapshotMetadata `{ffi_syntax} : IntoVal snapshotMetadata.t.
Admitted.

Global Instance into_val_typed_snapshotMetadata `{ffi_syntax} : IntoValTyped snapshotMetadata.t etcdserver.snapshotMetadata.
Admitted.

(* type etcdserver.bootstrappedWAL *)
Module bootstrappedWAL.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End bootstrappedWAL.

Global Instance bounded_size_bootstrappedWAL : BoundedTypeSize etcdserver.bootstrappedWAL.
Admitted.

Global Instance into_val_bootstrappedWAL `{ffi_syntax} : IntoVal bootstrappedWAL.t.
Admitted.

Global Instance into_val_typed_bootstrappedWAL `{ffi_syntax} : IntoValTyped bootstrappedWAL.t etcdserver.bootstrappedWAL.
Admitted.

(* type etcdserver.CorruptionChecker *)
Module CorruptionChecker.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End CorruptionChecker.

Global Instance bounded_size_CorruptionChecker : BoundedTypeSize etcdserver.CorruptionChecker.
Admitted.

Global Instance into_val_CorruptionChecker `{ffi_syntax} : IntoVal CorruptionChecker.t.
Admitted.

Global Instance into_val_typed_CorruptionChecker `{ffi_syntax} : IntoValTyped CorruptionChecker.t etcdserver.CorruptionChecker.
Admitted.

(* type etcdserver.corruptionChecker *)
Module corruptionChecker.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End corruptionChecker.

Global Instance bounded_size_corruptionChecker : BoundedTypeSize etcdserver.corruptionChecker.
Admitted.

Global Instance into_val_corruptionChecker `{ffi_syntax} : IntoVal corruptionChecker.t.
Admitted.

Global Instance into_val_typed_corruptionChecker `{ffi_syntax} : IntoValTyped corruptionChecker.t etcdserver.corruptionChecker.
Admitted.

(* type etcdserver.Hasher *)
Module Hasher.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Hasher.

Global Instance bounded_size_Hasher : BoundedTypeSize etcdserver.Hasher.
Admitted.

Global Instance into_val_Hasher `{ffi_syntax} : IntoVal Hasher.t.
Admitted.

Global Instance into_val_typed_Hasher `{ffi_syntax} : IntoValTyped Hasher.t etcdserver.Hasher.
Admitted.

(* type etcdserver.hasherAdapter *)
Module hasherAdapter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End hasherAdapter.

Global Instance bounded_size_hasherAdapter : BoundedTypeSize etcdserver.hasherAdapter.
Admitted.

Global Instance into_val_hasherAdapter `{ffi_syntax} : IntoVal hasherAdapter.t.
Admitted.

Global Instance into_val_typed_hasherAdapter `{ffi_syntax} : IntoValTyped hasherAdapter.t etcdserver.hasherAdapter.
Admitted.

(* type etcdserver.peerInfo *)
Module peerInfo.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End peerInfo.

Global Instance bounded_size_peerInfo : BoundedTypeSize etcdserver.peerInfo.
Admitted.

Global Instance into_val_peerInfo `{ffi_syntax} : IntoVal peerInfo.t.
Admitted.

Global Instance into_val_typed_peerInfo `{ffi_syntax} : IntoValTyped peerInfo.t etcdserver.peerInfo.
Admitted.

(* type etcdserver.peerHashKVResp *)
Module peerHashKVResp.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End peerHashKVResp.

Global Instance bounded_size_peerHashKVResp : BoundedTypeSize etcdserver.peerHashKVResp.
Admitted.

Global Instance into_val_peerHashKVResp `{ffi_syntax} : IntoVal peerHashKVResp.t.
Admitted.

Global Instance into_val_typed_peerHashKVResp `{ffi_syntax} : IntoValTyped peerHashKVResp.t etcdserver.peerHashKVResp.
Admitted.

(* type etcdserver.hashKVHandler *)
Module hashKVHandler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End hashKVHandler.

Global Instance bounded_size_hashKVHandler : BoundedTypeSize etcdserver.hashKVHandler.
Admitted.

Global Instance into_val_hashKVHandler `{ffi_syntax} : IntoVal hashKVHandler.t.
Admitted.

Global Instance into_val_typed_hashKVHandler `{ffi_syntax} : IntoValTyped hashKVHandler.t etcdserver.hashKVHandler.
Admitted.

(* type etcdserver.toApply *)
Module toApply.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End toApply.

Global Instance bounded_size_toApply : BoundedTypeSize etcdserver.toApply.
Admitted.

Global Instance into_val_toApply `{ffi_syntax} : IntoVal toApply.t.
Admitted.

Global Instance into_val_typed_toApply `{ffi_syntax} : IntoValTyped toApply.t etcdserver.toApply.
Admitted.

(* type etcdserver.raftNode *)
Module raftNode.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End raftNode.

Global Instance bounded_size_raftNode : BoundedTypeSize etcdserver.raftNode.
Admitted.

Global Instance into_val_raftNode `{ffi_syntax} : IntoVal raftNode.t.
Admitted.

Global Instance into_val_typed_raftNode `{ffi_syntax} : IntoValTyped raftNode.t etcdserver.raftNode.
Admitted.

(* type etcdserver.raftNodeConfig *)
Module raftNodeConfig.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End raftNodeConfig.

Global Instance bounded_size_raftNodeConfig : BoundedTypeSize etcdserver.raftNodeConfig.
Admitted.

Global Instance into_val_raftNodeConfig `{ffi_syntax} : IntoVal raftNodeConfig.t.
Admitted.

Global Instance into_val_typed_raftNodeConfig `{ffi_syntax} : IntoValTyped raftNodeConfig.t etcdserver.raftNodeConfig.
Admitted.

(* type etcdserver.Response *)
Module Response.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Response.

Global Instance bounded_size_Response : BoundedTypeSize etcdserver.Response.
Admitted.

Global Instance into_val_Response `{ffi_syntax} : IntoVal Response.t.
Admitted.

Global Instance into_val_typed_Response `{ffi_syntax} : IntoValTyped Response.t etcdserver.Response.
Admitted.

(* type etcdserver.ServerV2 *)
Module ServerV2.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ServerV2.

Global Instance bounded_size_ServerV2 : BoundedTypeSize etcdserver.ServerV2.
Admitted.

Global Instance into_val_ServerV2 `{ffi_syntax} : IntoVal ServerV2.t.
Admitted.

Global Instance into_val_typed_ServerV2 `{ffi_syntax} : IntoValTyped ServerV2.t etcdserver.ServerV2.
Admitted.

(* type etcdserver.ServerV3 *)
Module ServerV3.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ServerV3.

Global Instance bounded_size_ServerV3 : BoundedTypeSize etcdserver.ServerV3.
Admitted.

Global Instance into_val_ServerV3 `{ffi_syntax} : IntoVal ServerV3.t.
Admitted.

Global Instance into_val_typed_ServerV3 `{ffi_syntax} : IntoValTyped ServerV3.t etcdserver.ServerV3.
Admitted.

(* type etcdserver.Server *)
Module Server.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Server.

Global Instance bounded_size_Server : BoundedTypeSize etcdserver.Server.
Admitted.

Global Instance into_val_Server `{ffi_syntax} : IntoVal Server.t.
Admitted.

Global Instance into_val_typed_Server `{ffi_syntax} : IntoValTyped Server.t etcdserver.Server.
Admitted.

(* type etcdserver.EtcdServer *)
Module EtcdServer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End EtcdServer.

Global Instance bounded_size_EtcdServer : BoundedTypeSize etcdserver.EtcdServer.
Admitted.

Global Instance into_val_EtcdServer `{ffi_syntax} : IntoVal EtcdServer.t.
Admitted.

Global Instance into_val_typed_EtcdServer `{ffi_syntax} : IntoValTyped EtcdServer.t etcdserver.EtcdServer.
Admitted.

(* type etcdserver.ServerPeer *)
Module ServerPeer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ServerPeer.

Global Instance bounded_size_ServerPeer : BoundedTypeSize etcdserver.ServerPeer.
Admitted.

Global Instance into_val_ServerPeer `{ffi_syntax} : IntoVal ServerPeer.t.
Admitted.

Global Instance into_val_typed_ServerPeer `{ffi_syntax} : IntoValTyped ServerPeer.t etcdserver.ServerPeer.
Admitted.

(* type etcdserver.ServerPeerV2 *)
Module ServerPeerV2.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ServerPeerV2.

Global Instance bounded_size_ServerPeerV2 : BoundedTypeSize etcdserver.ServerPeerV2.
Admitted.

Global Instance into_val_ServerPeerV2 `{ffi_syntax} : IntoVal ServerPeerV2.t.
Admitted.

Global Instance into_val_typed_ServerPeerV2 `{ffi_syntax} : IntoValTyped ServerPeerV2.t etcdserver.ServerPeerV2.
Admitted.

(* type etcdserver.downgradeEnabledHandler *)
Module downgradeEnabledHandler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End downgradeEnabledHandler.

Global Instance bounded_size_downgradeEnabledHandler : BoundedTypeSize etcdserver.downgradeEnabledHandler.
Admitted.

Global Instance into_val_downgradeEnabledHandler `{ffi_syntax} : IntoVal downgradeEnabledHandler.t.
Admitted.

Global Instance into_val_typed_downgradeEnabledHandler `{ffi_syntax} : IntoValTyped downgradeEnabledHandler.t etcdserver.downgradeEnabledHandler.
Admitted.

(* type etcdserver.etcdProgress *)
Module etcdProgress.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End etcdProgress.

Global Instance bounded_size_etcdProgress : BoundedTypeSize etcdserver.etcdProgress.
Admitted.

Global Instance into_val_etcdProgress `{ffi_syntax} : IntoVal etcdProgress.t.
Admitted.

Global Instance into_val_typed_etcdProgress `{ffi_syntax} : IntoValTyped etcdProgress.t etcdserver.etcdProgress.
Admitted.

(* type etcdserver.raftReadyHandler *)
Module raftReadyHandler.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End raftReadyHandler.

Global Instance bounded_size_raftReadyHandler : BoundedTypeSize etcdserver.raftReadyHandler.
Admitted.

Global Instance into_val_raftReadyHandler `{ffi_syntax} : IntoVal raftReadyHandler.t.
Admitted.

Global Instance into_val_typed_raftReadyHandler `{ffi_syntax} : IntoValTyped raftReadyHandler.t etcdserver.raftReadyHandler.
Admitted.

(* type etcdserver.confChangeResponse *)
Module confChangeResponse.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End confChangeResponse.

Global Instance bounded_size_confChangeResponse : BoundedTypeSize etcdserver.confChangeResponse.
Admitted.

Global Instance into_val_confChangeResponse `{ffi_syntax} : IntoVal confChangeResponse.t.
Admitted.

Global Instance into_val_typed_confChangeResponse `{ffi_syntax} : IntoValTyped confChangeResponse.t etcdserver.confChangeResponse.
Admitted.

(* type etcdserver.AccessController *)
Module AccessController.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AccessController.

Global Instance bounded_size_AccessController : BoundedTypeSize etcdserver.AccessController.
Admitted.

Global Instance into_val_AccessController `{ffi_syntax} : IntoVal AccessController.t.
Admitted.

Global Instance into_val_typed_AccessController `{ffi_syntax} : IntoValTyped AccessController.t etcdserver.AccessController.
Admitted.

(* type etcdserver.notifier *)
Module notifier.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End notifier.

Global Instance bounded_size_notifier : BoundedTypeSize etcdserver.notifier.
Admitted.

Global Instance into_val_notifier `{ffi_syntax} : IntoVal notifier.t.
Admitted.

Global Instance into_val_typed_notifier `{ffi_syntax} : IntoValTyped notifier.t etcdserver.notifier.
Admitted.

(* type etcdserver.panicAlternativeStringer *)
Module panicAlternativeStringer.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End panicAlternativeStringer.

Global Instance bounded_size_panicAlternativeStringer : BoundedTypeSize etcdserver.panicAlternativeStringer.
Admitted.

Global Instance into_val_panicAlternativeStringer `{ffi_syntax} : IntoVal panicAlternativeStringer.t.
Admitted.

Global Instance into_val_typed_panicAlternativeStringer `{ffi_syntax} : IntoValTyped panicAlternativeStringer.t etcdserver.panicAlternativeStringer.
Admitted.

(* type etcdserver.RequestV2 *)
Module RequestV2.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End RequestV2.

Global Instance bounded_size_RequestV2 : BoundedTypeSize etcdserver.RequestV2.
Admitted.

Global Instance into_val_RequestV2 `{ffi_syntax} : IntoVal RequestV2.t.
Admitted.

Global Instance into_val_typed_RequestV2 `{ffi_syntax} : IntoValTyped RequestV2.t etcdserver.RequestV2.
Admitted.

(* type etcdserver.RaftKV *)
Module RaftKV.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End RaftKV.

Global Instance bounded_size_RaftKV : BoundedTypeSize etcdserver.RaftKV.
Admitted.

Global Instance into_val_RaftKV `{ffi_syntax} : IntoVal RaftKV.t.
Admitted.

Global Instance into_val_typed_RaftKV `{ffi_syntax} : IntoValTyped RaftKV.t etcdserver.RaftKV.
Admitted.

(* type etcdserver.Lessor *)
Module Lessor.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Lessor.

Global Instance bounded_size_Lessor : BoundedTypeSize etcdserver.Lessor.
Admitted.

Global Instance into_val_Lessor `{ffi_syntax} : IntoVal Lessor.t.
Admitted.

Global Instance into_val_typed_Lessor `{ffi_syntax} : IntoValTyped Lessor.t etcdserver.Lessor.
Admitted.

(* type etcdserver.Authenticator *)
Module Authenticator.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End Authenticator.

Global Instance bounded_size_Authenticator : BoundedTypeSize etcdserver.Authenticator.
Admitted.

Global Instance into_val_Authenticator `{ffi_syntax} : IntoVal Authenticator.t.
Admitted.

Global Instance into_val_typed_Authenticator `{ffi_syntax} : IntoValTyped Authenticator.t etcdserver.Authenticator.
Admitted.

(* type etcdserver.zapRaftLogger *)
Module zapRaftLogger.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End zapRaftLogger.

Global Instance bounded_size_zapRaftLogger : BoundedTypeSize etcdserver.zapRaftLogger.
Admitted.

Global Instance into_val_zapRaftLogger `{ffi_syntax} : IntoVal zapRaftLogger.t.
Admitted.

Global Instance into_val_typed_zapRaftLogger `{ffi_syntax} : IntoValTyped zapRaftLogger.t etcdserver.zapRaftLogger.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_etcdserver : IsPkgDefinedPure etcdserver :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single etcdserver ∧
      is_pkg_defined_pure code.context.context ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.api.v3.etcdserverpb.etcdserverpb ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.server.v3.config.config ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.server.v3.etcdserver.errors.errors ∧
      is_pkg_defined_pure code.github_com.prometheus.client_golang.prometheus.prometheus ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.pkg.v3.idutil.idutil ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.pkg.v3.traceutil.traceutil ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.pkg.v3.wait.wait ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.server.v3.auth.auth ∧
      is_pkg_defined_pure code.go_etcd_io.etcd.server.v3.etcdserver.apply.apply ∧
      is_pkg_defined_pure code.github_com.gogo.protobuf.proto.proto;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_etcdserver : IsPkgDefined etcdserver :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single etcdserver ∗
       is_pkg_defined code.context.context ∗
       is_pkg_defined code.go_etcd_io.etcd.api.v3.etcdserverpb.etcdserverpb ∗
       is_pkg_defined code.go_etcd_io.etcd.server.v3.config.config ∗
       is_pkg_defined code.go_etcd_io.etcd.server.v3.etcdserver.errors.errors ∗
       is_pkg_defined code.github_com.prometheus.client_golang.prometheus.prometheus ∗
       is_pkg_defined code.go_etcd_io.etcd.pkg.v3.idutil.idutil ∗
       is_pkg_defined code.go_etcd_io.etcd.pkg.v3.traceutil.traceutil ∗
       is_pkg_defined code.go_etcd_io.etcd.pkg.v3.wait.wait ∗
       is_pkg_defined code.go_etcd_io.etcd.server.v3.auth.auth ∗
       is_pkg_defined code.go_etcd_io.etcd.server.v3.etcdserver.apply.apply ∗
       is_pkg_defined code.github_com.gogo.protobuf.proto.proto)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End etcdserver.
