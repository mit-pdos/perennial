(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.server.v3.auth.

Set Default Proof Using "Type".

Module auth.

(* type auth.tokenJWT *)
Module tokenJWT.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End tokenJWT.

Global Instance bounded_size_tokenJWT : BoundedTypeSize auth.tokenJWT.
Admitted.

Global Instance into_val_tokenJWT `{ffi_syntax} : IntoVal tokenJWT.t.
Admitted.

Global Instance into_val_typed_tokenJWT `{ffi_syntax} : IntoValTyped tokenJWT.t auth.tokenJWT.
Admitted.

(* type auth.tokenNop *)
Module tokenNop.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End tokenNop.

Global Instance bounded_size_tokenNop : BoundedTypeSize auth.tokenNop.
Admitted.

Global Instance into_val_tokenNop `{ffi_syntax} : IntoVal tokenNop.t.
Admitted.

Global Instance into_val_typed_tokenNop `{ffi_syntax} : IntoValTyped tokenNop.t auth.tokenNop.
Admitted.

(* type auth.jwtOptions *)
Module jwtOptions.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End jwtOptions.

Global Instance bounded_size_jwtOptions : BoundedTypeSize auth.jwtOptions.
Admitted.

Global Instance into_val_jwtOptions `{ffi_syntax} : IntoVal jwtOptions.t.
Admitted.

Global Instance into_val_typed_jwtOptions `{ffi_syntax} : IntoValTyped jwtOptions.t auth.jwtOptions.
Admitted.

(* type auth.unifiedRangePermissions *)
Module unifiedRangePermissions.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End unifiedRangePermissions.

Global Instance bounded_size_unifiedRangePermissions : BoundedTypeSize auth.unifiedRangePermissions.
Admitted.

Global Instance into_val_unifiedRangePermissions `{ffi_syntax} : IntoVal unifiedRangePermissions.t.
Admitted.

Global Instance into_val_typed_unifiedRangePermissions `{ffi_syntax} : IntoValTyped unifiedRangePermissions.t auth.unifiedRangePermissions.
Admitted.

(* type auth.simpleTokenTTLKeeper *)
Module simpleTokenTTLKeeper.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End simpleTokenTTLKeeper.

Global Instance bounded_size_simpleTokenTTLKeeper : BoundedTypeSize auth.simpleTokenTTLKeeper.
Admitted.

Global Instance into_val_simpleTokenTTLKeeper `{ffi_syntax} : IntoVal simpleTokenTTLKeeper.t.
Admitted.

Global Instance into_val_typed_simpleTokenTTLKeeper `{ffi_syntax} : IntoValTyped simpleTokenTTLKeeper.t auth.simpleTokenTTLKeeper.
Admitted.

(* type auth.tokenSimple *)
Module tokenSimple.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End tokenSimple.

Global Instance bounded_size_tokenSimple : BoundedTypeSize auth.tokenSimple.
Admitted.

Global Instance into_val_tokenSimple `{ffi_syntax} : IntoVal tokenSimple.t.
Admitted.

Global Instance into_val_typed_tokenSimple `{ffi_syntax} : IntoValTyped tokenSimple.t auth.tokenSimple.
Admitted.

(* type auth.AuthInfo *)
Module AuthInfo.
Section def.
Context `{ffi_syntax}.

Record t := mk {
  Username' : go_string;
  Revision' : w64;
}.
End def.
End AuthInfo.

Section instances.
Context `{ffi_syntax}.
#[local] Transparent auth.AuthInfo.
#[local] Typeclasses Transparent auth.AuthInfo.

Global Instance AuthInfo_wf : struct.Wf auth.AuthInfo.
Proof. apply _. Qed.

Global Instance settable_AuthInfo : Settable AuthInfo.t :=
  settable! AuthInfo.mk < AuthInfo.Username'; AuthInfo.Revision' >.
Global Instance into_val_AuthInfo : IntoVal AuthInfo.t :=
  {| to_val_def v :=
    struct.val_aux auth.AuthInfo [
    "Username" ::= #(AuthInfo.Username' v);
    "Revision" ::= #(AuthInfo.Revision' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_AuthInfo : IntoValTyped AuthInfo.t auth.AuthInfo :=
{|
  default_val := AuthInfo.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_AuthInfo_Username : IntoValStructField "Username" auth.AuthInfo AuthInfo.Username'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_AuthInfo_Revision : IntoValStructField "Revision" auth.AuthInfo AuthInfo.Revision'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.


Global Instance AuthInfo_struct_fields_split dq l (v : AuthInfo.t) :
  StructFieldsSplit dq l v (
    "HUsername" ∷ l ↦s[auth.AuthInfo :: "Username"]{dq} v.(AuthInfo.Username') ∗
    "HRevision" ∷ l ↦s[auth.AuthInfo :: "Revision"]{dq} v.(AuthInfo.Revision')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (AuthInfo.Username' v)) (auth.AuthInfo) "Username"%go.

  solve_field_ref_f.
Qed.

End instances.

(* type auth.AuthenticateParamIndex *)
Module AuthenticateParamIndex.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthenticateParamIndex.

Global Instance bounded_size_AuthenticateParamIndex : BoundedTypeSize auth.AuthenticateParamIndex.
Admitted.

Global Instance into_val_AuthenticateParamIndex `{ffi_syntax} : IntoVal AuthenticateParamIndex.t.
Admitted.

Global Instance into_val_typed_AuthenticateParamIndex `{ffi_syntax} : IntoValTyped AuthenticateParamIndex.t auth.AuthenticateParamIndex.
Admitted.

(* type auth.AuthenticateParamSimpleTokenPrefix *)
Module AuthenticateParamSimpleTokenPrefix.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthenticateParamSimpleTokenPrefix.

Global Instance bounded_size_AuthenticateParamSimpleTokenPrefix : BoundedTypeSize auth.AuthenticateParamSimpleTokenPrefix.
Admitted.

Global Instance into_val_AuthenticateParamSimpleTokenPrefix `{ffi_syntax} : IntoVal AuthenticateParamSimpleTokenPrefix.t.
Admitted.

Global Instance into_val_typed_AuthenticateParamSimpleTokenPrefix `{ffi_syntax} : IntoValTyped AuthenticateParamSimpleTokenPrefix.t auth.AuthenticateParamSimpleTokenPrefix.
Admitted.

(* type auth.AuthStore *)
Module AuthStore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthStore.

Global Instance bounded_size_AuthStore : BoundedTypeSize auth.AuthStore.
Admitted.

Global Instance into_val_AuthStore `{ffi_syntax} : IntoVal AuthStore.t.
Admitted.

Global Instance into_val_typed_AuthStore `{ffi_syntax} : IntoValTyped AuthStore.t auth.AuthStore.
Admitted.

(* type auth.TokenProvider *)
Module TokenProvider.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End TokenProvider.

Global Instance bounded_size_TokenProvider : BoundedTypeSize auth.TokenProvider.
Admitted.

Global Instance into_val_TokenProvider `{ffi_syntax} : IntoVal TokenProvider.t.
Admitted.

Global Instance into_val_typed_TokenProvider `{ffi_syntax} : IntoValTyped TokenProvider.t auth.TokenProvider.
Admitted.

(* type auth.AuthBackend *)
Module AuthBackend.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthBackend.

Global Instance bounded_size_AuthBackend : BoundedTypeSize auth.AuthBackend.
Admitted.

Global Instance into_val_AuthBackend `{ffi_syntax} : IntoVal AuthBackend.t.
Admitted.

Global Instance into_val_typed_AuthBackend `{ffi_syntax} : IntoValTyped AuthBackend.t auth.AuthBackend.
Admitted.

(* type auth.AuthReadTx *)
Module AuthReadTx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthReadTx.

Global Instance bounded_size_AuthReadTx : BoundedTypeSize auth.AuthReadTx.
Admitted.

Global Instance into_val_AuthReadTx `{ffi_syntax} : IntoVal AuthReadTx.t.
Admitted.

Global Instance into_val_typed_AuthReadTx `{ffi_syntax} : IntoValTyped AuthReadTx.t auth.AuthReadTx.
Admitted.

(* type auth.UnsafeAuthReader *)
Module UnsafeAuthReader.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End UnsafeAuthReader.

Global Instance bounded_size_UnsafeAuthReader : BoundedTypeSize auth.UnsafeAuthReader.
Admitted.

Global Instance into_val_UnsafeAuthReader `{ffi_syntax} : IntoVal UnsafeAuthReader.t.
Admitted.

Global Instance into_val_typed_UnsafeAuthReader `{ffi_syntax} : IntoValTyped UnsafeAuthReader.t auth.UnsafeAuthReader.
Admitted.

(* type auth.AuthBatchTx *)
Module AuthBatchTx.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End AuthBatchTx.

Global Instance bounded_size_AuthBatchTx : BoundedTypeSize auth.AuthBatchTx.
Admitted.

Global Instance into_val_AuthBatchTx `{ffi_syntax} : IntoVal AuthBatchTx.t.
Admitted.

Global Instance into_val_typed_AuthBatchTx `{ffi_syntax} : IntoValTyped AuthBatchTx.t auth.AuthBatchTx.
Admitted.

(* type auth.UnsafeAuthReadWriter *)
Module UnsafeAuthReadWriter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End UnsafeAuthReadWriter.

Global Instance bounded_size_UnsafeAuthReadWriter : BoundedTypeSize auth.UnsafeAuthReadWriter.
Admitted.

Global Instance into_val_UnsafeAuthReadWriter `{ffi_syntax} : IntoVal UnsafeAuthReadWriter.t.
Admitted.

Global Instance into_val_typed_UnsafeAuthReadWriter `{ffi_syntax} : IntoValTyped UnsafeAuthReadWriter.t auth.UnsafeAuthReadWriter.
Admitted.

(* type auth.UnsafeAuthWriter *)
Module UnsafeAuthWriter.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End UnsafeAuthWriter.

Global Instance bounded_size_UnsafeAuthWriter : BoundedTypeSize auth.UnsafeAuthWriter.
Admitted.

Global Instance into_val_UnsafeAuthWriter `{ffi_syntax} : IntoVal UnsafeAuthWriter.t.
Admitted.

Global Instance into_val_typed_UnsafeAuthWriter `{ffi_syntax} : IntoValTyped UnsafeAuthWriter.t auth.UnsafeAuthWriter.
Admitted.

(* type auth.authStore *)
Module authStore.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End authStore.

Global Instance bounded_size_authStore : BoundedTypeSize auth.authStore.
Admitted.

Global Instance into_val_authStore `{ffi_syntax} : IntoVal authStore.t.
Admitted.

Global Instance into_val_typed_authStore `{ffi_syntax} : IntoValTyped authStore.t auth.authStore.
Admitted.

(* type auth.permSlice *)
Module permSlice.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End permSlice.

Global Instance bounded_size_permSlice : BoundedTypeSize auth.permSlice.
Admitted.

Global Instance into_val_permSlice `{ffi_syntax} : IntoVal permSlice.t.
Admitted.

Global Instance into_val_typed_permSlice `{ffi_syntax} : IntoValTyped permSlice.t auth.permSlice.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_auth : IsPkgDefinedPure auth :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single auth;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_auth : IsPkgDefined auth :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single auth)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End auth.
