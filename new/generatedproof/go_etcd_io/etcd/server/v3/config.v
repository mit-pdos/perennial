(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.etcd.server.v3.config.

Set Default Proof Using "Type".

Module config.

(* type config.ServerConfig *)
Module ServerConfig.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End ServerConfig.

Global Instance bounded_size_ServerConfig : BoundedTypeSize config.ServerConfig.
Admitted.

Global Instance into_val_ServerConfig `{ffi_syntax} : IntoVal ServerConfig.t.
Admitted.

Global Instance into_val_typed_ServerConfig `{ffi_syntax} : IntoValTyped ServerConfig.t config.ServerConfig.
Admitted.

(* type config.V2DeprecationEnum *)
Module V2DeprecationEnum.
Section def.
Context `{ffi_syntax}.
Axiom t : Type.
End def.
End V2DeprecationEnum.

Global Instance bounded_size_V2DeprecationEnum : BoundedTypeSize config.V2DeprecationEnum.
Admitted.

Global Instance into_val_V2DeprecationEnum `{ffi_syntax} : IntoVal V2DeprecationEnum.t.
Admitted.

Global Instance into_val_typed_V2DeprecationEnum `{ffi_syntax} : IntoValTyped V2DeprecationEnum.t config.V2DeprecationEnum.
Admitted.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_config : IsPkgDefinedPure config :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single config;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_config : IsPkgDefined config :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single config)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

End names.
End config.
