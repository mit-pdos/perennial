(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.go_etcd_io.raft.v3.tracker.
Require Export New.golang.theory.

Require Export New.code.go_etcd_io.raft.v3.confchange.

Set Default Proof Using "Type".

Module confchange.

(* type confchange.Changer *)
Module Changer.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Tracker' : tracker.ProgressTracker.t;
  LastIndex' : w64;
}.
End def.
End Changer.

Section instances.
Context `{ffi_syntax}.

Global Instance settable_Changer : Settable Changer.t :=
  settable! Changer.mk < Changer.Tracker'; Changer.LastIndex' >.
Global Instance into_val_Changer : IntoVal Changer.t :=
  {| to_val_def v :=
    struct.val_aux confchange.Changer [
    "Tracker" ::= #(Changer.Tracker' v);
    "LastIndex" ::= #(Changer.LastIndex' v)
    ]%struct
  |}.

Global Program Instance into_val_typed_Changer : IntoValTyped Changer.t confchange.Changer :=
{|
  default_val := Changer.mk (default_val _) (default_val _);
|}.
Next Obligation. solve_to_val_type. Qed.
Next Obligation. solve_zero_val. Qed.
Next Obligation. solve_to_val_inj. Qed.
Final Obligation. solve_decision. Qed.

Global Instance into_val_struct_field_Changer_Tracker : IntoValStructField "Tracker" confchange.Changer Changer.Tracker'.
Proof. solve_into_val_struct_field. Qed.

Global Instance into_val_struct_field_Changer_LastIndex : IntoValStructField "LastIndex" confchange.Changer Changer.LastIndex'.
Proof. solve_into_val_struct_field. Qed.


Context `{!ffi_model, !ffi_semantics _ _, !ffi_interp _, !heapGS Σ}.
Global Instance wp_struct_make_Changer Tracker' LastIndex':
  PureWp True
    (struct.make #confchange.Changer (alist_val [
      "Tracker" ::= #Tracker';
      "LastIndex" ::= #LastIndex'
    ]))%struct
    #(Changer.mk Tracker' LastIndex').
Proof. solve_struct_make_pure_wp. Qed.


Global Instance Changer_struct_fields_split dq l (v : Changer.t) :
  StructFieldsSplit dq l v (
    "HTracker" ∷ l ↦s[confchange.Changer :: "Tracker"]{dq} v.(Changer.Tracker') ∗
    "HLastIndex" ∷ l ↦s[confchange.Changer :: "LastIndex"]{dq} v.(Changer.LastIndex')
  ).
Proof.
  rewrite /named.
  apply struct_fields_split_intro.
  unfold_typed_pointsto; split_pointsto_app.

  rewrite -!/(typed_pointsto_def _ _ _) -!typed_pointsto_unseal.
  simpl_one_flatten_struct (# (Changer.Tracker' v)) (confchange.Changer) "Tracker"%go.

  solve_field_ref_f.
Qed.

End instances.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_confchange : IsPkgDefinedPure confchange :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single confchange ∧
      is_pkg_defined_pure go_etcd_io.raft.v3.tracker.tracker;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_confchange : IsPkgDefined confchange :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single confchange ∗
       is_pkg_defined go_etcd_io.raft.v3.tracker.tracker)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_checkInvariants :
  WpFuncCall confchange.checkInvariants _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_checkAndReturn :
  WpFuncCall confchange.checkAndReturn _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_nilAwareAdd :
  WpFuncCall confchange.nilAwareAdd _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_nilAwareDelete :
  WpFuncCall confchange.nilAwareDelete _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_symdiff :
  WpFuncCall confchange.symdiff _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_joint :
  WpFuncCall confchange.joint _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_incoming :
  WpFuncCall confchange.incoming _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_outgoing :
  WpFuncCall confchange.outgoing _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_outgoingPtr :
  WpFuncCall confchange.outgoingPtr _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Describe :
  WpFuncCall confchange.Describe _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_toConfChangeSingle :
  WpFuncCall confchange.toConfChangeSingle _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_chain :
  WpFuncCall confchange.chain _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Restore :
  WpFuncCall confchange.Restore _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_func_call).

Global Instance wp_method_call_Changer_EnterJoint :
  WpMethodCall confchange.Changer.id "EnterJoint" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_LeaveJoint :
  WpMethodCall confchange.Changer.id "LeaveJoint" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_Simple :
  WpMethodCall confchange.Changer.id "Simple" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_apply :
  WpMethodCall confchange.Changer.id "apply" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_checkAndCopy :
  WpMethodCall confchange.Changer.id "checkAndCopy" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_err :
  WpMethodCall confchange.Changer.id "err" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_initProgress :
  WpMethodCall confchange.Changer.id "initProgress" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_makeLearner :
  WpMethodCall confchange.Changer.id "makeLearner" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_makeVoter :
  WpMethodCall confchange.Changer.id "makeVoter" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer_remove :
  WpMethodCall confchange.Changer.id "remove" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_EnterJoint :
  WpMethodCall (ptrT.id confchange.Changer.id) "EnterJoint" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_LeaveJoint :
  WpMethodCall (ptrT.id confchange.Changer.id) "LeaveJoint" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_Simple :
  WpMethodCall (ptrT.id confchange.Changer.id) "Simple" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_apply :
  WpMethodCall (ptrT.id confchange.Changer.id) "apply" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_checkAndCopy :
  WpMethodCall (ptrT.id confchange.Changer.id) "checkAndCopy" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_err :
  WpMethodCall (ptrT.id confchange.Changer.id) "err" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_initProgress :
  WpMethodCall (ptrT.id confchange.Changer.id) "initProgress" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_makeLearner :
  WpMethodCall (ptrT.id confchange.Changer.id) "makeLearner" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_makeVoter :
  WpMethodCall (ptrT.id confchange.Changer.id) "makeVoter" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

Global Instance wp_method_call_Changer'ptr_remove :
  WpMethodCall (ptrT.id confchange.Changer.id) "remove" _ (is_pkg_defined confchange) :=
  ltac:(solve_wp_method_call).

End names.
End confchange.
