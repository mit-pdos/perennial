(* autogenerated by goose record generator; do not modify *)
From New.code Require Import go_etcd_io.raft.v3.raftpb.
From New.golang Require Import theory.

Axiom falso : False.

Module Entry.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Term : w64;
  Index : w64;
  Type' : w32;
  Data : slice.t;
}.
End def.
End Entry.


Global Instance settable_Entry `{ffi_syntax}: Settable _ :=
  settable! Entry.mk < Entry.Term; Entry.Index; Entry.Type'; Entry.Data >.
Global Instance into_val_Entry `{ffi_syntax} : IntoVal Entry.t.
Admitted.

Global Instance into_val_typed_Entry `{ffi_syntax} : IntoValTyped Entry.t Entry :=
{|
  default_val := Entry.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Entry_Term `{ffi_syntax} : IntoValStructField "Term" Entry Entry.Term.
Admitted.

Global Instance into_val_struct_field_Entry_Index `{ffi_syntax} : IntoValStructField "Index" Entry Entry.Index.
Admitted.

Global Instance into_val_struct_field_Entry_Type `{ffi_syntax} : IntoValStructField "Type" Entry Entry.Type'.
Admitted.

Global Instance into_val_struct_field_Entry_Data `{ffi_syntax} : IntoValStructField "Data" Entry Entry.Data.
Admitted.

Instance wp_struct_make_Entry `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Term Index Type' Data:
  PureWp True
    (struct.make Entry (struct.fields_val [
      "Term" ::= #Term;
      "Index" ::= #Index;
      "Type" ::= #Type';
      "Data" ::= #Data
    ]))%V 
    #(Entry.mk Term Index Type' Data).
Admitted.

Module ConfState.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Voters : slice.t;
  Learners : slice.t;
  VotersOutgoing : slice.t;
  LearnersNext : slice.t;
  AutoLeave : bool;
}.
End def.
End ConfState.


Global Instance settable_ConfState `{ffi_syntax}: Settable _ :=
  settable! ConfState.mk < ConfState.Voters; ConfState.Learners; ConfState.VotersOutgoing; ConfState.LearnersNext; ConfState.AutoLeave >.
Global Instance into_val_ConfState `{ffi_syntax} : IntoVal ConfState.t.
Admitted.

Global Instance into_val_typed_ConfState `{ffi_syntax} : IntoValTyped ConfState.t ConfState :=
{|
  default_val := ConfState.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ConfState_Voters `{ffi_syntax} : IntoValStructField "Voters" ConfState ConfState.Voters.
Admitted.

Global Instance into_val_struct_field_ConfState_Learners `{ffi_syntax} : IntoValStructField "Learners" ConfState ConfState.Learners.
Admitted.

Global Instance into_val_struct_field_ConfState_VotersOutgoing `{ffi_syntax} : IntoValStructField "VotersOutgoing" ConfState ConfState.VotersOutgoing.
Admitted.

Global Instance into_val_struct_field_ConfState_LearnersNext `{ffi_syntax} : IntoValStructField "LearnersNext" ConfState ConfState.LearnersNext.
Admitted.

Global Instance into_val_struct_field_ConfState_AutoLeave `{ffi_syntax} : IntoValStructField "AutoLeave" ConfState ConfState.AutoLeave.
Admitted.

Instance wp_struct_make_ConfState `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Voters Learners VotersOutgoing LearnersNext AutoLeave:
  PureWp True
    (struct.make ConfState (struct.fields_val [
      "Voters" ::= #Voters;
      "Learners" ::= #Learners;
      "VotersOutgoing" ::= #VotersOutgoing;
      "LearnersNext" ::= #LearnersNext;
      "AutoLeave" ::= #AutoLeave
    ]))%V 
    #(ConfState.mk Voters Learners VotersOutgoing LearnersNext AutoLeave).
Admitted.

Module SnapshotMetadata.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ConfState : ConfState.t;
  Index : w64;
  Term : w64;
}.
End def.
End SnapshotMetadata.


Global Instance settable_SnapshotMetadata `{ffi_syntax}: Settable _ :=
  settable! SnapshotMetadata.mk < SnapshotMetadata.ConfState; SnapshotMetadata.Index; SnapshotMetadata.Term >.
Global Instance into_val_SnapshotMetadata `{ffi_syntax} : IntoVal SnapshotMetadata.t.
Admitted.

Global Instance into_val_typed_SnapshotMetadata `{ffi_syntax} : IntoValTyped SnapshotMetadata.t SnapshotMetadata :=
{|
  default_val := SnapshotMetadata.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_SnapshotMetadata_ConfState `{ffi_syntax} : IntoValStructField "ConfState" SnapshotMetadata SnapshotMetadata.ConfState.
Admitted.

Global Instance into_val_struct_field_SnapshotMetadata_Index `{ffi_syntax} : IntoValStructField "Index" SnapshotMetadata SnapshotMetadata.Index.
Admitted.

Global Instance into_val_struct_field_SnapshotMetadata_Term `{ffi_syntax} : IntoValStructField "Term" SnapshotMetadata SnapshotMetadata.Term.
Admitted.

Instance wp_struct_make_SnapshotMetadata `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} ConfState Index Term:
  PureWp True
    (struct.make SnapshotMetadata (struct.fields_val [
      "ConfState" ::= #ConfState;
      "Index" ::= #Index;
      "Term" ::= #Term
    ]))%V 
    #(SnapshotMetadata.mk ConfState Index Term).
Admitted.

Module Snapshot.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Data : slice.t;
  Metadata : SnapshotMetadata.t;
}.
End def.
End Snapshot.


Global Instance settable_Snapshot `{ffi_syntax}: Settable _ :=
  settable! Snapshot.mk < Snapshot.Data; Snapshot.Metadata >.
Global Instance into_val_Snapshot `{ffi_syntax} : IntoVal Snapshot.t.
Admitted.

Global Instance into_val_typed_Snapshot `{ffi_syntax} : IntoValTyped Snapshot.t Snapshot :=
{|
  default_val := Snapshot.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Snapshot_Data `{ffi_syntax} : IntoValStructField "Data" Snapshot Snapshot.Data.
Admitted.

Global Instance into_val_struct_field_Snapshot_Metadata `{ffi_syntax} : IntoValStructField "Metadata" Snapshot Snapshot.Metadata.
Admitted.

Instance wp_struct_make_Snapshot `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Data Metadata:
  PureWp True
    (struct.make Snapshot (struct.fields_val [
      "Data" ::= #Data;
      "Metadata" ::= #Metadata
    ]))%V 
    #(Snapshot.mk Data Metadata).
Admitted.

Module Message.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Type' : w32;
  To : w64;
  From : w64;
  Term : w64;
  LogTerm : w64;
  Index : w64;
  Entries : slice.t;
  Commit : w64;
  Vote : w64;
  Snapshot : loc;
  Reject : bool;
  RejectHint : w64;
  Context : slice.t;
  Responses : slice.t;
}.
End def.
End Message.


Global Instance settable_Message `{ffi_syntax}: Settable _ :=
  settable! Message.mk < Message.Type'; Message.To; Message.From; Message.Term; Message.LogTerm; Message.Index; Message.Entries; Message.Commit; Message.Vote; Message.Snapshot; Message.Reject; Message.RejectHint; Message.Context; Message.Responses >.
Global Instance into_val_Message `{ffi_syntax} : IntoVal Message.t.
Admitted.

Global Instance into_val_typed_Message `{ffi_syntax} : IntoValTyped Message.t Message :=
{|
  default_val := Message.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Message_Type `{ffi_syntax} : IntoValStructField "Type" Message Message.Type'.
Admitted.

Global Instance into_val_struct_field_Message_To `{ffi_syntax} : IntoValStructField "To" Message Message.To.
Admitted.

Global Instance into_val_struct_field_Message_From `{ffi_syntax} : IntoValStructField "From" Message Message.From.
Admitted.

Global Instance into_val_struct_field_Message_Term `{ffi_syntax} : IntoValStructField "Term" Message Message.Term.
Admitted.

Global Instance into_val_struct_field_Message_LogTerm `{ffi_syntax} : IntoValStructField "LogTerm" Message Message.LogTerm.
Admitted.

Global Instance into_val_struct_field_Message_Index `{ffi_syntax} : IntoValStructField "Index" Message Message.Index.
Admitted.

Global Instance into_val_struct_field_Message_Entries `{ffi_syntax} : IntoValStructField "Entries" Message Message.Entries.
Admitted.

Global Instance into_val_struct_field_Message_Commit `{ffi_syntax} : IntoValStructField "Commit" Message Message.Commit.
Admitted.

Global Instance into_val_struct_field_Message_Vote `{ffi_syntax} : IntoValStructField "Vote" Message Message.Vote.
Admitted.

Global Instance into_val_struct_field_Message_Snapshot `{ffi_syntax} : IntoValStructField "Snapshot" Message Message.Snapshot.
Admitted.

Global Instance into_val_struct_field_Message_Reject `{ffi_syntax} : IntoValStructField "Reject" Message Message.Reject.
Admitted.

Global Instance into_val_struct_field_Message_RejectHint `{ffi_syntax} : IntoValStructField "RejectHint" Message Message.RejectHint.
Admitted.

Global Instance into_val_struct_field_Message_Context `{ffi_syntax} : IntoValStructField "Context" Message Message.Context.
Admitted.

Global Instance into_val_struct_field_Message_Responses `{ffi_syntax} : IntoValStructField "Responses" Message Message.Responses.
Admitted.

Instance wp_struct_make_Message `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Type' To From Term LogTerm Index Entries Commit Vote Snapshot Reject RejectHint Context Responses:
  PureWp True
    (struct.make Message (struct.fields_val [
      "Type" ::= #Type';
      "To" ::= #To;
      "From" ::= #From;
      "Term" ::= #Term;
      "LogTerm" ::= #LogTerm;
      "Index" ::= #Index;
      "Entries" ::= #Entries;
      "Commit" ::= #Commit;
      "Vote" ::= #Vote;
      "Snapshot" ::= #Snapshot;
      "Reject" ::= #Reject;
      "RejectHint" ::= #RejectHint;
      "Context" ::= #Context;
      "Responses" ::= #Responses
    ]))%V 
    #(Message.mk Type' To From Term LogTerm Index Entries Commit Vote Snapshot Reject RejectHint Context Responses).
Admitted.

Module HardState.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Term : w64;
  Vote : w64;
  Commit : w64;
}.
End def.
End HardState.


Global Instance settable_HardState `{ffi_syntax}: Settable _ :=
  settable! HardState.mk < HardState.Term; HardState.Vote; HardState.Commit >.
Global Instance into_val_HardState `{ffi_syntax} : IntoVal HardState.t.
Admitted.

Global Instance into_val_typed_HardState `{ffi_syntax} : IntoValTyped HardState.t HardState :=
{|
  default_val := HardState.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_HardState_Term `{ffi_syntax} : IntoValStructField "Term" HardState HardState.Term.
Admitted.

Global Instance into_val_struct_field_HardState_Vote `{ffi_syntax} : IntoValStructField "Vote" HardState HardState.Vote.
Admitted.

Global Instance into_val_struct_field_HardState_Commit `{ffi_syntax} : IntoValStructField "Commit" HardState HardState.Commit.
Admitted.

Instance wp_struct_make_HardState `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Term Vote Commit:
  PureWp True
    (struct.make HardState (struct.fields_val [
      "Term" ::= #Term;
      "Vote" ::= #Vote;
      "Commit" ::= #Commit
    ]))%V 
    #(HardState.mk Term Vote Commit).
Admitted.

Module ConfChange.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Type' : w32;
  NodeID : w64;
  Context : slice.t;
  ID : w64;
}.
End def.
End ConfChange.


Global Instance settable_ConfChange `{ffi_syntax}: Settable _ :=
  settable! ConfChange.mk < ConfChange.Type'; ConfChange.NodeID; ConfChange.Context; ConfChange.ID >.
Global Instance into_val_ConfChange `{ffi_syntax} : IntoVal ConfChange.t.
Admitted.

Global Instance into_val_typed_ConfChange `{ffi_syntax} : IntoValTyped ConfChange.t ConfChange :=
{|
  default_val := ConfChange.mk (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ConfChange_Type `{ffi_syntax} : IntoValStructField "Type" ConfChange ConfChange.Type'.
Admitted.

Global Instance into_val_struct_field_ConfChange_NodeID `{ffi_syntax} : IntoValStructField "NodeID" ConfChange ConfChange.NodeID.
Admitted.

Global Instance into_val_struct_field_ConfChange_Context `{ffi_syntax} : IntoValStructField "Context" ConfChange ConfChange.Context.
Admitted.

Global Instance into_val_struct_field_ConfChange_ID `{ffi_syntax} : IntoValStructField "ID" ConfChange ConfChange.ID.
Admitted.

Instance wp_struct_make_ConfChange `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Type' NodeID Context ID:
  PureWp True
    (struct.make ConfChange (struct.fields_val [
      "Type" ::= #Type';
      "NodeID" ::= #NodeID;
      "Context" ::= #Context;
      "ID" ::= #ID
    ]))%V 
    #(ConfChange.mk Type' NodeID Context ID).
Admitted.

Module ConfChangeSingle.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Type' : w32;
  NodeID : w64;
}.
End def.
End ConfChangeSingle.


Global Instance settable_ConfChangeSingle `{ffi_syntax}: Settable _ :=
  settable! ConfChangeSingle.mk < ConfChangeSingle.Type'; ConfChangeSingle.NodeID >.
Global Instance into_val_ConfChangeSingle `{ffi_syntax} : IntoVal ConfChangeSingle.t.
Admitted.

Global Instance into_val_typed_ConfChangeSingle `{ffi_syntax} : IntoValTyped ConfChangeSingle.t ConfChangeSingle :=
{|
  default_val := ConfChangeSingle.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ConfChangeSingle_Type `{ffi_syntax} : IntoValStructField "Type" ConfChangeSingle ConfChangeSingle.Type'.
Admitted.

Global Instance into_val_struct_field_ConfChangeSingle_NodeID `{ffi_syntax} : IntoValStructField "NodeID" ConfChangeSingle ConfChangeSingle.NodeID.
Admitted.

Instance wp_struct_make_ConfChangeSingle `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Type' NodeID:
  PureWp True
    (struct.make ConfChangeSingle (struct.fields_val [
      "Type" ::= #Type';
      "NodeID" ::= #NodeID
    ]))%V 
    #(ConfChangeSingle.mk Type' NodeID).
Admitted.

Module ConfChangeV2.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Transition : w32;
  Changes : slice.t;
  Context : slice.t;
}.
End def.
End ConfChangeV2.


Global Instance settable_ConfChangeV2 `{ffi_syntax}: Settable _ :=
  settable! ConfChangeV2.mk < ConfChangeV2.Transition; ConfChangeV2.Changes; ConfChangeV2.Context >.
Global Instance into_val_ConfChangeV2 `{ffi_syntax} : IntoVal ConfChangeV2.t.
Admitted.

Global Instance into_val_typed_ConfChangeV2 `{ffi_syntax} : IntoValTyped ConfChangeV2.t ConfChangeV2 :=
{|
  default_val := ConfChangeV2.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ConfChangeV2_Transition `{ffi_syntax} : IntoValStructField "Transition" ConfChangeV2 ConfChangeV2.Transition.
Admitted.

Global Instance into_val_struct_field_ConfChangeV2_Changes `{ffi_syntax} : IntoValStructField "Changes" ConfChangeV2 ConfChangeV2.Changes.
Admitted.

Global Instance into_val_struct_field_ConfChangeV2_Context `{ffi_syntax} : IntoValStructField "Context" ConfChangeV2 ConfChangeV2.Context.
Admitted.

Instance wp_struct_make_ConfChangeV2 `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Transition Changes Context:
  PureWp True
    (struct.make ConfChangeV2 (struct.fields_val [
      "Transition" ::= #Transition;
      "Changes" ::= #Changes;
      "Context" ::= #Context
    ]))%V 
    #(ConfChangeV2.mk Transition Changes Context).
Admitted.

