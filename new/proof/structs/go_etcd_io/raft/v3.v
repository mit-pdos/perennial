(* autogenerated by goose record generator; do not modify *)
From New.code Require Import go_etcd_io.raft.v3.
From New.golang Require Import theory.

From New.proof.structs Require go_etcd_io.raft.v3.raftpb.
From New.proof.structs Require sync.
From New.proof.structs Require go_etcd_io.raft.v3.tracker.
Axiom falso : False.

Module unstable.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  snapshot : loc;
  entries : slice.t;
  offset : w64;
  snapshotInProgress : bool;
  offsetInProgress : w64;
  logger : interface.t;
}.
End def.
End unstable.


Global Instance settable_unstable `{ffi_syntax}: Settable _ :=
  settable! unstable.mk < unstable.snapshot; unstable.entries; unstable.offset; unstable.snapshotInProgress; unstable.offsetInProgress; unstable.logger >.
Global Instance into_val_unstable `{ffi_syntax} : IntoVal unstable.t.
Admitted.

Global Instance into_val_typed_unstable `{ffi_syntax} : IntoValTyped unstable.t unstable :=
{|
  default_val := unstable.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_unstable_snapshot `{ffi_syntax} : IntoValStructField "snapshot" unstable unstable.snapshot.
Admitted.

Global Instance into_val_struct_field_unstable_entries `{ffi_syntax} : IntoValStructField "entries" unstable unstable.entries.
Admitted.

Global Instance into_val_struct_field_unstable_offset `{ffi_syntax} : IntoValStructField "offset" unstable unstable.offset.
Admitted.

Global Instance into_val_struct_field_unstable_snapshotInProgress `{ffi_syntax} : IntoValStructField "snapshotInProgress" unstable unstable.snapshotInProgress.
Admitted.

Global Instance into_val_struct_field_unstable_offsetInProgress `{ffi_syntax} : IntoValStructField "offsetInProgress" unstable unstable.offsetInProgress.
Admitted.

Global Instance into_val_struct_field_unstable_logger `{ffi_syntax} : IntoValStructField "logger" unstable unstable.logger.
Admitted.

Instance wp_struct_make_unstable `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} snapshot entries offset snapshotInProgress offsetInProgress logger:
  PureWp True
    (struct.make unstable (struct.fields_val [
      "snapshot" ::= #snapshot;
      "entries" ::= #entries;
      "offset" ::= #offset;
      "snapshotInProgress" ::= #snapshotInProgress;
      "offsetInProgress" ::= #offsetInProgress;
      "logger" ::= #logger
    ]))%V 
    #(unstable.mk snapshot entries offset snapshotInProgress offsetInProgress logger).
Admitted.

Module raftLog.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  storage : interface.t;
  unstable : unstable.t;
  committed : w64;
  applying : w64;
  applied : w64;
  logger : interface.t;
  maxApplyingEntsSize : w64;
  applyingEntsSize : w64;
  applyingEntsPaused : bool;
}.
End def.
End raftLog.


Global Instance settable_raftLog `{ffi_syntax}: Settable _ :=
  settable! raftLog.mk < raftLog.storage; raftLog.unstable; raftLog.committed; raftLog.applying; raftLog.applied; raftLog.logger; raftLog.maxApplyingEntsSize; raftLog.applyingEntsSize; raftLog.applyingEntsPaused >.
Global Instance into_val_raftLog `{ffi_syntax} : IntoVal raftLog.t.
Admitted.

Global Instance into_val_typed_raftLog `{ffi_syntax} : IntoValTyped raftLog.t raftLog :=
{|
  default_val := raftLog.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_raftLog_storage `{ffi_syntax} : IntoValStructField "storage" raftLog raftLog.storage.
Admitted.

Global Instance into_val_struct_field_raftLog_unstable `{ffi_syntax} : IntoValStructField "unstable" raftLog raftLog.unstable.
Admitted.

Global Instance into_val_struct_field_raftLog_committed `{ffi_syntax} : IntoValStructField "committed" raftLog raftLog.committed.
Admitted.

Global Instance into_val_struct_field_raftLog_applying `{ffi_syntax} : IntoValStructField "applying" raftLog raftLog.applying.
Admitted.

Global Instance into_val_struct_field_raftLog_applied `{ffi_syntax} : IntoValStructField "applied" raftLog raftLog.applied.
Admitted.

Global Instance into_val_struct_field_raftLog_logger `{ffi_syntax} : IntoValStructField "logger" raftLog raftLog.logger.
Admitted.

Global Instance into_val_struct_field_raftLog_maxApplyingEntsSize `{ffi_syntax} : IntoValStructField "maxApplyingEntsSize" raftLog raftLog.maxApplyingEntsSize.
Admitted.

Global Instance into_val_struct_field_raftLog_applyingEntsSize `{ffi_syntax} : IntoValStructField "applyingEntsSize" raftLog raftLog.applyingEntsSize.
Admitted.

Global Instance into_val_struct_field_raftLog_applyingEntsPaused `{ffi_syntax} : IntoValStructField "applyingEntsPaused" raftLog raftLog.applyingEntsPaused.
Admitted.

Instance wp_struct_make_raftLog `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} storage unstable committed applying applied logger maxApplyingEntsSize applyingEntsSize applyingEntsPaused:
  PureWp True
    (struct.make raftLog (struct.fields_val [
      "storage" ::= #storage;
      "unstable" ::= #unstable;
      "committed" ::= #committed;
      "applying" ::= #applying;
      "applied" ::= #applied;
      "logger" ::= #logger;
      "maxApplyingEntsSize" ::= #maxApplyingEntsSize;
      "applyingEntsSize" ::= #applyingEntsSize;
      "applyingEntsPaused" ::= #applyingEntsPaused
    ]))%V 
    #(raftLog.mk storage unstable committed applying applied logger maxApplyingEntsSize applyingEntsSize applyingEntsPaused).
Admitted.

Module DefaultLogger.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Logger : loc;
  debug : bool;
}.
End def.
End DefaultLogger.


Global Instance settable_DefaultLogger `{ffi_syntax}: Settable _ :=
  settable! DefaultLogger.mk < DefaultLogger.Logger; DefaultLogger.debug >.
Global Instance into_val_DefaultLogger `{ffi_syntax} : IntoVal DefaultLogger.t.
Admitted.

Global Instance into_val_typed_DefaultLogger `{ffi_syntax} : IntoValTyped DefaultLogger.t DefaultLogger :=
{|
  default_val := DefaultLogger.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_DefaultLogger_Logger `{ffi_syntax} : IntoValStructField "Logger" DefaultLogger DefaultLogger.Logger.
Admitted.

Global Instance into_val_struct_field_DefaultLogger_debug `{ffi_syntax} : IntoValStructField "debug" DefaultLogger DefaultLogger.debug.
Admitted.

Instance wp_struct_make_DefaultLogger `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Logger debug:
  PureWp True
    (struct.make DefaultLogger (struct.fields_val [
      "Logger" ::= #Logger;
      "debug" ::= #debug
    ]))%V 
    #(DefaultLogger.mk Logger debug).
Admitted.

Module SoftState.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Lead : w64;
  RaftState : w64;
}.
End def.
End SoftState.


Global Instance settable_SoftState `{ffi_syntax}: Settable _ :=
  settable! SoftState.mk < SoftState.Lead; SoftState.RaftState >.
Global Instance into_val_SoftState `{ffi_syntax} : IntoVal SoftState.t.
Admitted.

Global Instance into_val_typed_SoftState `{ffi_syntax} : IntoValTyped SoftState.t SoftState :=
{|
  default_val := SoftState.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_SoftState_Lead `{ffi_syntax} : IntoValStructField "Lead" SoftState SoftState.Lead.
Admitted.

Global Instance into_val_struct_field_SoftState_RaftState `{ffi_syntax} : IntoValStructField "RaftState" SoftState SoftState.RaftState.
Admitted.

Instance wp_struct_make_SoftState `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Lead RaftState:
  PureWp True
    (struct.make SoftState (struct.fields_val [
      "Lead" ::= #Lead;
      "RaftState" ::= #RaftState
    ]))%V 
    #(SoftState.mk Lead RaftState).
Admitted.

Module Ready.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  SoftState : loc;
  HardState : raftpb.HardState.t;
  ReadStates : slice.t;
  Entries : slice.t;
  Snapshot : raftpb.Snapshot.t;
  CommittedEntries : slice.t;
  Messages : slice.t;
  MustSync : bool;
}.
End def.
End Ready.


Global Instance settable_Ready `{ffi_syntax}: Settable _ :=
  settable! Ready.mk < Ready.SoftState; Ready.HardState; Ready.ReadStates; Ready.Entries; Ready.Snapshot; Ready.CommittedEntries; Ready.Messages; Ready.MustSync >.
Global Instance into_val_Ready `{ffi_syntax} : IntoVal Ready.t.
Admitted.

Global Instance into_val_typed_Ready `{ffi_syntax} : IntoValTyped Ready.t Ready :=
{|
  default_val := Ready.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Ready_SoftState `{ffi_syntax} : IntoValStructField "SoftState" Ready Ready.SoftState.
Admitted.

Global Instance into_val_struct_field_Ready_HardState `{ffi_syntax} : IntoValStructField "HardState" Ready Ready.HardState.
Admitted.

Global Instance into_val_struct_field_Ready_ReadStates `{ffi_syntax} : IntoValStructField "ReadStates" Ready Ready.ReadStates.
Admitted.

Global Instance into_val_struct_field_Ready_Entries `{ffi_syntax} : IntoValStructField "Entries" Ready Ready.Entries.
Admitted.

Global Instance into_val_struct_field_Ready_Snapshot `{ffi_syntax} : IntoValStructField "Snapshot" Ready Ready.Snapshot.
Admitted.

Global Instance into_val_struct_field_Ready_CommittedEntries `{ffi_syntax} : IntoValStructField "CommittedEntries" Ready Ready.CommittedEntries.
Admitted.

Global Instance into_val_struct_field_Ready_Messages `{ffi_syntax} : IntoValStructField "Messages" Ready Ready.Messages.
Admitted.

Global Instance into_val_struct_field_Ready_MustSync `{ffi_syntax} : IntoValStructField "MustSync" Ready Ready.MustSync.
Admitted.

Instance wp_struct_make_Ready `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} SoftState HardState ReadStates Entries Snapshot CommittedEntries Messages MustSync:
  PureWp True
    (struct.make Ready (struct.fields_val [
      "SoftState" ::= #SoftState;
      "HardState" ::= #HardState;
      "ReadStates" ::= #ReadStates;
      "Entries" ::= #Entries;
      "Snapshot" ::= #Snapshot;
      "CommittedEntries" ::= #CommittedEntries;
      "Messages" ::= #Messages;
      "MustSync" ::= #MustSync
    ]))%V 
    #(Ready.mk SoftState HardState ReadStates Entries Snapshot CommittedEntries Messages MustSync).
Admitted.

Module Peer.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ID : w64;
  Context : slice.t;
}.
End def.
End Peer.


Global Instance settable_Peer `{ffi_syntax}: Settable _ :=
  settable! Peer.mk < Peer.ID; Peer.Context >.
Global Instance into_val_Peer `{ffi_syntax} : IntoVal Peer.t.
Admitted.

Global Instance into_val_typed_Peer `{ffi_syntax} : IntoValTyped Peer.t Peer :=
{|
  default_val := Peer.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Peer_ID `{ffi_syntax} : IntoValStructField "ID" Peer Peer.ID.
Admitted.

Global Instance into_val_struct_field_Peer_Context `{ffi_syntax} : IntoValStructField "Context" Peer Peer.Context.
Admitted.

Instance wp_struct_make_Peer `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} ID Context:
  PureWp True
    (struct.make Peer (struct.fields_val [
      "ID" ::= #ID;
      "Context" ::= #Context
    ]))%V 
    #(Peer.mk ID Context).
Admitted.

Module msgWithResult.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  m : raftpb.Message.t;
  result : loc;
}.
End def.
End msgWithResult.


Global Instance settable_msgWithResult `{ffi_syntax}: Settable _ :=
  settable! msgWithResult.mk < msgWithResult.m; msgWithResult.result >.
Global Instance into_val_msgWithResult `{ffi_syntax} : IntoVal msgWithResult.t.
Admitted.

Global Instance into_val_typed_msgWithResult `{ffi_syntax} : IntoValTyped msgWithResult.t msgWithResult :=
{|
  default_val := msgWithResult.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_msgWithResult_m `{ffi_syntax} : IntoValStructField "m" msgWithResult msgWithResult.m.
Admitted.

Global Instance into_val_struct_field_msgWithResult_result `{ffi_syntax} : IntoValStructField "result" msgWithResult msgWithResult.result.
Admitted.

Instance wp_struct_make_msgWithResult `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} m result:
  PureWp True
    (struct.make msgWithResult (struct.fields_val [
      "m" ::= #m;
      "result" ::= #result
    ]))%V 
    #(msgWithResult.mk m result).
Admitted.

Module node.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  propc : loc;
  recvc : loc;
  confc : loc;
  confstatec : loc;
  readyc : loc;
  advancec : loc;
  tickc : loc;
  done : loc;
  stop : loc;
  status : loc;
  rn : loc;
}.
End def.
End node.


Global Instance settable_node `{ffi_syntax}: Settable _ :=
  settable! node.mk < node.propc; node.recvc; node.confc; node.confstatec; node.readyc; node.advancec; node.tickc; node.done; node.stop; node.status; node.rn >.
Global Instance into_val_node `{ffi_syntax} : IntoVal node.t.
Admitted.

Global Instance into_val_typed_node `{ffi_syntax} : IntoValTyped node.t node :=
{|
  default_val := node.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_node_propc `{ffi_syntax} : IntoValStructField "propc" node node.propc.
Admitted.

Global Instance into_val_struct_field_node_recvc `{ffi_syntax} : IntoValStructField "recvc" node node.recvc.
Admitted.

Global Instance into_val_struct_field_node_confc `{ffi_syntax} : IntoValStructField "confc" node node.confc.
Admitted.

Global Instance into_val_struct_field_node_confstatec `{ffi_syntax} : IntoValStructField "confstatec" node node.confstatec.
Admitted.

Global Instance into_val_struct_field_node_readyc `{ffi_syntax} : IntoValStructField "readyc" node node.readyc.
Admitted.

Global Instance into_val_struct_field_node_advancec `{ffi_syntax} : IntoValStructField "advancec" node node.advancec.
Admitted.

Global Instance into_val_struct_field_node_tickc `{ffi_syntax} : IntoValStructField "tickc" node node.tickc.
Admitted.

Global Instance into_val_struct_field_node_done `{ffi_syntax} : IntoValStructField "done" node node.done.
Admitted.

Global Instance into_val_struct_field_node_stop `{ffi_syntax} : IntoValStructField "stop" node node.stop.
Admitted.

Global Instance into_val_struct_field_node_status `{ffi_syntax} : IntoValStructField "status" node node.status.
Admitted.

Global Instance into_val_struct_field_node_rn `{ffi_syntax} : IntoValStructField "rn" node node.rn.
Admitted.

Instance wp_struct_make_node `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} propc recvc confc confstatec readyc advancec tickc done stop status rn:
  PureWp True
    (struct.make node (struct.fields_val [
      "propc" ::= #propc;
      "recvc" ::= #recvc;
      "confc" ::= #confc;
      "confstatec" ::= #confstatec;
      "readyc" ::= #readyc;
      "advancec" ::= #advancec;
      "tickc" ::= #tickc;
      "done" ::= #done;
      "stop" ::= #stop;
      "status" ::= #status;
      "rn" ::= #rn
    ]))%V 
    #(node.mk propc recvc confc confstatec readyc advancec tickc done stop status rn).
Admitted.

Module lockedRand.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  mu : sync.Mutex.t;
}.
End def.
End lockedRand.


Global Instance settable_lockedRand `{ffi_syntax}: Settable _ :=
  settable! lockedRand.mk < lockedRand.mu >.
Global Instance into_val_lockedRand `{ffi_syntax} : IntoVal lockedRand.t.
Admitted.

Global Instance into_val_typed_lockedRand `{ffi_syntax} : IntoValTyped lockedRand.t lockedRand :=
{|
  default_val := lockedRand.mk (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_lockedRand_mu `{ffi_syntax} : IntoValStructField "mu" lockedRand lockedRand.mu.
Admitted.

Instance wp_struct_make_lockedRand `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} mu:
  PureWp True
    (struct.make lockedRand (struct.fields_val [
      "mu" ::= #mu
    ]))%V 
    #(lockedRand.mk mu).
Admitted.

Module Config.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ID : w64;
  ElectionTick : w64;
  HeartbeatTick : w64;
  Storage : interface.t;
  Applied : w64;
  AsyncStorageWrites : bool;
  MaxSizePerMsg : w64;
  MaxCommittedSizePerReady : w64;
  MaxUncommittedEntriesSize : w64;
  MaxInflightMsgs : w64;
  MaxInflightBytes : w64;
  CheckQuorum : bool;
  PreVote : bool;
  ReadOnlyOption : w64;
  Logger : interface.t;
  DisableProposalForwarding : bool;
  DisableConfChangeValidation : bool;
  StepDownOnRemoval : bool;
  TraceLogger : interface.t;
}.
End def.
End Config.


Global Instance settable_Config `{ffi_syntax}: Settable _ :=
  settable! Config.mk < Config.ID; Config.ElectionTick; Config.HeartbeatTick; Config.Storage; Config.Applied; Config.AsyncStorageWrites; Config.MaxSizePerMsg; Config.MaxCommittedSizePerReady; Config.MaxUncommittedEntriesSize; Config.MaxInflightMsgs; Config.MaxInflightBytes; Config.CheckQuorum; Config.PreVote; Config.ReadOnlyOption; Config.Logger; Config.DisableProposalForwarding; Config.DisableConfChangeValidation; Config.StepDownOnRemoval; Config.TraceLogger >.
Global Instance into_val_Config `{ffi_syntax} : IntoVal Config.t.
Admitted.

Global Instance into_val_typed_Config `{ffi_syntax} : IntoValTyped Config.t Config :=
{|
  default_val := Config.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Config_ID `{ffi_syntax} : IntoValStructField "ID" Config Config.ID.
Admitted.

Global Instance into_val_struct_field_Config_ElectionTick `{ffi_syntax} : IntoValStructField "ElectionTick" Config Config.ElectionTick.
Admitted.

Global Instance into_val_struct_field_Config_HeartbeatTick `{ffi_syntax} : IntoValStructField "HeartbeatTick" Config Config.HeartbeatTick.
Admitted.

Global Instance into_val_struct_field_Config_Storage `{ffi_syntax} : IntoValStructField "Storage" Config Config.Storage.
Admitted.

Global Instance into_val_struct_field_Config_Applied `{ffi_syntax} : IntoValStructField "Applied" Config Config.Applied.
Admitted.

Global Instance into_val_struct_field_Config_AsyncStorageWrites `{ffi_syntax} : IntoValStructField "AsyncStorageWrites" Config Config.AsyncStorageWrites.
Admitted.

Global Instance into_val_struct_field_Config_MaxSizePerMsg `{ffi_syntax} : IntoValStructField "MaxSizePerMsg" Config Config.MaxSizePerMsg.
Admitted.

Global Instance into_val_struct_field_Config_MaxCommittedSizePerReady `{ffi_syntax} : IntoValStructField "MaxCommittedSizePerReady" Config Config.MaxCommittedSizePerReady.
Admitted.

Global Instance into_val_struct_field_Config_MaxUncommittedEntriesSize `{ffi_syntax} : IntoValStructField "MaxUncommittedEntriesSize" Config Config.MaxUncommittedEntriesSize.
Admitted.

Global Instance into_val_struct_field_Config_MaxInflightMsgs `{ffi_syntax} : IntoValStructField "MaxInflightMsgs" Config Config.MaxInflightMsgs.
Admitted.

Global Instance into_val_struct_field_Config_MaxInflightBytes `{ffi_syntax} : IntoValStructField "MaxInflightBytes" Config Config.MaxInflightBytes.
Admitted.

Global Instance into_val_struct_field_Config_CheckQuorum `{ffi_syntax} : IntoValStructField "CheckQuorum" Config Config.CheckQuorum.
Admitted.

Global Instance into_val_struct_field_Config_PreVote `{ffi_syntax} : IntoValStructField "PreVote" Config Config.PreVote.
Admitted.

Global Instance into_val_struct_field_Config_ReadOnlyOption `{ffi_syntax} : IntoValStructField "ReadOnlyOption" Config Config.ReadOnlyOption.
Admitted.

Global Instance into_val_struct_field_Config_Logger `{ffi_syntax} : IntoValStructField "Logger" Config Config.Logger.
Admitted.

Global Instance into_val_struct_field_Config_DisableProposalForwarding `{ffi_syntax} : IntoValStructField "DisableProposalForwarding" Config Config.DisableProposalForwarding.
Admitted.

Global Instance into_val_struct_field_Config_DisableConfChangeValidation `{ffi_syntax} : IntoValStructField "DisableConfChangeValidation" Config Config.DisableConfChangeValidation.
Admitted.

Global Instance into_val_struct_field_Config_StepDownOnRemoval `{ffi_syntax} : IntoValStructField "StepDownOnRemoval" Config Config.StepDownOnRemoval.
Admitted.

Global Instance into_val_struct_field_Config_TraceLogger `{ffi_syntax} : IntoValStructField "TraceLogger" Config Config.TraceLogger.
Admitted.

Instance wp_struct_make_Config `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} ID ElectionTick HeartbeatTick Storage Applied AsyncStorageWrites MaxSizePerMsg MaxCommittedSizePerReady MaxUncommittedEntriesSize MaxInflightMsgs MaxInflightBytes CheckQuorum PreVote ReadOnlyOption Logger DisableProposalForwarding DisableConfChangeValidation StepDownOnRemoval TraceLogger:
  PureWp True
    (struct.make Config (struct.fields_val [
      "ID" ::= #ID;
      "ElectionTick" ::= #ElectionTick;
      "HeartbeatTick" ::= #HeartbeatTick;
      "Storage" ::= #Storage;
      "Applied" ::= #Applied;
      "AsyncStorageWrites" ::= #AsyncStorageWrites;
      "MaxSizePerMsg" ::= #MaxSizePerMsg;
      "MaxCommittedSizePerReady" ::= #MaxCommittedSizePerReady;
      "MaxUncommittedEntriesSize" ::= #MaxUncommittedEntriesSize;
      "MaxInflightMsgs" ::= #MaxInflightMsgs;
      "MaxInflightBytes" ::= #MaxInflightBytes;
      "CheckQuorum" ::= #CheckQuorum;
      "PreVote" ::= #PreVote;
      "ReadOnlyOption" ::= #ReadOnlyOption;
      "Logger" ::= #Logger;
      "DisableProposalForwarding" ::= #DisableProposalForwarding;
      "DisableConfChangeValidation" ::= #DisableConfChangeValidation;
      "StepDownOnRemoval" ::= #StepDownOnRemoval;
      "TraceLogger" ::= #TraceLogger
    ]))%V 
    #(Config.mk ID ElectionTick HeartbeatTick Storage Applied AsyncStorageWrites MaxSizePerMsg MaxCommittedSizePerReady MaxUncommittedEntriesSize MaxInflightMsgs MaxInflightBytes CheckQuorum PreVote ReadOnlyOption Logger DisableProposalForwarding DisableConfChangeValidation StepDownOnRemoval TraceLogger).
Admitted.

Module raft.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  id : w64;
  Term : w64;
  Vote : w64;
  readStates : slice.t;
  raftLog : loc;
  maxMsgSize : w64;
  maxUncommittedSize : w64;
  trk : tracker.ProgressTracker.t;
  state : w64;
  isLearner : bool;
  msgs : slice.t;
  msgsAfterAppend : slice.t;
  lead : w64;
  leadTransferee : w64;
  pendingConfIndex : w64;
  disableConfChangeValidation : bool;
  uncommittedSize : w64;
  readOnly : loc;
  electionElapsed : w64;
  heartbeatElapsed : w64;
  checkQuorum : bool;
  preVote : bool;
  heartbeatTimeout : w64;
  electionTimeout : w64;
  randomizedElectionTimeout : w64;
  disableProposalForwarding : bool;
  stepDownOnRemoval : bool;
  tickId : w64;
  step : func.t;
  StepHigherOrder : func.t;
  logger : interface.t;
  pendingReadIndexMessages : slice.t;
  traceLogger : interface.t;
}.
End def.
End raft.


Global Instance settable_raft `{ffi_syntax}: Settable _ :=
  settable! raft.mk < raft.id; raft.Term; raft.Vote; raft.readStates; raft.raftLog; raft.maxMsgSize; raft.maxUncommittedSize; raft.trk; raft.state; raft.isLearner; raft.msgs; raft.msgsAfterAppend; raft.lead; raft.leadTransferee; raft.pendingConfIndex; raft.disableConfChangeValidation; raft.uncommittedSize; raft.readOnly; raft.electionElapsed; raft.heartbeatElapsed; raft.checkQuorum; raft.preVote; raft.heartbeatTimeout; raft.electionTimeout; raft.randomizedElectionTimeout; raft.disableProposalForwarding; raft.stepDownOnRemoval; raft.tickId; raft.step; raft.StepHigherOrder; raft.logger; raft.pendingReadIndexMessages; raft.traceLogger >.
Global Instance into_val_raft `{ffi_syntax} : IntoVal raft.t.
Admitted.

Global Instance into_val_typed_raft `{ffi_syntax} : IntoValTyped raft.t raft :=
{|
  default_val := raft.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_raft_id `{ffi_syntax} : IntoValStructField "id" raft raft.id.
Admitted.

Global Instance into_val_struct_field_raft_Term `{ffi_syntax} : IntoValStructField "Term" raft raft.Term.
Admitted.

Global Instance into_val_struct_field_raft_Vote `{ffi_syntax} : IntoValStructField "Vote" raft raft.Vote.
Admitted.

Global Instance into_val_struct_field_raft_readStates `{ffi_syntax} : IntoValStructField "readStates" raft raft.readStates.
Admitted.

Global Instance into_val_struct_field_raft_raftLog `{ffi_syntax} : IntoValStructField "raftLog" raft raft.raftLog.
Admitted.

Global Instance into_val_struct_field_raft_maxMsgSize `{ffi_syntax} : IntoValStructField "maxMsgSize" raft raft.maxMsgSize.
Admitted.

Global Instance into_val_struct_field_raft_maxUncommittedSize `{ffi_syntax} : IntoValStructField "maxUncommittedSize" raft raft.maxUncommittedSize.
Admitted.

Global Instance into_val_struct_field_raft_trk `{ffi_syntax} : IntoValStructField "trk" raft raft.trk.
Admitted.

Global Instance into_val_struct_field_raft_state `{ffi_syntax} : IntoValStructField "state" raft raft.state.
Admitted.

Global Instance into_val_struct_field_raft_isLearner `{ffi_syntax} : IntoValStructField "isLearner" raft raft.isLearner.
Admitted.

Global Instance into_val_struct_field_raft_msgs `{ffi_syntax} : IntoValStructField "msgs" raft raft.msgs.
Admitted.

Global Instance into_val_struct_field_raft_msgsAfterAppend `{ffi_syntax} : IntoValStructField "msgsAfterAppend" raft raft.msgsAfterAppend.
Admitted.

Global Instance into_val_struct_field_raft_lead `{ffi_syntax} : IntoValStructField "lead" raft raft.lead.
Admitted.

Global Instance into_val_struct_field_raft_leadTransferee `{ffi_syntax} : IntoValStructField "leadTransferee" raft raft.leadTransferee.
Admitted.

Global Instance into_val_struct_field_raft_pendingConfIndex `{ffi_syntax} : IntoValStructField "pendingConfIndex" raft raft.pendingConfIndex.
Admitted.

Global Instance into_val_struct_field_raft_disableConfChangeValidation `{ffi_syntax} : IntoValStructField "disableConfChangeValidation" raft raft.disableConfChangeValidation.
Admitted.

Global Instance into_val_struct_field_raft_uncommittedSize `{ffi_syntax} : IntoValStructField "uncommittedSize" raft raft.uncommittedSize.
Admitted.

Global Instance into_val_struct_field_raft_readOnly `{ffi_syntax} : IntoValStructField "readOnly" raft raft.readOnly.
Admitted.

Global Instance into_val_struct_field_raft_electionElapsed `{ffi_syntax} : IntoValStructField "electionElapsed" raft raft.electionElapsed.
Admitted.

Global Instance into_val_struct_field_raft_heartbeatElapsed `{ffi_syntax} : IntoValStructField "heartbeatElapsed" raft raft.heartbeatElapsed.
Admitted.

Global Instance into_val_struct_field_raft_checkQuorum `{ffi_syntax} : IntoValStructField "checkQuorum" raft raft.checkQuorum.
Admitted.

Global Instance into_val_struct_field_raft_preVote `{ffi_syntax} : IntoValStructField "preVote" raft raft.preVote.
Admitted.

Global Instance into_val_struct_field_raft_heartbeatTimeout `{ffi_syntax} : IntoValStructField "heartbeatTimeout" raft raft.heartbeatTimeout.
Admitted.

Global Instance into_val_struct_field_raft_electionTimeout `{ffi_syntax} : IntoValStructField "electionTimeout" raft raft.electionTimeout.
Admitted.

Global Instance into_val_struct_field_raft_randomizedElectionTimeout `{ffi_syntax} : IntoValStructField "randomizedElectionTimeout" raft raft.randomizedElectionTimeout.
Admitted.

Global Instance into_val_struct_field_raft_disableProposalForwarding `{ffi_syntax} : IntoValStructField "disableProposalForwarding" raft raft.disableProposalForwarding.
Admitted.

Global Instance into_val_struct_field_raft_stepDownOnRemoval `{ffi_syntax} : IntoValStructField "stepDownOnRemoval" raft raft.stepDownOnRemoval.
Admitted.

Global Instance into_val_struct_field_raft_tickId `{ffi_syntax} : IntoValStructField "tickId" raft raft.tickId.
Admitted.

Global Instance into_val_struct_field_raft_step `{ffi_syntax} : IntoValStructField "step" raft raft.step.
Admitted.

Global Instance into_val_struct_field_raft_StepHigherOrder `{ffi_syntax} : IntoValStructField "StepHigherOrder" raft raft.StepHigherOrder.
Admitted.

Global Instance into_val_struct_field_raft_logger `{ffi_syntax} : IntoValStructField "logger" raft raft.logger.
Admitted.

Global Instance into_val_struct_field_raft_pendingReadIndexMessages `{ffi_syntax} : IntoValStructField "pendingReadIndexMessages" raft raft.pendingReadIndexMessages.
Admitted.

Global Instance into_val_struct_field_raft_traceLogger `{ffi_syntax} : IntoValStructField "traceLogger" raft raft.traceLogger.
Admitted.

Instance wp_struct_make_raft `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} id Term Vote readStates raftLog maxMsgSize maxUncommittedSize trk state isLearner msgs msgsAfterAppend lead leadTransferee pendingConfIndex disableConfChangeValidation uncommittedSize readOnly electionElapsed heartbeatElapsed checkQuorum preVote heartbeatTimeout electionTimeout randomizedElectionTimeout disableProposalForwarding stepDownOnRemoval tickId step StepHigherOrder logger pendingReadIndexMessages traceLogger:
  PureWp True
    (struct.make raft (struct.fields_val [
      "id" ::= #id;
      "Term" ::= #Term;
      "Vote" ::= #Vote;
      "readStates" ::= #readStates;
      "raftLog" ::= #raftLog;
      "maxMsgSize" ::= #maxMsgSize;
      "maxUncommittedSize" ::= #maxUncommittedSize;
      "trk" ::= #trk;
      "state" ::= #state;
      "isLearner" ::= #isLearner;
      "msgs" ::= #msgs;
      "msgsAfterAppend" ::= #msgsAfterAppend;
      "lead" ::= #lead;
      "leadTransferee" ::= #leadTransferee;
      "pendingConfIndex" ::= #pendingConfIndex;
      "disableConfChangeValidation" ::= #disableConfChangeValidation;
      "uncommittedSize" ::= #uncommittedSize;
      "readOnly" ::= #readOnly;
      "electionElapsed" ::= #electionElapsed;
      "heartbeatElapsed" ::= #heartbeatElapsed;
      "checkQuorum" ::= #checkQuorum;
      "preVote" ::= #preVote;
      "heartbeatTimeout" ::= #heartbeatTimeout;
      "electionTimeout" ::= #electionTimeout;
      "randomizedElectionTimeout" ::= #randomizedElectionTimeout;
      "disableProposalForwarding" ::= #disableProposalForwarding;
      "stepDownOnRemoval" ::= #stepDownOnRemoval;
      "tickId" ::= #tickId;
      "step" ::= #step;
      "StepHigherOrder" ::= #StepHigherOrder;
      "logger" ::= #logger;
      "pendingReadIndexMessages" ::= #pendingReadIndexMessages;
      "traceLogger" ::= #traceLogger
    ]))%V 
    #(raft.mk id Term Vote readStates raftLog maxMsgSize maxUncommittedSize trk state isLearner msgs msgsAfterAppend lead leadTransferee pendingConfIndex disableConfChangeValidation uncommittedSize readOnly electionElapsed heartbeatElapsed checkQuorum preVote heartbeatTimeout electionTimeout randomizedElectionTimeout disableProposalForwarding stepDownOnRemoval tickId step StepHigherOrder logger pendingReadIndexMessages traceLogger).
Admitted.

Module blackHole.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End blackHole.

Global Instance into_val_blackHole `{ffi_syntax} : IntoVal blackHole.t.
Admitted.

Global Instance into_val_typed_blackHole `{ffi_syntax} : IntoValTyped blackHole.t blackHole :=
{|
  default_val := blackHole.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_blackHole `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make blackHole (struct.fields_val [
    ]))%V 
    #(blackHole.mk).
Admitted.

Module connem.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  from : w64;
  to : w64;
}.
End def.
End connem.


Global Instance settable_connem `{ffi_syntax}: Settable _ :=
  settable! connem.mk < connem.from; connem.to >.
Global Instance into_val_connem `{ffi_syntax} : IntoVal connem.t.
Admitted.

Global Instance into_val_typed_connem `{ffi_syntax} : IntoValTyped connem.t connem :=
{|
  default_val := connem.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_connem_from `{ffi_syntax} : IntoValStructField "from" connem connem.from.
Admitted.

Global Instance into_val_struct_field_connem_to `{ffi_syntax} : IntoValStructField "to" connem connem.to.
Admitted.

Instance wp_struct_make_connem `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} from to:
  PureWp True
    (struct.make connem (struct.fields_val [
      "from" ::= #from;
      "to" ::= #to
    ]))%V 
    #(connem.mk from to).
Admitted.

Module network.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  t' : loc;
  peers : loc;
  storage : loc;
  dropm64 : loc;
  ignorem : loc;
  msgHook : func.t;
}.
End def.
End network.


Global Instance settable_network `{ffi_syntax}: Settable _ :=
  settable! network.mk < network.t'; network.peers; network.storage; network.dropm64; network.ignorem; network.msgHook >.
Global Instance into_val_network `{ffi_syntax} : IntoVal network.t.
Admitted.

Global Instance into_val_typed_network `{ffi_syntax} : IntoValTyped network.t network :=
{|
  default_val := network.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_network_t `{ffi_syntax} : IntoValStructField "t" network network.t'.
Admitted.

Global Instance into_val_struct_field_network_peers `{ffi_syntax} : IntoValStructField "peers" network network.peers.
Admitted.

Global Instance into_val_struct_field_network_storage `{ffi_syntax} : IntoValStructField "storage" network network.storage.
Admitted.

Global Instance into_val_struct_field_network_dropm64 `{ffi_syntax} : IntoValStructField "dropm64" network network.dropm64.
Admitted.

Global Instance into_val_struct_field_network_ignorem `{ffi_syntax} : IntoValStructField "ignorem" network network.ignorem.
Admitted.

Global Instance into_val_struct_field_network_msgHook `{ffi_syntax} : IntoValStructField "msgHook" network network.msgHook.
Admitted.

Instance wp_struct_make_network `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} t' peers storage dropm64 ignorem msgHook:
  PureWp True
    (struct.make network (struct.fields_val [
      "t" ::= #t';
      "peers" ::= #peers;
      "storage" ::= #storage;
      "dropm64" ::= #dropm64;
      "ignorem" ::= #ignorem;
      "msgHook" ::= #msgHook
    ]))%V 
    #(network.mk t' peers storage dropm64 ignorem msgHook).
Admitted.

Module testLeaderElectionStruct.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  network : loc;
  state : w64;
  expTerm : w64;
}.
End def.
End testLeaderElectionStruct.


Global Instance settable_testLeaderElectionStruct `{ffi_syntax}: Settable _ :=
  settable! testLeaderElectionStruct.mk < testLeaderElectionStruct.network; testLeaderElectionStruct.state; testLeaderElectionStruct.expTerm >.
Global Instance into_val_testLeaderElectionStruct `{ffi_syntax} : IntoVal testLeaderElectionStruct.t.
Admitted.

Global Instance into_val_typed_testLeaderElectionStruct `{ffi_syntax} : IntoValTyped testLeaderElectionStruct.t testLeaderElectionStruct :=
{|
  default_val := testLeaderElectionStruct.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_testLeaderElectionStruct_network `{ffi_syntax} : IntoValStructField "network" testLeaderElectionStruct testLeaderElectionStruct.network.
Admitted.

Global Instance into_val_struct_field_testLeaderElectionStruct_state `{ffi_syntax} : IntoValStructField "state" testLeaderElectionStruct testLeaderElectionStruct.state.
Admitted.

Global Instance into_val_struct_field_testLeaderElectionStruct_expTerm `{ffi_syntax} : IntoValStructField "expTerm" testLeaderElectionStruct testLeaderElectionStruct.expTerm.
Admitted.

Instance wp_struct_make_testLeaderElectionStruct `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} network state expTerm:
  PureWp True
    (struct.make testLeaderElectionStruct (struct.fields_val [
      "network" ::= #network;
      "state" ::= #state;
      "expTerm" ::= #expTerm
    ]))%V 
    #(testLeaderElectionStruct.mk network state expTerm).
Admitted.

Module RawNode.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  raft : loc;
  asyncStorageWrites : bool;
  prevSoftSt : loc;
  prevHardSt : raftpb.HardState.t;
  stepsOnAdvance : slice.t;
}.
End def.
End RawNode.


Global Instance settable_RawNode `{ffi_syntax}: Settable _ :=
  settable! RawNode.mk < RawNode.raft; RawNode.asyncStorageWrites; RawNode.prevSoftSt; RawNode.prevHardSt; RawNode.stepsOnAdvance >.
Global Instance into_val_RawNode `{ffi_syntax} : IntoVal RawNode.t.
Admitted.

Global Instance into_val_typed_RawNode `{ffi_syntax} : IntoValTyped RawNode.t RawNode :=
{|
  default_val := RawNode.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_RawNode_raft `{ffi_syntax} : IntoValStructField "raft" RawNode RawNode.raft.
Admitted.

Global Instance into_val_struct_field_RawNode_asyncStorageWrites `{ffi_syntax} : IntoValStructField "asyncStorageWrites" RawNode RawNode.asyncStorageWrites.
Admitted.

Global Instance into_val_struct_field_RawNode_prevSoftSt `{ffi_syntax} : IntoValStructField "prevSoftSt" RawNode RawNode.prevSoftSt.
Admitted.

Global Instance into_val_struct_field_RawNode_prevHardSt `{ffi_syntax} : IntoValStructField "prevHardSt" RawNode RawNode.prevHardSt.
Admitted.

Global Instance into_val_struct_field_RawNode_stepsOnAdvance `{ffi_syntax} : IntoValStructField "stepsOnAdvance" RawNode RawNode.stepsOnAdvance.
Admitted.

Instance wp_struct_make_RawNode `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} raft asyncStorageWrites prevSoftSt prevHardSt stepsOnAdvance:
  PureWp True
    (struct.make RawNode (struct.fields_val [
      "raft" ::= #raft;
      "asyncStorageWrites" ::= #asyncStorageWrites;
      "prevSoftSt" ::= #prevSoftSt;
      "prevHardSt" ::= #prevHardSt;
      "stepsOnAdvance" ::= #stepsOnAdvance
    ]))%V 
    #(RawNode.mk raft asyncStorageWrites prevSoftSt prevHardSt stepsOnAdvance).
Admitted.

Module ReadState.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Index : w64;
  RequestCtx : slice.t;
}.
End def.
End ReadState.


Global Instance settable_ReadState `{ffi_syntax}: Settable _ :=
  settable! ReadState.mk < ReadState.Index; ReadState.RequestCtx >.
Global Instance into_val_ReadState `{ffi_syntax} : IntoVal ReadState.t.
Admitted.

Global Instance into_val_typed_ReadState `{ffi_syntax} : IntoValTyped ReadState.t ReadState :=
{|
  default_val := ReadState.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_ReadState_Index `{ffi_syntax} : IntoValStructField "Index" ReadState ReadState.Index.
Admitted.

Global Instance into_val_struct_field_ReadState_RequestCtx `{ffi_syntax} : IntoValStructField "RequestCtx" ReadState ReadState.RequestCtx.
Admitted.

Instance wp_struct_make_ReadState `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Index RequestCtx:
  PureWp True
    (struct.make ReadState (struct.fields_val [
      "Index" ::= #Index;
      "RequestCtx" ::= #RequestCtx
    ]))%V 
    #(ReadState.mk Index RequestCtx).
Admitted.

Module readIndexStatus.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  req : raftpb.Message.t;
  index : w64;
  acks : loc;
}.
End def.
End readIndexStatus.


Global Instance settable_readIndexStatus `{ffi_syntax}: Settable _ :=
  settable! readIndexStatus.mk < readIndexStatus.req; readIndexStatus.index; readIndexStatus.acks >.
Global Instance into_val_readIndexStatus `{ffi_syntax} : IntoVal readIndexStatus.t.
Admitted.

Global Instance into_val_typed_readIndexStatus `{ffi_syntax} : IntoValTyped readIndexStatus.t readIndexStatus :=
{|
  default_val := readIndexStatus.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_readIndexStatus_req `{ffi_syntax} : IntoValStructField "req" readIndexStatus readIndexStatus.req.
Admitted.

Global Instance into_val_struct_field_readIndexStatus_index `{ffi_syntax} : IntoValStructField "index" readIndexStatus readIndexStatus.index.
Admitted.

Global Instance into_val_struct_field_readIndexStatus_acks `{ffi_syntax} : IntoValStructField "acks" readIndexStatus readIndexStatus.acks.
Admitted.

Instance wp_struct_make_readIndexStatus `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} req index acks:
  PureWp True
    (struct.make readIndexStatus (struct.fields_val [
      "req" ::= #req;
      "index" ::= #index;
      "acks" ::= #acks
    ]))%V 
    #(readIndexStatus.mk req index acks).
Admitted.

Module readOnly.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  option : w64;
  pendingReadIndex : loc;
  readIndexQueue : slice.t;
}.
End def.
End readOnly.


Global Instance settable_readOnly `{ffi_syntax}: Settable _ :=
  settable! readOnly.mk < readOnly.option; readOnly.pendingReadIndex; readOnly.readIndexQueue >.
Global Instance into_val_readOnly `{ffi_syntax} : IntoVal readOnly.t.
Admitted.

Global Instance into_val_typed_readOnly `{ffi_syntax} : IntoValTyped readOnly.t readOnly :=
{|
  default_val := readOnly.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_readOnly_option `{ffi_syntax} : IntoValStructField "option" readOnly readOnly.option.
Admitted.

Global Instance into_val_struct_field_readOnly_pendingReadIndex `{ffi_syntax} : IntoValStructField "pendingReadIndex" readOnly readOnly.pendingReadIndex.
Admitted.

Global Instance into_val_struct_field_readOnly_readIndexQueue `{ffi_syntax} : IntoValStructField "readIndexQueue" readOnly readOnly.readIndexQueue.
Admitted.

Instance wp_struct_make_readOnly `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} option pendingReadIndex readIndexQueue:
  PureWp True
    (struct.make readOnly (struct.fields_val [
      "option" ::= #option;
      "pendingReadIndex" ::= #pendingReadIndex;
      "readIndexQueue" ::= #readIndexQueue
    ]))%V 
    #(readOnly.mk option pendingReadIndex readIndexQueue).
Admitted.

Module TracingEvent.
Section def.
Context `{ffi_syntax}.
Record t := mk {
}.
End def.
End TracingEvent.

Global Instance into_val_TracingEvent `{ffi_syntax} : IntoVal TracingEvent.t.
Admitted.

Global Instance into_val_typed_TracingEvent `{ffi_syntax} : IntoValTyped TracingEvent.t TracingEvent :=
{|
  default_val := TracingEvent.mk;
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Instance wp_struct_make_TracingEvent `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ}:
  PureWp True
    (struct.make TracingEvent (struct.fields_val [
    ]))%V 
    #(TracingEvent.mk).
Admitted.

Module BasicStatus.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  ID : w64;
  HardState : raftpb.HardState.t;
  SoftState : SoftState.t;
  Applied : w64;
  LeadTransferee : w64;
}.
End def.
End BasicStatus.


Global Instance settable_BasicStatus `{ffi_syntax}: Settable _ :=
  settable! BasicStatus.mk < BasicStatus.ID; BasicStatus.HardState; BasicStatus.SoftState; BasicStatus.Applied; BasicStatus.LeadTransferee >.
Global Instance into_val_BasicStatus `{ffi_syntax} : IntoVal BasicStatus.t.
Admitted.

Global Instance into_val_typed_BasicStatus `{ffi_syntax} : IntoValTyped BasicStatus.t BasicStatus :=
{|
  default_val := BasicStatus.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_BasicStatus_ID `{ffi_syntax} : IntoValStructField "ID" BasicStatus BasicStatus.ID.
Admitted.

Global Instance into_val_struct_field_BasicStatus_HardState `{ffi_syntax} : IntoValStructField "HardState" BasicStatus BasicStatus.HardState.
Admitted.

Global Instance into_val_struct_field_BasicStatus_SoftState `{ffi_syntax} : IntoValStructField "SoftState" BasicStatus BasicStatus.SoftState.
Admitted.

Global Instance into_val_struct_field_BasicStatus_Applied `{ffi_syntax} : IntoValStructField "Applied" BasicStatus BasicStatus.Applied.
Admitted.

Global Instance into_val_struct_field_BasicStatus_LeadTransferee `{ffi_syntax} : IntoValStructField "LeadTransferee" BasicStatus BasicStatus.LeadTransferee.
Admitted.

Instance wp_struct_make_BasicStatus `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} ID HardState SoftState Applied LeadTransferee:
  PureWp True
    (struct.make BasicStatus (struct.fields_val [
      "ID" ::= #ID;
      "HardState" ::= #HardState;
      "SoftState" ::= #SoftState;
      "Applied" ::= #Applied;
      "LeadTransferee" ::= #LeadTransferee
    ]))%V 
    #(BasicStatus.mk ID HardState SoftState Applied LeadTransferee).
Admitted.

Module Status.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  BasicStatus : BasicStatus.t;
  Config : tracker.Config.t;
  Progress : loc;
}.
End def.
End Status.


Global Instance settable_Status `{ffi_syntax}: Settable _ :=
  settable! Status.mk < Status.BasicStatus; Status.Config; Status.Progress >.
Global Instance into_val_Status `{ffi_syntax} : IntoVal Status.t.
Admitted.

Global Instance into_val_typed_Status `{ffi_syntax} : IntoValTyped Status.t Status :=
{|
  default_val := Status.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_Status_BasicStatus `{ffi_syntax} : IntoValStructField "BasicStatus" Status Status.BasicStatus.
Admitted.

Global Instance into_val_struct_field_Status_Config `{ffi_syntax} : IntoValStructField "Config" Status Status.Config.
Admitted.

Global Instance into_val_struct_field_Status_Progress `{ffi_syntax} : IntoValStructField "Progress" Status Status.Progress.
Admitted.

Instance wp_struct_make_Status `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} BasicStatus Config Progress:
  PureWp True
    (struct.make Status (struct.fields_val [
      "BasicStatus" ::= #BasicStatus;
      "Config" ::= #Config;
      "Progress" ::= #Progress
    ]))%V 
    #(Status.mk BasicStatus Config Progress).
Admitted.

Module inMemStorageCallStats.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  initialState : w64;
  firstIndex : w64;
  lastIndex : w64;
  entries : w64;
  term : w64;
  snapshot : w64;
}.
End def.
End inMemStorageCallStats.


Global Instance settable_inMemStorageCallStats `{ffi_syntax}: Settable _ :=
  settable! inMemStorageCallStats.mk < inMemStorageCallStats.initialState; inMemStorageCallStats.firstIndex; inMemStorageCallStats.lastIndex; inMemStorageCallStats.entries; inMemStorageCallStats.term; inMemStorageCallStats.snapshot >.
Global Instance into_val_inMemStorageCallStats `{ffi_syntax} : IntoVal inMemStorageCallStats.t.
Admitted.

Global Instance into_val_typed_inMemStorageCallStats `{ffi_syntax} : IntoValTyped inMemStorageCallStats.t inMemStorageCallStats :=
{|
  default_val := inMemStorageCallStats.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_inMemStorageCallStats_initialState `{ffi_syntax} : IntoValStructField "initialState" inMemStorageCallStats inMemStorageCallStats.initialState.
Admitted.

Global Instance into_val_struct_field_inMemStorageCallStats_firstIndex `{ffi_syntax} : IntoValStructField "firstIndex" inMemStorageCallStats inMemStorageCallStats.firstIndex.
Admitted.

Global Instance into_val_struct_field_inMemStorageCallStats_lastIndex `{ffi_syntax} : IntoValStructField "lastIndex" inMemStorageCallStats inMemStorageCallStats.lastIndex.
Admitted.

Global Instance into_val_struct_field_inMemStorageCallStats_entries `{ffi_syntax} : IntoValStructField "entries" inMemStorageCallStats inMemStorageCallStats.entries.
Admitted.

Global Instance into_val_struct_field_inMemStorageCallStats_term `{ffi_syntax} : IntoValStructField "term" inMemStorageCallStats inMemStorageCallStats.term.
Admitted.

Global Instance into_val_struct_field_inMemStorageCallStats_snapshot `{ffi_syntax} : IntoValStructField "snapshot" inMemStorageCallStats inMemStorageCallStats.snapshot.
Admitted.

Instance wp_struct_make_inMemStorageCallStats `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} initialState firstIndex lastIndex entries term snapshot:
  PureWp True
    (struct.make inMemStorageCallStats (struct.fields_val [
      "initialState" ::= #initialState;
      "firstIndex" ::= #firstIndex;
      "lastIndex" ::= #lastIndex;
      "entries" ::= #entries;
      "term" ::= #term;
      "snapshot" ::= #snapshot
    ]))%V 
    #(inMemStorageCallStats.mk initialState firstIndex lastIndex entries term snapshot).
Admitted.

Module MemoryStorage.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  Mutex : sync.Mutex.t;
  hardState : raftpb.HardState.t;
  snapshot : raftpb.Snapshot.t;
  ents : slice.t;
  callStats : inMemStorageCallStats.t;
}.
End def.
End MemoryStorage.


Global Instance settable_MemoryStorage `{ffi_syntax}: Settable _ :=
  settable! MemoryStorage.mk < MemoryStorage.Mutex; MemoryStorage.hardState; MemoryStorage.snapshot; MemoryStorage.ents; MemoryStorage.callStats >.
Global Instance into_val_MemoryStorage `{ffi_syntax} : IntoVal MemoryStorage.t.
Admitted.

Global Instance into_val_typed_MemoryStorage `{ffi_syntax} : IntoValTyped MemoryStorage.t MemoryStorage :=
{|
  default_val := MemoryStorage.mk (default_val _) (default_val _) (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_MemoryStorage_Mutex `{ffi_syntax} : IntoValStructField "Mutex" MemoryStorage MemoryStorage.Mutex.
Admitted.

Global Instance into_val_struct_field_MemoryStorage_hardState `{ffi_syntax} : IntoValStructField "hardState" MemoryStorage MemoryStorage.hardState.
Admitted.

Global Instance into_val_struct_field_MemoryStorage_snapshot `{ffi_syntax} : IntoValStructField "snapshot" MemoryStorage MemoryStorage.snapshot.
Admitted.

Global Instance into_val_struct_field_MemoryStorage_ents `{ffi_syntax} : IntoValStructField "ents" MemoryStorage MemoryStorage.ents.
Admitted.

Global Instance into_val_struct_field_MemoryStorage_callStats `{ffi_syntax} : IntoValStructField "callStats" MemoryStorage MemoryStorage.callStats.
Admitted.

Instance wp_struct_make_MemoryStorage `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} Mutex hardState snapshot ents callStats:
  PureWp True
    (struct.make MemoryStorage (struct.fields_val [
      "Mutex" ::= #Mutex;
      "hardState" ::= #hardState;
      "snapshot" ::= #snapshot;
      "ents" ::= #ents;
      "callStats" ::= #callStats
    ]))%V 
    #(MemoryStorage.mk Mutex hardState snapshot ents callStats).
Admitted.

Module entryID.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  term : w64;
  index : w64;
}.
End def.
End entryID.


Global Instance settable_entryID `{ffi_syntax}: Settable _ :=
  settable! entryID.mk < entryID.term; entryID.index >.
Global Instance into_val_entryID `{ffi_syntax} : IntoVal entryID.t.
Admitted.

Global Instance into_val_typed_entryID `{ffi_syntax} : IntoValTyped entryID.t entryID :=
{|
  default_val := entryID.mk (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_entryID_term `{ffi_syntax} : IntoValStructField "term" entryID entryID.term.
Admitted.

Global Instance into_val_struct_field_entryID_index `{ffi_syntax} : IntoValStructField "index" entryID entryID.index.
Admitted.

Instance wp_struct_make_entryID `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} term index:
  PureWp True
    (struct.make entryID (struct.fields_val [
      "term" ::= #term;
      "index" ::= #index
    ]))%V 
    #(entryID.mk term index).
Admitted.

Module logSlice.
Section def.
Context `{ffi_syntax}.
Record t := mk {
  term : w64;
  prev : entryID.t;
  entries : slice.t;
}.
End def.
End logSlice.


Global Instance settable_logSlice `{ffi_syntax}: Settable _ :=
  settable! logSlice.mk < logSlice.term; logSlice.prev; logSlice.entries >.
Global Instance into_val_logSlice `{ffi_syntax} : IntoVal logSlice.t.
Admitted.

Global Instance into_val_typed_logSlice `{ffi_syntax} : IntoValTyped logSlice.t logSlice :=
{|
  default_val := logSlice.mk (default_val _) (default_val _) (default_val _);
  to_val_has_go_type := ltac:(destruct falso);
  default_val_eq_zero_val := ltac:(destruct falso);
  to_val_inj := ltac:(destruct falso);
  to_val_eqdec := ltac:(solve_decision);
|}.
Global Instance into_val_struct_field_logSlice_term `{ffi_syntax} : IntoValStructField "term" logSlice logSlice.term.
Admitted.

Global Instance into_val_struct_field_logSlice_prev `{ffi_syntax} : IntoValStructField "prev" logSlice logSlice.prev.
Admitted.

Global Instance into_val_struct_field_logSlice_entries `{ffi_syntax} : IntoValStructField "entries" logSlice logSlice.entries.
Admitted.

Instance wp_struct_make_logSlice `{ffi_semantics} `{!ffi_interp ffi} `{!heapGS Σ} term prev entries:
  PureWp True
    (struct.make logSlice (struct.fields_val [
      "term" ::= #term;
      "prev" ::= #prev;
      "entries" ::= #entries
    ]))%V 
    #(logSlice.mk term prev entries).
Admitted.

